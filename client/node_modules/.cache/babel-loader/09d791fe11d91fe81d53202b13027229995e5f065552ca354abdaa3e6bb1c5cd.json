{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAccountSet = exports.AccountSetTfFlags = exports.AccountSetAsfFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nvar AccountSetAsfFlags;\n(function (AccountSetAsfFlags) {\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfRequireDest\"] = 1] = \"asfRequireDest\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfRequireAuth\"] = 2] = \"asfRequireAuth\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowXRP\"] = 3] = \"asfDisallowXRP\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisableMaster\"] = 4] = \"asfDisableMaster\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfAccountTxnID\"] = 5] = \"asfAccountTxnID\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfNoFreeze\"] = 6] = \"asfNoFreeze\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfGlobalFreeze\"] = 7] = \"asfGlobalFreeze\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDefaultRipple\"] = 8] = \"asfDefaultRipple\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDepositAuth\"] = 9] = \"asfDepositAuth\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfAuthorizedNFTokenMinter\"] = 10] = \"asfAuthorizedNFTokenMinter\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingNFTokenOffer\"] = 12] = \"asfDisallowIncomingNFTokenOffer\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingCheck\"] = 13] = \"asfDisallowIncomingCheck\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingPayChan\"] = 14] = \"asfDisallowIncomingPayChan\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingTrustline\"] = 15] = \"asfDisallowIncomingTrustline\";\n  AccountSetAsfFlags[AccountSetAsfFlags[\"asfAllowTrustLineClawback\"] = 16] = \"asfAllowTrustLineClawback\";\n})(AccountSetAsfFlags || (exports.AccountSetAsfFlags = AccountSetAsfFlags = {}));\nvar AccountSetTfFlags;\n(function (AccountSetTfFlags) {\n  AccountSetTfFlags[AccountSetTfFlags[\"tfRequireDestTag\"] = 65536] = \"tfRequireDestTag\";\n  AccountSetTfFlags[AccountSetTfFlags[\"tfOptionalDestTag\"] = 131072] = \"tfOptionalDestTag\";\n  AccountSetTfFlags[AccountSetTfFlags[\"tfRequireAuth\"] = 262144] = \"tfRequireAuth\";\n  AccountSetTfFlags[AccountSetTfFlags[\"tfOptionalAuth\"] = 524288] = \"tfOptionalAuth\";\n  AccountSetTfFlags[AccountSetTfFlags[\"tfDisallowXRP\"] = 1048576] = \"tfDisallowXRP\";\n  AccountSetTfFlags[AccountSetTfFlags[\"tfAllowXRP\"] = 2097152] = \"tfAllowXRP\";\n})(AccountSetTfFlags || (exports.AccountSetTfFlags = AccountSetTfFlags = {}));\nconst MIN_TICK_SIZE = 3;\nconst MAX_TICK_SIZE = 15;\nfunction validateAccountSet(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  (0, common_1.validateOptionalField)(tx, 'NFTokenMinter', common_1.isAccount);\n  if (tx.ClearFlag !== undefined) {\n    if (typeof tx.ClearFlag !== 'number') {\n      throw new errors_1.ValidationError('AccountSet: invalid ClearFlag');\n    }\n    if (!Object.values(AccountSetAsfFlags).includes(tx.ClearFlag)) {\n      throw new errors_1.ValidationError('AccountSet: invalid ClearFlag');\n    }\n  }\n  if (tx.Domain !== undefined && typeof tx.Domain !== 'string') {\n    throw new errors_1.ValidationError('AccountSet: invalid Domain');\n  }\n  if (tx.EmailHash !== undefined && typeof tx.EmailHash !== 'string') {\n    throw new errors_1.ValidationError('AccountSet: invalid EmailHash');\n  }\n  if (tx.MessageKey !== undefined && typeof tx.MessageKey !== 'string') {\n    throw new errors_1.ValidationError('AccountSet: invalid MessageKey');\n  }\n  if (tx.SetFlag !== undefined) {\n    if (typeof tx.SetFlag !== 'number') {\n      throw new errors_1.ValidationError('AccountSet: invalid SetFlag');\n    }\n    if (!Object.values(AccountSetAsfFlags).includes(tx.SetFlag)) {\n      throw new errors_1.ValidationError('AccountSet: invalid SetFlag');\n    }\n  }\n  if (tx.TransferRate !== undefined && typeof tx.TransferRate !== 'number') {\n    throw new errors_1.ValidationError('AccountSet: invalid TransferRate');\n  }\n  if (tx.TickSize !== undefined) {\n    if (typeof tx.TickSize !== 'number') {\n      throw new errors_1.ValidationError('AccountSet: invalid TickSize');\n    }\n    if (tx.TickSize !== 0 && (tx.TickSize < MIN_TICK_SIZE || tx.TickSize > MAX_TICK_SIZE)) {\n      throw new errors_1.ValidationError('AccountSet: invalid TickSize');\n    }\n  }\n}\nexports.validateAccountSet = validateAccountSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateAccountSet","AccountSetTfFlags","AccountSetAsfFlags","errors_1","require","common_1","MIN_TICK_SIZE","MAX_TICK_SIZE","tx","validateBaseTransaction","validateOptionalField","isAccount","ClearFlag","undefined","ValidationError","values","includes","Domain","EmailHash","MessageKey","SetFlag","TransferRate","TickSize"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/models/transactions/accountSet.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAccountSet = exports.AccountSetTfFlags = exports.AccountSetAsfFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nvar AccountSetAsfFlags;\n(function (AccountSetAsfFlags) {\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfRequireDest\"] = 1] = \"asfRequireDest\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfRequireAuth\"] = 2] = \"asfRequireAuth\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowXRP\"] = 3] = \"asfDisallowXRP\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisableMaster\"] = 4] = \"asfDisableMaster\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfAccountTxnID\"] = 5] = \"asfAccountTxnID\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfNoFreeze\"] = 6] = \"asfNoFreeze\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfGlobalFreeze\"] = 7] = \"asfGlobalFreeze\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDefaultRipple\"] = 8] = \"asfDefaultRipple\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDepositAuth\"] = 9] = \"asfDepositAuth\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfAuthorizedNFTokenMinter\"] = 10] = \"asfAuthorizedNFTokenMinter\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingNFTokenOffer\"] = 12] = \"asfDisallowIncomingNFTokenOffer\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingCheck\"] = 13] = \"asfDisallowIncomingCheck\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingPayChan\"] = 14] = \"asfDisallowIncomingPayChan\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfDisallowIncomingTrustline\"] = 15] = \"asfDisallowIncomingTrustline\";\n    AccountSetAsfFlags[AccountSetAsfFlags[\"asfAllowTrustLineClawback\"] = 16] = \"asfAllowTrustLineClawback\";\n})(AccountSetAsfFlags || (exports.AccountSetAsfFlags = AccountSetAsfFlags = {}));\nvar AccountSetTfFlags;\n(function (AccountSetTfFlags) {\n    AccountSetTfFlags[AccountSetTfFlags[\"tfRequireDestTag\"] = 65536] = \"tfRequireDestTag\";\n    AccountSetTfFlags[AccountSetTfFlags[\"tfOptionalDestTag\"] = 131072] = \"tfOptionalDestTag\";\n    AccountSetTfFlags[AccountSetTfFlags[\"tfRequireAuth\"] = 262144] = \"tfRequireAuth\";\n    AccountSetTfFlags[AccountSetTfFlags[\"tfOptionalAuth\"] = 524288] = \"tfOptionalAuth\";\n    AccountSetTfFlags[AccountSetTfFlags[\"tfDisallowXRP\"] = 1048576] = \"tfDisallowXRP\";\n    AccountSetTfFlags[AccountSetTfFlags[\"tfAllowXRP\"] = 2097152] = \"tfAllowXRP\";\n})(AccountSetTfFlags || (exports.AccountSetTfFlags = AccountSetTfFlags = {}));\nconst MIN_TICK_SIZE = 3;\nconst MAX_TICK_SIZE = 15;\nfunction validateAccountSet(tx) {\n    (0, common_1.validateBaseTransaction)(tx);\n    (0, common_1.validateOptionalField)(tx, 'NFTokenMinter', common_1.isAccount);\n    if (tx.ClearFlag !== undefined) {\n        if (typeof tx.ClearFlag !== 'number') {\n            throw new errors_1.ValidationError('AccountSet: invalid ClearFlag');\n        }\n        if (!Object.values(AccountSetAsfFlags).includes(tx.ClearFlag)) {\n            throw new errors_1.ValidationError('AccountSet: invalid ClearFlag');\n        }\n    }\n    if (tx.Domain !== undefined && typeof tx.Domain !== 'string') {\n        throw new errors_1.ValidationError('AccountSet: invalid Domain');\n    }\n    if (tx.EmailHash !== undefined && typeof tx.EmailHash !== 'string') {\n        throw new errors_1.ValidationError('AccountSet: invalid EmailHash');\n    }\n    if (tx.MessageKey !== undefined && typeof tx.MessageKey !== 'string') {\n        throw new errors_1.ValidationError('AccountSet: invalid MessageKey');\n    }\n    if (tx.SetFlag !== undefined) {\n        if (typeof tx.SetFlag !== 'number') {\n            throw new errors_1.ValidationError('AccountSet: invalid SetFlag');\n        }\n        if (!Object.values(AccountSetAsfFlags).includes(tx.SetFlag)) {\n            throw new errors_1.ValidationError('AccountSet: invalid SetFlag');\n        }\n    }\n    if (tx.TransferRate !== undefined && typeof tx.TransferRate !== 'number') {\n        throw new errors_1.ValidationError('AccountSet: invalid TransferRate');\n    }\n    if (tx.TickSize !== undefined) {\n        if (typeof tx.TickSize !== 'number') {\n            throw new errors_1.ValidationError('AccountSet: invalid TickSize');\n        }\n        if (tx.TickSize !== 0 &&\n            (tx.TickSize < MIN_TICK_SIZE || tx.TickSize > MAX_TICK_SIZE)) {\n            throw new errors_1.ValidationError('AccountSet: invalid TickSize');\n        }\n    }\n}\nexports.validateAccountSet = validateAccountSet;\n//# sourceMappingURL=accountSet.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
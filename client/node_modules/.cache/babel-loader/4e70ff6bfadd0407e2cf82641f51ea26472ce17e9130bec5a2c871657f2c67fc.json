{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateEscrowCreate = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nfunction validateEscrowCreate(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Amount === undefined) {\n    throw new errors_1.ValidationError('EscrowCreate: missing field Amount');\n  }\n  if (typeof tx.Amount !== 'string') {\n    throw new errors_1.ValidationError('EscrowCreate: Amount must be a string');\n  }\n  (0, common_1.validateRequiredField)(tx, 'Destination', common_1.isAccount);\n  (0, common_1.validateOptionalField)(tx, 'DestinationTag', common_1.isNumber);\n  if (tx.CancelAfter === undefined && tx.FinishAfter === undefined) {\n    throw new errors_1.ValidationError('EscrowCreate: Either CancelAfter or FinishAfter must be specified');\n  }\n  if (tx.FinishAfter === undefined && tx.Condition === undefined) {\n    throw new errors_1.ValidationError('EscrowCreate: Either Condition or FinishAfter must be specified');\n  }\n  if (tx.CancelAfter !== undefined && typeof tx.CancelAfter !== 'number') {\n    throw new errors_1.ValidationError('EscrowCreate: CancelAfter must be a number');\n  }\n  if (tx.FinishAfter !== undefined && typeof tx.FinishAfter !== 'number') {\n    throw new errors_1.ValidationError('EscrowCreate: FinishAfter must be a number');\n  }\n  if (tx.Condition !== undefined && typeof tx.Condition !== 'string') {\n    throw new errors_1.ValidationError('EscrowCreate: Condition must be a string');\n  }\n}\nexports.validateEscrowCreate = validateEscrowCreate;","map":{"version":3,"names":["errors_1","require","common_1","validateEscrowCreate","tx","validateBaseTransaction","Amount","undefined","ValidationError","validateRequiredField","isAccount","validateOptionalField","isNumber","CancelAfter","FinishAfter","Condition","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/escrowCreate.ts"],"sourcesContent":["import { ValidationError } from '../../errors'\n\nimport {\n  Account,\n  BaseTransaction,\n  isAccount,\n  isNumber,\n  validateBaseTransaction,\n  validateOptionalField,\n  validateRequiredField,\n} from './common'\n\n/**\n * Sequester XRP until the escrow process either finishes or is canceled.\n *\n * @category Transaction Models\n */\nexport interface EscrowCreate extends BaseTransaction {\n  TransactionType: 'EscrowCreate'\n  /**\n   * Amount of XRP, in drops, to deduct from the sender's balance and escrow.\n   * Once escrowed, the XRP can either go to the Destination address (after the.\n   * FinishAfter time) or returned to the sender (after the CancelAfter time).\n   */\n  Amount: string\n  /** Address to receive escrowed XRP. */\n  Destination: Account\n  /**\n   * The time, in seconds since the Ripple Epoch, when this escrow expires.\n   * This value is immutable; the funds can only be returned the sender after.\n   * this time.\n   */\n  CancelAfter?: number\n  /**\n   * The time, in seconds since the Ripple Epoch, when the escrowed XRP can be\n   * released to the recipient. This value is immutable; the funds cannot move.\n   * until this time is reached.\n   */\n  FinishAfter?: number\n  /**\n   * Hex value representing a PREIMAGE-SHA-256 crypto-condition . The funds can.\n   * only be delivered to the recipient if this condition is fulfilled.\n   */\n  Condition?: string\n  /**\n   * Arbitrary tag to further specify the destination for this escrowed.\n   * payment, such as a hosted recipient at the destination address.\n   */\n  DestinationTag?: number\n}\n\n/**\n * Verify the form and type of an EscrowCreate at runtime.\n *\n * @param tx - An EscrowCreate Transaction.\n * @throws When the EscrowCreate is Malformed.\n */\nexport function validateEscrowCreate(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  if (tx.Amount === undefined) {\n    throw new ValidationError('EscrowCreate: missing field Amount')\n  }\n\n  if (typeof tx.Amount !== 'string') {\n    throw new ValidationError('EscrowCreate: Amount must be a string')\n  }\n\n  validateRequiredField(tx, 'Destination', isAccount)\n  validateOptionalField(tx, 'DestinationTag', isNumber)\n\n  if (tx.CancelAfter === undefined && tx.FinishAfter === undefined) {\n    throw new ValidationError(\n      'EscrowCreate: Either CancelAfter or FinishAfter must be specified',\n    )\n  }\n\n  if (tx.FinishAfter === undefined && tx.Condition === undefined) {\n    throw new ValidationError(\n      'EscrowCreate: Either Condition or FinishAfter must be specified',\n    )\n  }\n\n  if (tx.CancelAfter !== undefined && typeof tx.CancelAfter !== 'number') {\n    throw new ValidationError('EscrowCreate: CancelAfter must be a number')\n  }\n\n  if (tx.FinishAfter !== undefined && typeof tx.FinishAfter !== 'number') {\n    throw new ValidationError('EscrowCreate: FinishAfter must be a number')\n  }\n\n  if (tx.Condition !== undefined && typeof tx.Condition !== 'string') {\n    throw new ValidationError('EscrowCreate: Condition must be a string')\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAAC,QAAA,GAAAD,OAAA;AAuDA,SAAgBE,oBAAoBA,CAACC,EAA2B;EAC9D,IAAAF,QAAA,CAAAG,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAIA,EAAE,CAACE,MAAM,KAAKC,SAAS,EAAE;IAC3B,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CAAC,oCAAoC,CAAC;;EAGjE,IAAI,OAAOJ,EAAE,CAACE,MAAM,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIN,QAAA,CAAAQ,eAAe,CAAC,uCAAuC,CAAC;;EAGpE,IAAAN,QAAA,CAAAO,qBAAqB,EAACL,EAAE,EAAE,aAAa,EAAEF,QAAA,CAAAQ,SAAS,CAAC;EACnD,IAAAR,QAAA,CAAAS,qBAAqB,EAACP,EAAE,EAAE,gBAAgB,EAAEF,QAAA,CAAAU,QAAQ,CAAC;EAErD,IAAIR,EAAE,CAACS,WAAW,KAAKN,SAAS,IAAIH,EAAE,CAACU,WAAW,KAAKP,SAAS,EAAE;IAChE,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CACvB,mEAAmE,CACpE;;EAGH,IAAIJ,EAAE,CAACU,WAAW,KAAKP,SAAS,IAAIH,EAAE,CAACW,SAAS,KAAKR,SAAS,EAAE;IAC9D,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CACvB,iEAAiE,CAClE;;EAGH,IAAIJ,EAAE,CAACS,WAAW,KAAKN,SAAS,IAAI,OAAOH,EAAE,CAACS,WAAW,KAAK,QAAQ,EAAE;IACtE,MAAM,IAAIb,QAAA,CAAAQ,eAAe,CAAC,4CAA4C,CAAC;;EAGzE,IAAIJ,EAAE,CAACU,WAAW,KAAKP,SAAS,IAAI,OAAOH,EAAE,CAACU,WAAW,KAAK,QAAQ,EAAE;IACtE,MAAM,IAAId,QAAA,CAAAQ,eAAe,CAAC,4CAA4C,CAAC;;EAGzE,IAAIJ,EAAE,CAACW,SAAS,KAAKR,SAAS,IAAI,OAAOH,EAAE,CAACW,SAAS,KAAK,QAAQ,EAAE;IAClE,MAAM,IAAIf,QAAA,CAAAQ,eAAe,CAAC,0CAA0C,CAAC;;AAEzE;AArCAQ,OAAA,CAAAb,oBAAA,GAAAA,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
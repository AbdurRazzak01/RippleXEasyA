{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseAccountRootFlags = exports.setTransactionFlagsToNumber = exports.LedgerEntry = void 0;\nexports.LedgerEntry = __importStar(require(\"./ledger\"));\nvar flags_1 = require(\"./utils/flags\");\nObject.defineProperty(exports, \"setTransactionFlagsToNumber\", {\n  enumerable: true,\n  get: function () {\n    return flags_1.setTransactionFlagsToNumber;\n  }\n});\nObject.defineProperty(exports, \"parseAccountRootFlags\", {\n  enumerable: true,\n  get: function () {\n    return flags_1.parseAccountRootFlags;\n  }\n});\n__exportStar(require(\"./methods\"), exports);\n__exportStar(require(\"./transactions\"), exports);\n__exportStar(require(\"./common\"), exports);","map":{"version":3,"names":["exports","LedgerEntry","__importStar","require","flags_1","Object","defineProperty","enumerable","get","setTransactionFlagsToNumber","parseAccountRootFlags","__exportStar"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/index.ts"],"sourcesContent":["/**\n * LedgerEntry type definitions are exported in their own namespace to prevent\n * collisions of the DepositPreauth SLE and Transaction. LedgerEntries are used\n * by the client less often, and in most scenarios, like when parsing a\n * response, the client won't need to import the type. If it is required to use\n * a Ledger Entry, import `LedgerEntry`, and access individual ledger entry\n * types on the `LedgerEntry` namespace.\n */\nexport * as LedgerEntry from './ledger'\nexport {\n  setTransactionFlagsToNumber,\n  parseAccountRootFlags,\n} from './utils/flags'\nexport * from './methods'\nexport * from './transactions'\nexport * from './common'\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQAA,OAAA,CAAAC,WAAA,GAAAC,YAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACEE,MAAA,CAAAC,cAAA,CAAAN,OAAA;EAAAO,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAJ,OAAA,CAAAK,2BAA2B;EAAA;AAAA;AAC3BJ,MAAA,CAAAC,cAAA,CAAAN,OAAA;EAAAO,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAJ,OAAA,CAAAM,qBAAqB;EAAA;AAAA;AAEvBC,YAAA,CAAAR,OAAA,eAAAH,OAAA;AACAW,YAAA,CAAAR,OAAA,oBAAAH,OAAA;AACAW,YAAA,CAAAR,OAAA,cAAAH,OAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
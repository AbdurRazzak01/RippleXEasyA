{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.equal = exports.concat = void 0;\nconst utils_1 = require(\"@noble/hashes/utils\");\nfunction concat(views) {\n  return (0, utils_1.concatBytes)(...views);\n}\nexports.concat = concat;\nfunction equal(buf1, buf2) {\n  if (buf1.byteLength !== buf2.byteLength) {\n    return false;\n  }\n  const dv1 = new Int8Array(buf1);\n  const dv2 = new Int8Array(buf2);\n  for (let i = 0; i !== buf1.byteLength; i++) {\n    if (dv1[i] !== dv2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.equal = equal;","map":{"version":3,"names":["utils_1","require","concat","views","concatBytes","exports","equal","buf1","buf2","byteLength","dv1","Int8Array","dv2","i"],"sources":["/Users/mdabdurrazzak/node_modules/@xrplf/isomorphic/src/utils/shared.ts"],"sourcesContent":["import { concatBytes } from '@noble/hashes/utils'\n\nexport function concat(views: Uint8Array[]): Uint8Array {\n  return concatBytes(...views)\n}\n\nexport function equal(buf1: Uint8Array, buf2: Uint8Array): boolean {\n  if (buf1.byteLength !== buf2.byteLength) {\n    return false\n  }\n  const dv1 = new Int8Array(buf1)\n  const dv2 = new Int8Array(buf2)\n  for (let i = 0; i !== buf1.byteLength; i++) {\n    if (dv1[i] !== dv2[i]) {\n      return false\n    }\n  }\n  return true\n}\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAEA,SAAgBC,MAAMA,CAACC,KAAmB;EACxC,OAAO,IAAAH,OAAA,CAAAI,WAAW,EAAC,GAAGD,KAAK,CAAC;AAC9B;AAFAE,OAAA,CAAAH,MAAA,GAAAA,MAAA;AAIA,SAAgBI,KAAKA,CAACC,IAAgB,EAAEC,IAAgB;EACtD,IAAID,IAAI,CAACE,UAAU,KAAKD,IAAI,CAACC,UAAU,EAAE;IACvC,OAAO,KAAK;;EAEd,MAAMC,GAAG,GAAG,IAAIC,SAAS,CAACJ,IAAI,CAAC;EAC/B,MAAMK,GAAG,GAAG,IAAID,SAAS,CAACH,IAAI,CAAC;EAC/B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,KAAKN,IAAI,CAACE,UAAU,EAAEI,CAAC,EAAE,EAAE;IAC1C,IAAIH,GAAG,CAACG,CAAC,CAAC,KAAKD,GAAG,CAACC,CAAC,CAAC,EAAE;MACrB,OAAO,KAAK;;;EAGhB,OAAO,IAAI;AACb;AAZAR,OAAA,CAAAC,KAAA,GAAAA,KAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
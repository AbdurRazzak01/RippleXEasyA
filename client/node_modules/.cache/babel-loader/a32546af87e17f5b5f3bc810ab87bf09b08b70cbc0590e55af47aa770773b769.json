{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isoTimeToRippleTime = exports.rippleTimeToISOTime = exports.unixTimeToRippleTime = exports.rippleTimeToUnixTime = void 0;\nconst RIPPLE_EPOCH_DIFF = 0x386d4380;\nfunction rippleTimeToUnixTime(rpepoch) {\n  return (rpepoch + RIPPLE_EPOCH_DIFF) * 1000;\n}\nexports.rippleTimeToUnixTime = rippleTimeToUnixTime;\nfunction unixTimeToRippleTime(timestamp) {\n  return Math.round(timestamp / 1000) - RIPPLE_EPOCH_DIFF;\n}\nexports.unixTimeToRippleTime = unixTimeToRippleTime;\nfunction rippleTimeToISOTime(rippleTime) {\n  return new Date(rippleTimeToUnixTime(rippleTime)).toISOString();\n}\nexports.rippleTimeToISOTime = rippleTimeToISOTime;\nfunction isoTimeToRippleTime(iso8601) {\n  const isoDate = typeof iso8601 === 'string' ? new Date(iso8601) : iso8601;\n  return unixTimeToRippleTime(isoDate.getTime());\n}\nexports.isoTimeToRippleTime = isoTimeToRippleTime;","map":{"version":3,"names":["Object","defineProperty","exports","value","isoTimeToRippleTime","rippleTimeToISOTime","unixTimeToRippleTime","rippleTimeToUnixTime","RIPPLE_EPOCH_DIFF","rpepoch","timestamp","Math","round","rippleTime","Date","toISOString","iso8601","isoDate","getTime"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/utils/timeConversion.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isoTimeToRippleTime = exports.rippleTimeToISOTime = exports.unixTimeToRippleTime = exports.rippleTimeToUnixTime = void 0;\nconst RIPPLE_EPOCH_DIFF = 0x386d4380;\nfunction rippleTimeToUnixTime(rpepoch) {\n    return (rpepoch + RIPPLE_EPOCH_DIFF) * 1000;\n}\nexports.rippleTimeToUnixTime = rippleTimeToUnixTime;\nfunction unixTimeToRippleTime(timestamp) {\n    return Math.round(timestamp / 1000) - RIPPLE_EPOCH_DIFF;\n}\nexports.unixTimeToRippleTime = unixTimeToRippleTime;\nfunction rippleTimeToISOTime(rippleTime) {\n    return new Date(rippleTimeToUnixTime(rippleTime)).toISOString();\n}\nexports.rippleTimeToISOTime = rippleTimeToISOTime;\nfunction isoTimeToRippleTime(iso8601) {\n    const isoDate = typeof iso8601 === 'string' ? new Date(iso8601) : iso8601;\n    return unixTimeToRippleTime(isoDate.getTime());\n}\nexports.isoTimeToRippleTime = isoTimeToRippleTime;\n//# sourceMappingURL=timeConversion.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAGF,OAAO,CAACG,mBAAmB,GAAGH,OAAO,CAACI,oBAAoB,GAAGJ,OAAO,CAACK,oBAAoB,GAAG,KAAK,CAAC;AAChI,MAAMC,iBAAiB,GAAG,UAAU;AACpC,SAASD,oBAAoBA,CAACE,OAAO,EAAE;EACnC,OAAO,CAACA,OAAO,GAAGD,iBAAiB,IAAI,IAAI;AAC/C;AACAN,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,oBAAoBA,CAACI,SAAS,EAAE;EACrC,OAAOC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAG,IAAI,CAAC,GAAGF,iBAAiB;AAC3D;AACAN,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,SAASD,mBAAmBA,CAACQ,UAAU,EAAE;EACrC,OAAO,IAAIC,IAAI,CAACP,oBAAoB,CAACM,UAAU,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC;AACnE;AACAb,OAAO,CAACG,mBAAmB,GAAGA,mBAAmB;AACjD,SAASD,mBAAmBA,CAACY,OAAO,EAAE;EAClC,MAAMC,OAAO,GAAG,OAAOD,OAAO,KAAK,QAAQ,GAAG,IAAIF,IAAI,CAACE,OAAO,CAAC,GAAGA,OAAO;EACzE,OAAOV,oBAAoB,CAACW,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC;AAClD;AACAhB,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
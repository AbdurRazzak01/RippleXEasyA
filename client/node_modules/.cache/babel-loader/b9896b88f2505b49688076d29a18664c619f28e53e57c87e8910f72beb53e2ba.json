{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/MetaPopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Web3 from 'web3';\n\n// Modal configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst MyComponent = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to open MetaMask modal and connect\n  const openMetaMaskModal = async () => {\n    try {\n      if (window.ethereum) {\n        const ethereum = window.ethereum;\n        await ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new Web3(ethereum);\n        setWeb3(provider);\n        const accounts = await provider.eth.getAccounts();\n        setAccount(accounts[0]);\n        setModalOpen(true);\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      setError('Error connecting to MetaMask. Please try again later.');\n      console.error('Error connecting to MetaMask:', error);\n    }\n  };\n\n  // Function to close the MetaMask modal\n  const closeMetaMaskModal = () => {\n    setModalOpen(false);\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openMetaMaskModal,\n      children: \"Connect MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: closeMetaMaskModal,\n      contentLabel: \"MetaMask Modal\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), web3 && account && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"MetaMask Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeMetaMaskModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"IWGt4Td5eqnX2J9jbwgK6zdHSms=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","Modal","Web3","jsxDEV","_jsxDEV","setAppElement","MyComponent","_s","modalOpen","setModalOpen","web3","setWeb3","account","setAccount","error","setError","openMetaMaskModal","window","ethereum","request","method","provider","accounts","eth","getAccounts","console","closeMetaMaskModal","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/MetaPopUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Web3 from 'web3';\n\n// Modal configuration\nModal.setAppElement('#root');\n\nconst MyComponent = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to open MetaMask modal and connect\n  const openMetaMaskModal = async () => {\n    try {\n      if (window.ethereum) {\n        const ethereum = window.ethereum;\n        await ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new Web3(ethereum);\n        setWeb3(provider);\n        const accounts = await provider.eth.getAccounts();\n        setAccount(accounts[0]);\n        setModalOpen(true);\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      setError('Error connecting to MetaMask. Please try again later.');\n      console.error('Error connecting to MetaMask:', error);\n    }\n  };\n\n  // Function to close the MetaMask modal\n  const closeMetaMaskModal = () => {\n    setModalOpen(false);\n    setError('');\n  };\n\n  return (\n    <div>\n      <button onClick={openMetaMaskModal}>Connect MetaMask</button>\n      <Modal isOpen={modalOpen} onRequestClose={closeMetaMaskModal} contentLabel=\"MetaMask Modal\">\n        {error && <p>{error}</p>}\n        {web3 && account && (\n          <div>\n            <h2>MetaMask Connected</h2>\n            <p>Account: {account}</p>\n            {/* You can add more interactions here */}\n            <button onClick={closeMetaMaskModal}>Close</button>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
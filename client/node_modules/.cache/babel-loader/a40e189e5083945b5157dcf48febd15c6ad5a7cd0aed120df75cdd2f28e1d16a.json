{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateXChainModifyBridge = exports.XChainModifyBridgeFlags = void 0;\nconst common_1 = require(\"./common\");\nvar XChainModifyBridgeFlags;\n(function (XChainModifyBridgeFlags) {\n  XChainModifyBridgeFlags[XChainModifyBridgeFlags[\"tfClearAccountCreateAmount\"] = 65536] = \"tfClearAccountCreateAmount\";\n})(XChainModifyBridgeFlags || (exports.XChainModifyBridgeFlags = XChainModifyBridgeFlags = {}));\nfunction validateXChainModifyBridge(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  (0, common_1.validateRequiredField)(tx, 'XChainBridge', common_1.isXChainBridge);\n  (0, common_1.validateOptionalField)(tx, 'SignatureReward', common_1.isAmount);\n  (0, common_1.validateOptionalField)(tx, 'MinAccountCreateAmount', common_1.isAmount);\n}\nexports.validateXChainModifyBridge = validateXChainModifyBridge;","map":{"version":3,"names":["common_1","require","XChainModifyBridgeFlags","exports","validateXChainModifyBridge","tx","validateBaseTransaction","validateRequiredField","isXChainBridge","validateOptionalField","isAmount"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/XChainModifyBridge.ts"],"sourcesContent":["import { Amount, XChainBridge } from '../common'\n\nimport {\n  BaseTransaction,\n  GlobalFlags,\n  isAmount,\n  isXChainBridge,\n  validateBaseTransaction,\n  validateOptionalField,\n  validateRequiredField,\n} from './common'\n\n/**\n * Enum representing values of {@link XChainModifyBridge} transaction flags.\n *\n * @category Transaction Flags\n */\nexport enum XChainModifyBridgeFlags {\n  /** Clears the MinAccountCreateAmount of the bridge. */\n  tfClearAccountCreateAmount = 0x00010000,\n}\n\n/**\n * Map of flags to boolean values representing {@link XChainModifyBridge} transaction\n * flags.\n *\n * @category Transaction Flags\n */\nexport interface XChainModifyBridgeFlagsInterface extends GlobalFlags {\n  /** Clears the MinAccountCreateAmount of the bridge. */\n  tfClearAccountCreateAmount?: boolean\n}\n\n/**\n * The XChainModifyBridge transaction allows bridge managers to modify the parameters\n * of the bridge.\n *\n * @category Transaction Models\n */\nexport interface XChainModifyBridge extends BaseTransaction {\n  TransactionType: 'XChainModifyBridge'\n\n  /**\n   * The bridge to modify.\n   */\n  XChainBridge: XChainBridge\n\n  /**\n   * The signature reward split between the witnesses for submitting attestations.\n   */\n  SignatureReward?: Amount\n\n  /**\n   * The minimum amount, in XRP, required for a {@link XChainAccountCreateCommit}\n   * transaction. If this is not present, the {@link XChainAccountCreateCommit}\n   * transaction will fail. This field can only be present on XRP-XRP bridges.\n   */\n  MinAccountCreateAmount?: Amount\n\n  Flags?: number | XChainModifyBridgeFlagsInterface\n}\n\n/**\n * Verify the form and type of an XChainModifyBridge at runtime.\n *\n * @param tx - An XChainModifyBridge Transaction.\n * @throws When the XChainModifyBridge is malformed.\n */\nexport function validateXChainModifyBridge(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  validateRequiredField(tx, 'XChainBridge', isXChainBridge)\n\n  validateOptionalField(tx, 'SignatureReward', isAmount)\n\n  validateOptionalField(tx, 'MinAccountCreateAmount', isAmount)\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AAeA,IAAYC,uBAGX;AAHD,WAAYA,uBAAuB;EAEjCA,uBAAA,CAAAA,uBAAA,sEAAuC;AACzC,CAAC,EAHWA,uBAAuB,KAAAC,OAAA,CAAAD,uBAAA,GAAvBA,uBAAuB;AAmDnC,SAAgBE,0BAA0BA,CAACC,EAA2B;EACpE,IAAAL,QAAA,CAAAM,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAAL,QAAA,CAAAO,qBAAqB,EAACF,EAAE,EAAE,cAAc,EAAEL,QAAA,CAAAQ,cAAc,CAAC;EAEzD,IAAAR,QAAA,CAAAS,qBAAqB,EAACJ,EAAE,EAAE,iBAAiB,EAAEL,QAAA,CAAAU,QAAQ,CAAC;EAEtD,IAAAV,QAAA,CAAAS,qBAAqB,EAACJ,EAAE,EAAE,wBAAwB,EAAEL,QAAA,CAAAU,QAAQ,CAAC;AAC/D;AARAP,OAAA,CAAAC,0BAAA,GAAAA,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hash160 = void 0;\nconst hash_1 = require(\"./hash\");\n/**\n * Hash with a width of 160 bits\n */\nclass Hash160 extends hash_1.Hash {\n  constructor(bytes) {\n    if (bytes && bytes.byteLength === 0) {\n      bytes = Hash160.ZERO_160.bytes;\n    }\n    super(bytes !== null && bytes !== void 0 ? bytes : Hash160.ZERO_160.bytes);\n  }\n}\nexports.Hash160 = Hash160;\nHash160.width = 20;\nHash160.ZERO_160 = new Hash160(new Uint8Array(Hash160.width));","map":{"version":3,"names":["hash_1","require","Hash160","Hash","constructor","bytes","byteLength","ZERO_160","exports","width","Uint8Array"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/ripple-binary-codec/src/types/hash-160.ts"],"sourcesContent":["import { Hash } from './hash'\n\n/**\n * Hash with a width of 160 bits\n */\nclass Hash160 extends Hash {\n  static readonly width = 20\n  static readonly ZERO_160: Hash160 = new Hash160(new Uint8Array(Hash160.width))\n\n  constructor(bytes?: Uint8Array) {\n    if (bytes && bytes.byteLength === 0) {\n      bytes = Hash160.ZERO_160.bytes\n    }\n\n    super(bytes ?? Hash160.ZERO_160.bytes)\n  }\n}\n\nexport { Hash160 }\n"],"mappings":";;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AAEA;;;AAGA,MAAMC,OAAQ,SAAQF,MAAA,CAAAG,IAAI;EAIxBC,YAAYC,KAAkB;IAC5B,IAAIA,KAAK,IAAIA,KAAK,CAACC,UAAU,KAAK,CAAC,EAAE;MACnCD,KAAK,GAAGH,OAAO,CAACK,QAAQ,CAACF,KAAK;;IAGhC,KAAK,CAACA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIH,OAAO,CAACK,QAAQ,CAACF,KAAK,CAAC;EACxC;;AAGOG,OAAA,CAAAN,OAAA,GAAAA,OAAA;AAZSA,OAAA,CAAAO,KAAK,GAAG,EAAE;AACVP,OAAA,CAAAK,QAAQ,GAAY,IAAIL,OAAO,CAAC,IAAIQ,UAAU,CAACR,OAAO,CAACO,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
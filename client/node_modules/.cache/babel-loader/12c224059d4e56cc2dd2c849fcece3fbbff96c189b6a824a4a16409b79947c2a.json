{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OfferFlags = void 0;\nvar OfferFlags;\n(function (OfferFlags) {\n  OfferFlags[OfferFlags[\"lsfPassive\"] = 65536] = \"lsfPassive\";\n  OfferFlags[OfferFlags[\"lsfSell\"] = 131072] = \"lsfSell\";\n})(OfferFlags || (exports.OfferFlags = OfferFlags = {}));","map":{"version":3,"names":["OfferFlags","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/ledger/Offer.ts"],"sourcesContent":["import { Amount } from '../common'\n\nimport { BaseLedgerEntry, HasPreviousTxnID } from './BaseLedgerEntry'\n\nexport default interface Offer extends BaseLedgerEntry, HasPreviousTxnID {\n  LedgerEntryType: 'Offer'\n  /** A bit-map of boolean flags enabled for this Offer. */\n  Flags: number\n  /** The address of the account that placed this Offer. */\n  Account: string\n  /**\n   * The Sequence value of the OfferCreate transaction that created this Offer\n   * object. Used in combination with the Account to identify this Offer.\n   */\n  Sequence: number\n  /** The remaining amount and type of currency requested by the Offer creator. */\n  TakerPays: Amount\n  /**\n   * The remaining amount and type of currency being provided by the Offer\n   * creator.\n   */\n  TakerGets: Amount\n  /** The ID of the Offer Directory that links to this Offer. */\n  BookDirectory: string\n  /**\n   * A hint indicating which page of the Offer Directory links to this object,\n   * in case the directory consists of multiple pages.\n   */\n  BookNode: string\n  /**\n   * A hint indicating which page of the Owner Directory links to this object,\n   * in case the directory consists of multiple pages.\n   */\n  OwnerNode: string\n  /** The time this Offer expires, in seconds since the Ripple Epoch. */\n  Expiration?: number\n}\n\nexport enum OfferFlags {\n  lsfPassive = 0x00010000,\n  lsfSell = 0x00020000,\n}\n"],"mappings":";;;;;;AAsCA,IAAYA,UAGX;AAHD,WAAYA,UAAU;EACpBA,UAAA,CAAAA,UAAA,sCAAuB;EACvBA,UAAA,CAAAA,UAAA,iCAAoB;AACtB,CAAC,EAHWA,UAAU,KAAAC,OAAA,CAAAD,UAAA,GAAVA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
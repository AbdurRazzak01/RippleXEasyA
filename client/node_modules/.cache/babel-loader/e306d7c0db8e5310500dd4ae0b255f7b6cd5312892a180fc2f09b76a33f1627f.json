{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateXChainCreateBridge = void 0;\nconst common_1 = require(\"./common\");\nfunction validateXChainCreateBridge(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  (0, common_1.validateRequiredField)(tx, 'XChainBridge', common_1.isXChainBridge);\n  (0, common_1.validateRequiredField)(tx, 'SignatureReward', common_1.isAmount);\n  (0, common_1.validateOptionalField)(tx, 'MinAccountCreateAmount', common_1.isAmount);\n}\nexports.validateXChainCreateBridge = validateXChainCreateBridge;","map":{"version":3,"names":["common_1","require","validateXChainCreateBridge","tx","validateBaseTransaction","validateRequiredField","isXChainBridge","isAmount","validateOptionalField","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/XChainCreateBridge.ts"],"sourcesContent":["import { Amount, XChainBridge } from '../common'\n\nimport {\n  BaseTransaction,\n  isAmount,\n  isXChainBridge,\n  validateBaseTransaction,\n  validateOptionalField,\n  validateRequiredField,\n} from './common'\n\n/**\n * The XChainCreateBridge transaction creates a new {@link Bridge} ledger object\n * and defines a new cross-chain bridge entrance on the chain that the transaction\n * is submitted on. It includes information about door accounts and assets for the\n * bridge.\n *\n * @category Transaction Models\n */\nexport interface XChainCreateBridge extends BaseTransaction {\n  TransactionType: 'XChainCreateBridge'\n\n  /**\n   * The bridge (door accounts and assets) to create.\n   */\n  XChainBridge: XChainBridge\n\n  /**\n   * The total amount to pay the witness servers for their signatures. This amount\n   * will be split among the signers.\n   */\n  SignatureReward: Amount\n\n  /**\n   * The minimum amount, in XRP, required for a {@link XChainAccountCreateCommit}\n   * transaction. If this isn't present, the {@link XChainAccountCreateCommit}\n   * transaction will fail. This field can only be present on XRP-XRP bridges.\n   */\n  MinAccountCreateAmount?: Amount\n}\n\n/**\n * Verify the form and type of an XChainCreateBridge at runtime.\n *\n * @param tx - An XChainCreateBridge Transaction.\n * @throws When the XChainCreateBridge is malformed.\n */\nexport function validateXChainCreateBridge(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  validateRequiredField(tx, 'XChainBridge', isXChainBridge)\n\n  validateRequiredField(tx, 'SignatureReward', isAmount)\n\n  validateOptionalField(tx, 'MinAccountCreateAmount', isAmount)\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AA6CA,SAAgBC,0BAA0BA,CAACC,EAA2B;EACpE,IAAAH,QAAA,CAAAI,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAAH,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,cAAc,EAAEH,QAAA,CAAAM,cAAc,CAAC;EAEzD,IAAAN,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,iBAAiB,EAAEH,QAAA,CAAAO,QAAQ,CAAC;EAEtD,IAAAP,QAAA,CAAAQ,qBAAqB,EAACL,EAAE,EAAE,wBAAwB,EAAEH,QAAA,CAAAO,QAAQ,CAAC;AAC/D;AARAE,OAAA,CAAAP,0BAAA,GAAAA,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
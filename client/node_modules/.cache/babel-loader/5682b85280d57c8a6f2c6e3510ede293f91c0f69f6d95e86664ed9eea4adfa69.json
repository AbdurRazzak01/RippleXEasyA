{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst errors_1 = require(\"../../../errors\");\nconst HashPrefix_1 = __importDefault(require(\"../HashPrefix\"));\nconst sha512Half_1 = __importDefault(require(\"../sha512Half\"));\nconst LeafNode_1 = __importDefault(require(\"./LeafNode\"));\nconst node_1 = require(\"./node\");\nconst HEX_ZERO = '0000000000000000000000000000000000000000000000000000000000000000';\nconst SLOT_MAX = 15;\nconst HEX = 16;\nclass InnerNode extends node_1.Node {\n  constructor(depth = 0) {\n    super();\n    this.leaves = {};\n    this.type = node_1.NodeType.INNER;\n    this.depth = depth;\n    this.empty = true;\n  }\n  get hash() {\n    if (this.empty) {\n      return HEX_ZERO;\n    }\n    let hex = '';\n    for (let iter = 0; iter <= SLOT_MAX; iter++) {\n      const child = this.leaves[iter];\n      const hash = child == null ? HEX_ZERO : child.hash;\n      hex += hash;\n    }\n    const prefix = HashPrefix_1.default.INNER_NODE.toString(HEX);\n    return (0, sha512Half_1.default)(prefix + hex);\n  }\n  addItem(tag, node) {\n    const existingNode = this.getNode(parseInt(tag[this.depth], HEX));\n    if (existingNode === undefined) {\n      this.setNode(parseInt(tag[this.depth], HEX), node);\n      return;\n    }\n    if (existingNode instanceof InnerNode) {\n      existingNode.addItem(tag, node);\n    } else if (existingNode instanceof LeafNode_1.default) {\n      if (existingNode.tag === tag) {\n        throw new errors_1.XrplError('Tried to add a node to a SHAMap that was already in there.');\n      } else {\n        const newInnerNode = new InnerNode(this.depth + 1);\n        newInnerNode.addItem(existingNode.tag, existingNode);\n        newInnerNode.addItem(tag, node);\n        this.setNode(parseInt(tag[this.depth], HEX), newInnerNode);\n      }\n    }\n  }\n  setNode(slot, node) {\n    if (slot < 0 || slot > SLOT_MAX) {\n      throw new errors_1.XrplError('Invalid slot: slot must be between 0-15.');\n    }\n    this.leaves[slot] = node;\n    this.empty = false;\n  }\n  getNode(slot) {\n    if (slot < 0 || slot > SLOT_MAX) {\n      throw new errors_1.XrplError('Invalid slot: slot must be between 0-15.');\n    }\n    return this.leaves[slot];\n  }\n}\nexports.default = InnerNode;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","errors_1","require","HashPrefix_1","sha512Half_1","LeafNode_1","node_1","HEX_ZERO","SLOT_MAX","HEX","InnerNode","Node","constructor","depth","leaves","type","NodeType","INNER","empty","hash","hex","iter","child","prefix","default","INNER_NODE","toString","addItem","tag","node","existingNode","getNode","parseInt","undefined","setNode","XrplError","newInnerNode","slot"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/utils/hashes/SHAMap/InnerNode.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"../../../errors\");\nconst HashPrefix_1 = __importDefault(require(\"../HashPrefix\"));\nconst sha512Half_1 = __importDefault(require(\"../sha512Half\"));\nconst LeafNode_1 = __importDefault(require(\"./LeafNode\"));\nconst node_1 = require(\"./node\");\nconst HEX_ZERO = '0000000000000000000000000000000000000000000000000000000000000000';\nconst SLOT_MAX = 15;\nconst HEX = 16;\nclass InnerNode extends node_1.Node {\n    constructor(depth = 0) {\n        super();\n        this.leaves = {};\n        this.type = node_1.NodeType.INNER;\n        this.depth = depth;\n        this.empty = true;\n    }\n    get hash() {\n        if (this.empty) {\n            return HEX_ZERO;\n        }\n        let hex = '';\n        for (let iter = 0; iter <= SLOT_MAX; iter++) {\n            const child = this.leaves[iter];\n            const hash = child == null ? HEX_ZERO : child.hash;\n            hex += hash;\n        }\n        const prefix = HashPrefix_1.default.INNER_NODE.toString(HEX);\n        return (0, sha512Half_1.default)(prefix + hex);\n    }\n    addItem(tag, node) {\n        const existingNode = this.getNode(parseInt(tag[this.depth], HEX));\n        if (existingNode === undefined) {\n            this.setNode(parseInt(tag[this.depth], HEX), node);\n            return;\n        }\n        if (existingNode instanceof InnerNode) {\n            existingNode.addItem(tag, node);\n        }\n        else if (existingNode instanceof LeafNode_1.default) {\n            if (existingNode.tag === tag) {\n                throw new errors_1.XrplError('Tried to add a node to a SHAMap that was already in there.');\n            }\n            else {\n                const newInnerNode = new InnerNode(this.depth + 1);\n                newInnerNode.addItem(existingNode.tag, existingNode);\n                newInnerNode.addItem(tag, node);\n                this.setNode(parseInt(tag[this.depth], HEX), newInnerNode);\n            }\n        }\n    }\n    setNode(slot, node) {\n        if (slot < 0 || slot > SLOT_MAX) {\n            throw new errors_1.XrplError('Invalid slot: slot must be between 0-15.');\n        }\n        this.leaves[slot] = node;\n        this.empty = false;\n    }\n    getNode(slot) {\n        if (slot < 0 || slot > SLOT_MAX) {\n            throw new errors_1.XrplError('Invalid slot: slot must be between 0-15.');\n        }\n        return this.leaves[slot];\n    }\n}\nexports.default = InnerNode;\n//# sourceMappingURL=InnerNode.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
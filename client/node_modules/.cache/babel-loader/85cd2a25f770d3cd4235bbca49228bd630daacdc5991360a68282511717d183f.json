{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable max-classes-per-file -- Needs to be a wrapper for ws */\nconst eventemitter3_1 = require(\"eventemitter3\");\n/**\n * Provides `EventEmitter` interface for native browser `WebSocket`,\n * same, as `ws` package provides.\n */\nclass WSWrapper extends eventemitter3_1.EventEmitter {\n  /**\n   * Constructs a browser-safe websocket.\n   *\n   * @param url - URL to connect to.\n   * @param _protocols - Not used.\n   * @param _websocketOptions - Not used.\n   */\n  constructor(url, _protocols, _websocketOptions) {\n    super();\n    this.ws = new WebSocket(url);\n    this.ws.onclose = closeEvent => {\n      let reason;\n      if (closeEvent.reason) {\n        const enc = new TextEncoder();\n        reason = enc.encode(closeEvent.reason);\n      }\n      this.emit('close', closeEvent.code, reason);\n    };\n    this.ws.onopen = () => {\n      this.emit('open');\n    };\n    this.ws.onerror = error => {\n      this.emit('error', error);\n    };\n    this.ws.onmessage = message => {\n      this.emit('message', message.data);\n    };\n  }\n  /**\n   * Get the ready state of the websocket.\n   *\n   * @returns The Websocket's ready state.\n   */\n  get readyState() {\n    return this.ws.readyState;\n  }\n  /**\n   * Closes the websocket.\n   *\n   * @param code - Close code.\n   * @param reason - Close reason.\n   */\n  close(code, reason) {\n    if (this.readyState === 1) {\n      this.ws.close(code, reason);\n    }\n  }\n  /**\n   * Sends a message over the Websocket connection.\n   *\n   * @param message - Message to send.\n   */\n  send(message) {\n    this.ws.send(message);\n  }\n}\nWSWrapper.CONNECTING = 0;\nWSWrapper.OPEN = 1;\nWSWrapper.CLOSING = 2;\nWSWrapper.CLOSED = 3;\nexports.default = WSWrapper;","map":{"version":3,"names":["eventemitter3_1","require","WSWrapper","EventEmitter","constructor","url","_protocols","_websocketOptions","ws","WebSocket","onclose","closeEvent","reason","enc","TextEncoder","encode","emit","code","onopen","onerror","error","onmessage","message","data","readyState","close","send","CONNECTING","OPEN","CLOSING","CLOSED"],"sources":["/Users/mdabdurrazzak/node_modules/@xrplf/isomorphic/src/ws/browser.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file -- Needs to be a wrapper for ws */\nimport { EventEmitter } from 'eventemitter3'\n\n// Define the global WebSocket class found on the native browser\ndeclare class WebSocket {\n  public onclose?: (closeEvent: CloseEvent) => void\n  public onopen?: (openEvent: Event) => void\n  public onerror?: (error: Error) => void\n  public onmessage?: (message: MessageEvent) => void\n  public readyState: number\n  public constructor(url: string)\n  public close(code?: number, reason?: Uint8Array): void\n  public send(message: string): void\n}\n\ninterface WSWrapperOptions {\n  perMessageDeflate: boolean\n  handshakeTimeout: number\n  protocolVersion: number\n  origin: string\n  maxPayload: number\n  followRedirects: boolean\n  maxRedirects: number\n}\n\n/**\n * Provides `EventEmitter` interface for native browser `WebSocket`,\n * same, as `ws` package provides.\n */\nexport default class WSWrapper extends EventEmitter {\n  public static CONNECTING = 0\n  public static OPEN = 1\n  public static CLOSING = 2\n\n  public static CLOSED = 3\n  private readonly ws: WebSocket\n\n  /**\n   * Constructs a browser-safe websocket.\n   *\n   * @param url - URL to connect to.\n   * @param _protocols - Not used.\n   * @param _websocketOptions - Not used.\n   */\n  public constructor(\n    url: string,\n    _protocols: string | string[] | WSWrapperOptions | undefined,\n    _websocketOptions: WSWrapperOptions,\n  ) {\n    super()\n\n    this.ws = new WebSocket(url)\n\n    this.ws.onclose = (closeEvent: CloseEvent): void => {\n      let reason: Uint8Array | undefined\n      if (closeEvent.reason) {\n        const enc = new TextEncoder()\n        reason = enc.encode(closeEvent.reason)\n      }\n      this.emit('close', closeEvent.code, reason)\n    }\n\n    this.ws.onopen = (): void => {\n      this.emit('open')\n    }\n\n    this.ws.onerror = (error): void => {\n      this.emit('error', error)\n    }\n\n    this.ws.onmessage = (message: MessageEvent): void => {\n      this.emit('message', message.data)\n    }\n  }\n\n  /**\n   * Get the ready state of the websocket.\n   *\n   * @returns The Websocket's ready state.\n   */\n  public get readyState(): number {\n    return this.ws.readyState\n  }\n\n  /**\n   * Closes the websocket.\n   *\n   * @param code - Close code.\n   * @param reason - Close reason.\n   */\n  public close(code?: number, reason?: Buffer): void {\n    if (this.readyState === 1) {\n      this.ws.close(code, reason)\n    }\n  }\n\n  /**\n   * Sends a message over the Websocket connection.\n   *\n   * @param message - Message to send.\n   */\n  public send(message: string): void {\n    this.ws.send(message)\n  }\n}\n"],"mappings":";;;;;AAAA;AACA,MAAAA,eAAA,GAAAC,OAAA;AAwBA;;;;AAIA,MAAqBC,SAAU,SAAQF,eAAA,CAAAG,YAAY;EAQjD;;;;;;;EAOAC,YACEC,GAAW,EACXC,UAA4D,EAC5DC,iBAAmC;IAEnC,KAAK,EAAE;IAEP,IAAI,CAACC,EAAE,GAAG,IAAIC,SAAS,CAACJ,GAAG,CAAC;IAE5B,IAAI,CAACG,EAAE,CAACE,OAAO,GAAIC,UAAsB,IAAU;MACjD,IAAIC,MAA8B;MAClC,IAAID,UAAU,CAACC,MAAM,EAAE;QACrB,MAAMC,GAAG,GAAG,IAAIC,WAAW,EAAE;QAC7BF,MAAM,GAAGC,GAAG,CAACE,MAAM,CAACJ,UAAU,CAACC,MAAM,CAAC;;MAExC,IAAI,CAACI,IAAI,CAAC,OAAO,EAAEL,UAAU,CAACM,IAAI,EAAEL,MAAM,CAAC;IAC7C,CAAC;IAED,IAAI,CAACJ,EAAE,CAACU,MAAM,GAAG,MAAW;MAC1B,IAAI,CAACF,IAAI,CAAC,MAAM,CAAC;IACnB,CAAC;IAED,IAAI,CAACR,EAAE,CAACW,OAAO,GAAIC,KAAK,IAAU;MAChC,IAAI,CAACJ,IAAI,CAAC,OAAO,EAAEI,KAAK,CAAC;IAC3B,CAAC;IAED,IAAI,CAACZ,EAAE,CAACa,SAAS,GAAIC,OAAqB,IAAU;MAClD,IAAI,CAACN,IAAI,CAAC,SAAS,EAAEM,OAAO,CAACC,IAAI,CAAC;IACpC,CAAC;EACH;EAEA;;;;;EAKA,IAAWC,UAAUA,CAAA;IACnB,OAAO,IAAI,CAAChB,EAAE,CAACgB,UAAU;EAC3B;EAEA;;;;;;EAMOC,KAAKA,CAACR,IAAa,EAAEL,MAAe;IACzC,IAAI,IAAI,CAACY,UAAU,KAAK,CAAC,EAAE;MACzB,IAAI,CAAChB,EAAE,CAACiB,KAAK,CAACR,IAAI,EAAEL,MAAM,CAAC;;EAE/B;EAEA;;;;;EAKOc,IAAIA,CAACJ,OAAe;IACzB,IAAI,CAACd,EAAE,CAACkB,IAAI,CAACJ,OAAO,CAAC;EACvB;;AAzEcpB,SAAA,CAAAyB,UAAU,GAAG,CAAC;AACdzB,SAAA,CAAA0B,IAAI,GAAG,CAAC;AACR1B,SAAA,CAAA2B,OAAO,GAAG,CAAC;AAEX3B,SAAA,CAAA4B,MAAM,GAAG,CAAC;kBALL5B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
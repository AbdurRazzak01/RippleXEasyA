{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleStreamPartialPayment = exports.handlePartialPayment = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst ripple_binary_codec_1 = require(\"ripple-binary-codec\");\nconst transactions_1 = require(\"../models/transactions\");\nconst utils_1 = require(\"../models/utils\");\nconst WARN_PARTIAL_PAYMENT_CODE = 2001;\nfunction amountsEqual(amt1, amt2) {\n  if (typeof amt1 === 'string' && typeof amt2 === 'string') {\n    return amt1 === amt2;\n  }\n  if (typeof amt1 === 'string' || typeof amt2 === 'string') {\n    return false;\n  }\n  const aValue = new bignumber_js_1.default(amt1.value);\n  const bValue = new bignumber_js_1.default(amt2.value);\n  return amt1.currency === amt2.currency && amt1.issuer === amt2.issuer && aValue.isEqualTo(bValue);\n}\nfunction isPartialPayment(tx, metadata) {\n  var _a;\n  if (tx == null || metadata == null || tx.TransactionType !== 'Payment') {\n    return false;\n  }\n  let meta = metadata;\n  if (typeof meta === 'string') {\n    if (meta === 'unavailable') {\n      return false;\n    }\n    meta = (0, ripple_binary_codec_1.decode)(meta);\n  }\n  const tfPartial = typeof tx.Flags === 'number' ? (0, utils_1.isFlagEnabled)(tx.Flags, transactions_1.PaymentFlags.tfPartialPayment) : (_a = tx.Flags) === null || _a === void 0 ? void 0 : _a.tfPartialPayment;\n  if (!tfPartial) {\n    return false;\n  }\n  const delivered = meta.delivered_amount;\n  const amount = tx.Amount;\n  if (delivered === undefined) {\n    return false;\n  }\n  return !amountsEqual(delivered, amount);\n}\nfunction txHasPartialPayment(response) {\n  return isPartialPayment(response.result, response.result.meta);\n}\nfunction txEntryHasPartialPayment(response) {\n  return isPartialPayment(response.result.tx_json, response.result.metadata);\n}\nfunction accountTxHasPartialPayment(response) {\n  const {\n    transactions\n  } = response.result;\n  const foo = transactions.some(tx => isPartialPayment(tx.tx, tx.meta));\n  return foo;\n}\nfunction hasPartialPayment(command, response) {\n  switch (command) {\n    case 'tx':\n      return txHasPartialPayment(response);\n    case 'transaction_entry':\n      return txEntryHasPartialPayment(response);\n    case 'account_tx':\n      return accountTxHasPartialPayment(response);\n    default:\n      return false;\n  }\n}\nfunction handlePartialPayment(command, response) {\n  var _a;\n  if (hasPartialPayment(command, response)) {\n    const warnings = (_a = response.warnings) !== null && _a !== void 0 ? _a : [];\n    const warning = {\n      id: WARN_PARTIAL_PAYMENT_CODE,\n      message: 'This response contains a Partial Payment'\n    };\n    warnings.push(warning);\n    response.warnings = warnings;\n  }\n}\nexports.handlePartialPayment = handlePartialPayment;\nfunction handleStreamPartialPayment(stream, log) {\n  var _a;\n  if (isPartialPayment(stream.transaction, stream.meta)) {\n    const warnings = (_a = stream.warnings) !== null && _a !== void 0 ? _a : [];\n    const warning = {\n      id: WARN_PARTIAL_PAYMENT_CODE,\n      message: 'This response contains a Partial Payment'\n    };\n    warnings.push(warning);\n    stream.warnings = warnings;\n    log('Partial payment received', JSON.stringify(stream));\n  }\n}\nexports.handleStreamPartialPayment = handleStreamPartialPayment;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","handleStreamPartialPayment","handlePartialPayment","bignumber_js_1","require","ripple_binary_codec_1","transactions_1","utils_1","WARN_PARTIAL_PAYMENT_CODE","amountsEqual","amt1","amt2","aValue","default","bValue","currency","issuer","isEqualTo","isPartialPayment","tx","metadata","_a","TransactionType","meta","decode","tfPartial","Flags","isFlagEnabled","PaymentFlags","tfPartialPayment","delivered","delivered_amount","amount","Amount","undefined","txHasPartialPayment","response","result","txEntryHasPartialPayment","tx_json","accountTxHasPartialPayment","transactions","foo","some","hasPartialPayment","command","warnings","warning","id","message","push","stream","log","transaction","JSON","stringify"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/client/partialPayment.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handleStreamPartialPayment = exports.handlePartialPayment = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst ripple_binary_codec_1 = require(\"ripple-binary-codec\");\nconst transactions_1 = require(\"../models/transactions\");\nconst utils_1 = require(\"../models/utils\");\nconst WARN_PARTIAL_PAYMENT_CODE = 2001;\nfunction amountsEqual(amt1, amt2) {\n    if (typeof amt1 === 'string' && typeof amt2 === 'string') {\n        return amt1 === amt2;\n    }\n    if (typeof amt1 === 'string' || typeof amt2 === 'string') {\n        return false;\n    }\n    const aValue = new bignumber_js_1.default(amt1.value);\n    const bValue = new bignumber_js_1.default(amt2.value);\n    return (amt1.currency === amt2.currency &&\n        amt1.issuer === amt2.issuer &&\n        aValue.isEqualTo(bValue));\n}\nfunction isPartialPayment(tx, metadata) {\n    var _a;\n    if (tx == null || metadata == null || tx.TransactionType !== 'Payment') {\n        return false;\n    }\n    let meta = metadata;\n    if (typeof meta === 'string') {\n        if (meta === 'unavailable') {\n            return false;\n        }\n        meta = (0, ripple_binary_codec_1.decode)(meta);\n    }\n    const tfPartial = typeof tx.Flags === 'number'\n        ? (0, utils_1.isFlagEnabled)(tx.Flags, transactions_1.PaymentFlags.tfPartialPayment)\n        : (_a = tx.Flags) === null || _a === void 0 ? void 0 : _a.tfPartialPayment;\n    if (!tfPartial) {\n        return false;\n    }\n    const delivered = meta.delivered_amount;\n    const amount = tx.Amount;\n    if (delivered === undefined) {\n        return false;\n    }\n    return !amountsEqual(delivered, amount);\n}\nfunction txHasPartialPayment(response) {\n    return isPartialPayment(response.result, response.result.meta);\n}\nfunction txEntryHasPartialPayment(response) {\n    return isPartialPayment(response.result.tx_json, response.result.metadata);\n}\nfunction accountTxHasPartialPayment(response) {\n    const { transactions } = response.result;\n    const foo = transactions.some((tx) => isPartialPayment(tx.tx, tx.meta));\n    return foo;\n}\nfunction hasPartialPayment(command, response) {\n    switch (command) {\n        case 'tx':\n            return txHasPartialPayment(response);\n        case 'transaction_entry':\n            return txEntryHasPartialPayment(response);\n        case 'account_tx':\n            return accountTxHasPartialPayment(response);\n        default:\n            return false;\n    }\n}\nfunction handlePartialPayment(command, response) {\n    var _a;\n    if (hasPartialPayment(command, response)) {\n        const warnings = (_a = response.warnings) !== null && _a !== void 0 ? _a : [];\n        const warning = {\n            id: WARN_PARTIAL_PAYMENT_CODE,\n            message: 'This response contains a Partial Payment',\n        };\n        warnings.push(warning);\n        response.warnings = warnings;\n    }\n}\nexports.handlePartialPayment = handlePartialPayment;\nfunction handleStreamPartialPayment(stream, log) {\n    var _a;\n    if (isPartialPayment(stream.transaction, stream.meta)) {\n        const warnings = (_a = stream.warnings) !== null && _a !== void 0 ? _a : [];\n        const warning = {\n            id: WARN_PARTIAL_PAYMENT_CODE,\n            message: 'This response contains a Partial Payment',\n        };\n        warnings.push(warning);\n        stream.warnings = warnings;\n        log('Partial payment received', JSON.stringify(stream));\n    }\n}\nexports.handleStreamPartialPayment = handleStreamPartialPayment;\n//# sourceMappingURL=partialPayment.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
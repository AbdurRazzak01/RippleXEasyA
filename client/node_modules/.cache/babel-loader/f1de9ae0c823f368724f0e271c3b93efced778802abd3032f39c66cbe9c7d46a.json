{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = exports.INTENTIONAL_DISCONNECT_CODE = void 0;\nconst utils_1 = require(\"@xrplf/isomorphic/utils\");\nconst ws_1 = __importDefault(require(\"@xrplf/isomorphic/ws\"));\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst errors_1 = require(\"../errors\");\nconst ConnectionManager_1 = __importDefault(require(\"./ConnectionManager\"));\nconst ExponentialBackoff_1 = __importDefault(require(\"./ExponentialBackoff\"));\nconst RequestManager_1 = __importDefault(require(\"./RequestManager\"));\nconst SECONDS_PER_MINUTE = 60;\nconst TIMEOUT = 20;\nconst CONNECTION_TIMEOUT = 5;\nexports.INTENTIONAL_DISCONNECT_CODE = 4000;\nfunction createWebSocket(url, config) {\n  const options = {\n    agent: config.agent\n  };\n  if (config.headers) {\n    options.headers = config.headers;\n  }\n  if (config.authorization != null) {\n    options.headers = Object.assign(Object.assign({}, options.headers), {\n      Authorization: `Basic ${btoa(config.authorization)}`\n    });\n  }\n  const websocketOptions = Object.assign({}, options);\n  return new ws_1.default(url, websocketOptions);\n}\nfunction websocketSendAsync(ws, message) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      ws.send(message, error => {\n        if (error) {\n          reject(new errors_1.DisconnectedError(error.message, error));\n        } else {\n          resolve();\n        }\n      });\n    });\n  });\n}\nclass Connection extends eventemitter3_1.EventEmitter {\n  constructor(url, options = {}) {\n    super();\n    this.ws = null;\n    this.reconnectTimeoutID = null;\n    this.heartbeatIntervalID = null;\n    this.retryConnectionBackoff = new ExponentialBackoff_1.default({\n      min: 100,\n      max: SECONDS_PER_MINUTE * 1000\n    });\n    this.requestManager = new RequestManager_1.default();\n    this.connectionManager = new ConnectionManager_1.default();\n    this.trace = () => {};\n    this.url = url;\n    this.config = Object.assign({\n      timeout: TIMEOUT * 1000,\n      connectionTimeout: CONNECTION_TIMEOUT * 1000\n    }, options);\n    if (typeof options.trace === 'function') {\n      this.trace = options.trace;\n    } else if (options.trace) {\n      this.trace = console.log;\n    }\n  }\n  get state() {\n    return this.ws ? this.ws.readyState : ws_1.default.CLOSED;\n  }\n  get shouldBeConnected() {\n    return this.ws !== null;\n  }\n  isConnected() {\n    return this.state === ws_1.default.OPEN;\n  }\n  connect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.isConnected()) {\n        return Promise.resolve();\n      }\n      if (this.state === ws_1.default.CONNECTING) {\n        return this.connectionManager.awaitConnection();\n      }\n      if (!this.url) {\n        return Promise.reject(new errors_1.ConnectionError('Cannot connect because no server was specified'));\n      }\n      if (this.ws != null) {\n        return Promise.reject(new errors_1.XrplError('Websocket connection never cleaned up.', {\n          state: this.state\n        }));\n      }\n      const connectionTimeoutID = setTimeout(() => {\n        this.onConnectionFailed(new errors_1.ConnectionError(`Error: connect() timed out after ${this.config.connectionTimeout} ms. If your internet connection is working, the ` + `rippled server may be blocked or inaccessible. You can also try setting the 'connectionTimeout' option in the Client constructor.`));\n      }, this.config.connectionTimeout);\n      this.ws = createWebSocket(this.url, this.config);\n      if (this.ws == null) {\n        throw new errors_1.XrplError('Connect: created null websocket');\n      }\n      this.ws.on('error', error => this.onConnectionFailed(error));\n      this.ws.on('error', () => clearTimeout(connectionTimeoutID));\n      this.ws.on('close', reason => this.onConnectionFailed(reason));\n      this.ws.on('close', () => clearTimeout(connectionTimeoutID));\n      this.ws.once('open', () => {\n        void this.onceOpen(connectionTimeoutID);\n      });\n      return this.connectionManager.awaitConnection();\n    });\n  }\n  disconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.clearHeartbeatInterval();\n      if (this.reconnectTimeoutID !== null) {\n        clearTimeout(this.reconnectTimeoutID);\n        this.reconnectTimeoutID = null;\n      }\n      if (this.state === ws_1.default.CLOSED) {\n        return Promise.resolve(undefined);\n      }\n      if (this.ws == null) {\n        return Promise.resolve(undefined);\n      }\n      return new Promise(resolve => {\n        if (this.ws == null) {\n          resolve(undefined);\n        }\n        if (this.ws != null) {\n          this.ws.once('close', code => resolve(code));\n        }\n        if (this.ws != null && this.state !== ws_1.default.CLOSING) {\n          this.ws.close(exports.INTENTIONAL_DISCONNECT_CODE);\n        }\n      });\n    });\n  }\n  reconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.emit('reconnect');\n      yield this.disconnect();\n      yield this.connect();\n    });\n  }\n  request(request, timeout) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.shouldBeConnected || this.ws == null) {\n        throw new errors_1.NotConnectedError(JSON.stringify(request), request);\n      }\n      const [id, message, responsePromise] = this.requestManager.createRequest(request, timeout !== null && timeout !== void 0 ? timeout : this.config.timeout);\n      this.trace('send', message);\n      websocketSendAsync(this.ws, message).catch(error => {\n        this.requestManager.reject(id, error);\n      });\n      return responsePromise;\n    });\n  }\n  getUrl() {\n    var _a;\n    return (_a = this.url) !== null && _a !== void 0 ? _a : '';\n  }\n  onMessage(message) {\n    this.trace('receive', message);\n    let data;\n    try {\n      data = JSON.parse(message);\n    } catch (error) {\n      if (error instanceof Error) {\n        this.emit('error', 'badMessage', error.message, message);\n      }\n      return;\n    }\n    if (data.type == null && data.error) {\n      this.emit('error', data.error, data.error_message, data);\n      return;\n    }\n    if (data.type) {\n      this.emit(data.type, data);\n    }\n    if (data.type === 'response') {\n      try {\n        this.requestManager.handleResponse(data);\n      } catch (error) {\n        if (error instanceof Error) {\n          this.emit('error', 'badMessage', error.message, message);\n        } else {\n          this.emit('error', 'badMessage', error, error);\n        }\n      }\n    }\n  }\n  onceOpen(connectionTimeoutID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.ws == null) {\n        throw new errors_1.XrplError('onceOpen: ws is null');\n      }\n      this.ws.removeAllListeners();\n      clearTimeout(connectionTimeoutID);\n      this.ws.on('message', message => this.onMessage(message));\n      this.ws.on('error', error => this.emit('error', 'websocket', error.message, error));\n      this.ws.once('close', (code, reason) => {\n        if (this.ws == null) {\n          throw new errors_1.XrplError('onceClose: ws is null');\n        }\n        this.clearHeartbeatInterval();\n        this.requestManager.rejectAll(new errors_1.DisconnectedError(`websocket was closed, ${reason ? (0, utils_1.hexToString)((0, utils_1.bytesToHex)(reason)) : ''}`));\n        this.ws.removeAllListeners();\n        this.ws = null;\n        if (code === undefined) {\n          const internalErrorCode = 1011;\n          this.emit('disconnected', internalErrorCode);\n        } else {\n          this.emit('disconnected', code);\n        }\n        if (code !== exports.INTENTIONAL_DISCONNECT_CODE && code !== undefined) {\n          this.intentionalDisconnect();\n        }\n      });\n      try {\n        this.retryConnectionBackoff.reset();\n        this.startHeartbeatInterval();\n        this.connectionManager.resolveAllAwaiting();\n        this.emit('connected');\n      } catch (error) {\n        if (error instanceof Error) {\n          this.connectionManager.rejectAllAwaiting(error);\n          yield this.disconnect().catch(() => {});\n        }\n      }\n    });\n  }\n  intentionalDisconnect() {\n    const retryTimeout = this.retryConnectionBackoff.duration();\n    this.trace('reconnect', `Retrying connection in ${retryTimeout}ms.`);\n    this.emit('reconnecting', this.retryConnectionBackoff.attempts);\n    this.reconnectTimeoutID = setTimeout(() => {\n      this.reconnect().catch(error => {\n        this.emit('error', 'reconnect', error.message, error);\n      });\n    }, retryTimeout);\n  }\n  clearHeartbeatInterval() {\n    if (this.heartbeatIntervalID) {\n      clearInterval(this.heartbeatIntervalID);\n    }\n  }\n  startHeartbeatInterval() {\n    this.clearHeartbeatInterval();\n    this.heartbeatIntervalID = setInterval(() => {\n      void this.heartbeat();\n    }, this.config.timeout);\n  }\n  heartbeat() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.request({\n        command: 'ping'\n      }).catch(() => __awaiter(this, void 0, void 0, function* () {\n        return this.reconnect().catch(error => {\n          this.emit('error', 'reconnect', error.message, error);\n        });\n      }));\n    });\n  }\n  onConnectionFailed(errorOrCode) {\n    if (this.ws) {\n      this.ws.removeAllListeners();\n      this.ws.on('error', () => {});\n      this.ws.close();\n      this.ws = null;\n    }\n    if (typeof errorOrCode === 'number') {\n      this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(`Connection failed with code ${errorOrCode}.`, {\n        code: errorOrCode\n      }));\n    } else if (errorOrCode === null || errorOrCode === void 0 ? void 0 : errorOrCode.message) {\n      this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(errorOrCode.message, errorOrCode));\n    } else {\n      this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError('Connection failed.'));\n    }\n  }\n}\nexports.Connection = Connection;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","Connection","INTENTIONAL_DISCONNECT_CODE","utils_1","require","ws_1","eventemitter3_1","errors_1","ConnectionManager_1","ExponentialBackoff_1","RequestManager_1","SECONDS_PER_MINUTE","TIMEOUT","CONNECTION_TIMEOUT","createWebSocket","url","config","options","agent","headers","authorization","assign","Authorization","btoa","websocketOptions","default","websocketSendAsync","ws","message","send","error","DisconnectedError","EventEmitter","constructor","reconnectTimeoutID","heartbeatIntervalID","retryConnectionBackoff","min","max","requestManager","connectionManager","trace","timeout","connectionTimeout","console","log","state","readyState","CLOSED","shouldBeConnected","isConnected","OPEN","connect","CONNECTING","awaitConnection","ConnectionError","XrplError","connectionTimeoutID","setTimeout","onConnectionFailed","on","clearTimeout","reason","once","onceOpen","disconnect","clearHeartbeatInterval","undefined","code","CLOSING","close","reconnect","emit","request","NotConnectedError","JSON","stringify","id","responsePromise","createRequest","catch","getUrl","_a","onMessage","data","parse","Error","type","error_message","handleResponse","removeAllListeners","rejectAll","hexToString","bytesToHex","internalErrorCode","intentionalDisconnect","reset","startHeartbeatInterval","resolveAllAwaiting","rejectAllAwaiting","retryTimeout","duration","attempts","clearInterval","setInterval","heartbeat","command","errorOrCode"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/client/connection.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connection = exports.INTENTIONAL_DISCONNECT_CODE = void 0;\nconst utils_1 = require(\"@xrplf/isomorphic/utils\");\nconst ws_1 = __importDefault(require(\"@xrplf/isomorphic/ws\"));\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst errors_1 = require(\"../errors\");\nconst ConnectionManager_1 = __importDefault(require(\"./ConnectionManager\"));\nconst ExponentialBackoff_1 = __importDefault(require(\"./ExponentialBackoff\"));\nconst RequestManager_1 = __importDefault(require(\"./RequestManager\"));\nconst SECONDS_PER_MINUTE = 60;\nconst TIMEOUT = 20;\nconst CONNECTION_TIMEOUT = 5;\nexports.INTENTIONAL_DISCONNECT_CODE = 4000;\nfunction createWebSocket(url, config) {\n    const options = {\n        agent: config.agent,\n    };\n    if (config.headers) {\n        options.headers = config.headers;\n    }\n    if (config.authorization != null) {\n        options.headers = Object.assign(Object.assign({}, options.headers), { Authorization: `Basic ${btoa(config.authorization)}` });\n    }\n    const websocketOptions = Object.assign({}, options);\n    return new ws_1.default(url, websocketOptions);\n}\nfunction websocketSendAsync(ws, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            ws.send(message, (error) => {\n                if (error) {\n                    reject(new errors_1.DisconnectedError(error.message, error));\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    });\n}\nclass Connection extends eventemitter3_1.EventEmitter {\n    constructor(url, options = {}) {\n        super();\n        this.ws = null;\n        this.reconnectTimeoutID = null;\n        this.heartbeatIntervalID = null;\n        this.retryConnectionBackoff = new ExponentialBackoff_1.default({\n            min: 100,\n            max: SECONDS_PER_MINUTE * 1000,\n        });\n        this.requestManager = new RequestManager_1.default();\n        this.connectionManager = new ConnectionManager_1.default();\n        this.trace = () => { };\n        this.url = url;\n        this.config = Object.assign({ timeout: TIMEOUT * 1000, connectionTimeout: CONNECTION_TIMEOUT * 1000 }, options);\n        if (typeof options.trace === 'function') {\n            this.trace = options.trace;\n        }\n        else if (options.trace) {\n            this.trace = console.log;\n        }\n    }\n    get state() {\n        return this.ws ? this.ws.readyState : ws_1.default.CLOSED;\n    }\n    get shouldBeConnected() {\n        return this.ws !== null;\n    }\n    isConnected() {\n        return this.state === ws_1.default.OPEN;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isConnected()) {\n                return Promise.resolve();\n            }\n            if (this.state === ws_1.default.CONNECTING) {\n                return this.connectionManager.awaitConnection();\n            }\n            if (!this.url) {\n                return Promise.reject(new errors_1.ConnectionError('Cannot connect because no server was specified'));\n            }\n            if (this.ws != null) {\n                return Promise.reject(new errors_1.XrplError('Websocket connection never cleaned up.', {\n                    state: this.state,\n                }));\n            }\n            const connectionTimeoutID = setTimeout(() => {\n                this.onConnectionFailed(new errors_1.ConnectionError(`Error: connect() timed out after ${this.config.connectionTimeout} ms. If your internet connection is working, the ` +\n                    `rippled server may be blocked or inaccessible. You can also try setting the 'connectionTimeout' option in the Client constructor.`));\n            }, this.config.connectionTimeout);\n            this.ws = createWebSocket(this.url, this.config);\n            if (this.ws == null) {\n                throw new errors_1.XrplError('Connect: created null websocket');\n            }\n            this.ws.on('error', (error) => this.onConnectionFailed(error));\n            this.ws.on('error', () => clearTimeout(connectionTimeoutID));\n            this.ws.on('close', (reason) => this.onConnectionFailed(reason));\n            this.ws.on('close', () => clearTimeout(connectionTimeoutID));\n            this.ws.once('open', () => {\n                void this.onceOpen(connectionTimeoutID);\n            });\n            return this.connectionManager.awaitConnection();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.clearHeartbeatInterval();\n            if (this.reconnectTimeoutID !== null) {\n                clearTimeout(this.reconnectTimeoutID);\n                this.reconnectTimeoutID = null;\n            }\n            if (this.state === ws_1.default.CLOSED) {\n                return Promise.resolve(undefined);\n            }\n            if (this.ws == null) {\n                return Promise.resolve(undefined);\n            }\n            return new Promise((resolve) => {\n                if (this.ws == null) {\n                    resolve(undefined);\n                }\n                if (this.ws != null) {\n                    this.ws.once('close', (code) => resolve(code));\n                }\n                if (this.ws != null && this.state !== ws_1.default.CLOSING) {\n                    this.ws.close(exports.INTENTIONAL_DISCONNECT_CODE);\n                }\n            });\n        });\n    }\n    reconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.emit('reconnect');\n            yield this.disconnect();\n            yield this.connect();\n        });\n    }\n    request(request, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldBeConnected || this.ws == null) {\n                throw new errors_1.NotConnectedError(JSON.stringify(request), request);\n            }\n            const [id, message, responsePromise] = this.requestManager.createRequest(request, timeout !== null && timeout !== void 0 ? timeout : this.config.timeout);\n            this.trace('send', message);\n            websocketSendAsync(this.ws, message).catch((error) => {\n                this.requestManager.reject(id, error);\n            });\n            return responsePromise;\n        });\n    }\n    getUrl() {\n        var _a;\n        return (_a = this.url) !== null && _a !== void 0 ? _a : '';\n    }\n    onMessage(message) {\n        this.trace('receive', message);\n        let data;\n        try {\n            data = JSON.parse(message);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                this.emit('error', 'badMessage', error.message, message);\n            }\n            return;\n        }\n        if (data.type == null && data.error) {\n            this.emit('error', data.error, data.error_message, data);\n            return;\n        }\n        if (data.type) {\n            this.emit(data.type, data);\n        }\n        if (data.type === 'response') {\n            try {\n                this.requestManager.handleResponse(data);\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    this.emit('error', 'badMessage', error.message, message);\n                }\n                else {\n                    this.emit('error', 'badMessage', error, error);\n                }\n            }\n        }\n    }\n    onceOpen(connectionTimeoutID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.ws == null) {\n                throw new errors_1.XrplError('onceOpen: ws is null');\n            }\n            this.ws.removeAllListeners();\n            clearTimeout(connectionTimeoutID);\n            this.ws.on('message', (message) => this.onMessage(message));\n            this.ws.on('error', (error) => this.emit('error', 'websocket', error.message, error));\n            this.ws.once('close', (code, reason) => {\n                if (this.ws == null) {\n                    throw new errors_1.XrplError('onceClose: ws is null');\n                }\n                this.clearHeartbeatInterval();\n                this.requestManager.rejectAll(new errors_1.DisconnectedError(`websocket was closed, ${reason ? (0, utils_1.hexToString)((0, utils_1.bytesToHex)(reason)) : ''}`));\n                this.ws.removeAllListeners();\n                this.ws = null;\n                if (code === undefined) {\n                    const internalErrorCode = 1011;\n                    this.emit('disconnected', internalErrorCode);\n                }\n                else {\n                    this.emit('disconnected', code);\n                }\n                if (code !== exports.INTENTIONAL_DISCONNECT_CODE && code !== undefined) {\n                    this.intentionalDisconnect();\n                }\n            });\n            try {\n                this.retryConnectionBackoff.reset();\n                this.startHeartbeatInterval();\n                this.connectionManager.resolveAllAwaiting();\n                this.emit('connected');\n            }\n            catch (error) {\n                if (error instanceof Error) {\n                    this.connectionManager.rejectAllAwaiting(error);\n                    yield this.disconnect().catch(() => { });\n                }\n            }\n        });\n    }\n    intentionalDisconnect() {\n        const retryTimeout = this.retryConnectionBackoff.duration();\n        this.trace('reconnect', `Retrying connection in ${retryTimeout}ms.`);\n        this.emit('reconnecting', this.retryConnectionBackoff.attempts);\n        this.reconnectTimeoutID = setTimeout(() => {\n            this.reconnect().catch((error) => {\n                this.emit('error', 'reconnect', error.message, error);\n            });\n        }, retryTimeout);\n    }\n    clearHeartbeatInterval() {\n        if (this.heartbeatIntervalID) {\n            clearInterval(this.heartbeatIntervalID);\n        }\n    }\n    startHeartbeatInterval() {\n        this.clearHeartbeatInterval();\n        this.heartbeatIntervalID = setInterval(() => {\n            void this.heartbeat();\n        }, this.config.timeout);\n    }\n    heartbeat() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.request({ command: 'ping' }).catch(() => __awaiter(this, void 0, void 0, function* () {\n                return this.reconnect().catch((error) => {\n                    this.emit('error', 'reconnect', error.message, error);\n                });\n            }));\n        });\n    }\n    onConnectionFailed(errorOrCode) {\n        if (this.ws) {\n            this.ws.removeAllListeners();\n            this.ws.on('error', () => {\n            });\n            this.ws.close();\n            this.ws = null;\n        }\n        if (typeof errorOrCode === 'number') {\n            this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(`Connection failed with code ${errorOrCode}.`, {\n                code: errorOrCode,\n            }));\n        }\n        else if (errorOrCode === null || errorOrCode === void 0 ? void 0 : errorOrCode.message) {\n            this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(errorOrCode.message, errorOrCode));\n        }\n        else {\n            this.connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError('Connection failed.'));\n        }\n    }\n}\nexports.Connection = Connection;\n//# sourceMappingURL=connection.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
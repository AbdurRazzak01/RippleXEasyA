{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateCheckCash = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nfunction validateCheckCash(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Amount == null && tx.DeliverMin == null) {\n    throw new errors_1.ValidationError('CheckCash: must have either Amount or DeliverMin');\n  }\n  if (tx.Amount != null && tx.DeliverMin != null) {\n    throw new errors_1.ValidationError('CheckCash: cannot have both Amount and DeliverMin');\n  }\n  if (tx.Amount != null && tx.Amount !== undefined && !(0, common_1.isAmount)(tx.Amount)) {\n    throw new errors_1.ValidationError('CheckCash: invalid Amount');\n  }\n  if (tx.DeliverMin != null && tx.DeliverMin !== undefined && !(0, common_1.isAmount)(tx.DeliverMin)) {\n    throw new errors_1.ValidationError('CheckCash: invalid DeliverMin');\n  }\n  if (tx.CheckID !== undefined && typeof tx.CheckID !== 'string') {\n    throw new errors_1.ValidationError('CheckCash: invalid CheckID');\n  }\n}\nexports.validateCheckCash = validateCheckCash;","map":{"version":3,"names":["errors_1","require","common_1","validateCheckCash","tx","validateBaseTransaction","Amount","DeliverMin","ValidationError","undefined","isAmount","CheckID","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/checkCash.ts"],"sourcesContent":["import { ValidationError } from '../../errors'\nimport { Amount } from '../common'\n\nimport { BaseTransaction, validateBaseTransaction, isAmount } from './common'\n\n/**\n * Attempts to redeem a Check object in the ledger to receive up to the amount\n * authorized by the corresponding CheckCreate transaction. Only the Destination\n * address of a Check can cash it with a CheckCash transaction.\n *\n * @category Transaction Models\n */\nexport interface CheckCash extends BaseTransaction {\n  TransactionType: 'CheckCash'\n  /**\n   * The ID of the Check ledger object to cash as a 64-character hexadecimal\n   * string.\n   */\n  CheckID: string\n  /**\n   * Redeem the Check for exactly this amount, if possible. The currency must\n   * match that of the SendMax of the corresponding CheckCreate transaction. You.\n   * must provide either this field or DeliverMin.\n   */\n  Amount?: Amount\n  /**\n   * Redeem the Check for at least this amount and for as much as possible. The\n   * currency must match that of the SendMax of the corresponding CheckCreate.\n   * transaction. You must provide either this field or Amount.\n   */\n  DeliverMin?: Amount\n}\n\n/**\n * Verify the form and type of an CheckCash at runtime.\n *\n * @param tx - An CheckCash Transaction.\n * @throws When the CheckCash is Malformed.\n */\nexport function validateCheckCash(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  if (tx.Amount == null && tx.DeliverMin == null) {\n    throw new ValidationError(\n      'CheckCash: must have either Amount or DeliverMin',\n    )\n  }\n\n  if (tx.Amount != null && tx.DeliverMin != null) {\n    throw new ValidationError(\n      'CheckCash: cannot have both Amount and DeliverMin',\n    )\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Necessary check\n  if (tx.Amount != null && tx.Amount !== undefined && !isAmount(tx.Amount)) {\n    throw new ValidationError('CheckCash: invalid Amount')\n  }\n\n  if (\n    tx.DeliverMin != null &&\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition -- Necessary check\n    tx.DeliverMin !== undefined &&\n    !isAmount(tx.DeliverMin)\n  ) {\n    throw new ValidationError('CheckCash: invalid DeliverMin')\n  }\n\n  if (tx.CheckID !== undefined && typeof tx.CheckID !== 'string') {\n    throw new ValidationError('CheckCash: invalid CheckID')\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAGA,MAAAC,QAAA,GAAAD,OAAA;AAoCA,SAAgBE,iBAAiBA,CAACC,EAA2B;EAC3D,IAAAF,QAAA,CAAAG,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAIA,EAAE,CAACE,MAAM,IAAI,IAAI,IAAIF,EAAE,CAACG,UAAU,IAAI,IAAI,EAAE;IAC9C,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CACvB,kDAAkD,CACnD;;EAGH,IAAIJ,EAAE,CAACE,MAAM,IAAI,IAAI,IAAIF,EAAE,CAACG,UAAU,IAAI,IAAI,EAAE;IAC9C,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CACvB,mDAAmD,CACpD;;EAIH,IAAIJ,EAAE,CAACE,MAAM,IAAI,IAAI,IAAIF,EAAE,CAACE,MAAM,KAAKG,SAAS,IAAI,CAAC,IAAAP,QAAA,CAAAQ,QAAQ,EAACN,EAAE,CAACE,MAAM,CAAC,EAAE;IACxE,MAAM,IAAIN,QAAA,CAAAQ,eAAe,CAAC,2BAA2B,CAAC;;EAGxD,IACEJ,EAAE,CAACG,UAAU,IAAI,IAAI,IAErBH,EAAE,CAACG,UAAU,KAAKE,SAAS,IAC3B,CAAC,IAAAP,QAAA,CAAAQ,QAAQ,EAACN,EAAE,CAACG,UAAU,CAAC,EACxB;IACA,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CAAC,+BAA+B,CAAC;;EAG5D,IAAIJ,EAAE,CAACO,OAAO,KAAKF,SAAS,IAAI,OAAOL,EAAE,CAACO,OAAO,KAAK,QAAQ,EAAE;IAC9D,MAAM,IAAIX,QAAA,CAAAQ,eAAe,CAAC,4BAA4B,CAAC;;AAE3D;AAhCAI,OAAA,CAAAT,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
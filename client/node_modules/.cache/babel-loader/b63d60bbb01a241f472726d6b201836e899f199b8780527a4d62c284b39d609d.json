{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst errors_1 = require(\"../errors\");\nclass RequestManager {\n  constructor() {\n    this.nextId = 0;\n    this.promisesAwaitingResponse = new Map();\n  }\n  addPromise(newId, timer) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.promisesAwaitingResponse.set(newId, {\n          resolve,\n          reject,\n          timer\n        });\n      });\n    });\n  }\n  resolve(id, response) {\n    const promise = this.promisesAwaitingResponse.get(id);\n    if (promise == null) {\n      throw new errors_1.XrplError(`No existing promise with id ${id}`, {\n        type: 'resolve',\n        response\n      });\n    }\n    clearTimeout(promise.timer);\n    promise.resolve(response);\n    this.deletePromise(id);\n  }\n  reject(id, error) {\n    const promise = this.promisesAwaitingResponse.get(id);\n    if (promise == null) {\n      throw new errors_1.XrplError(`No existing promise with id ${id}`, {\n        type: 'reject',\n        error\n      });\n    }\n    clearTimeout(promise.timer);\n    promise.reject(error);\n    this.deletePromise(id);\n  }\n  rejectAll(error) {\n    this.promisesAwaitingResponse.forEach((_promise, id, _map) => {\n      this.reject(id, error);\n      this.deletePromise(id);\n    });\n  }\n  createRequest(request, timeout) {\n    let newId;\n    if (request.id == null) {\n      newId = this.nextId;\n      this.nextId += 1;\n    } else {\n      newId = request.id;\n    }\n    const newRequest = JSON.stringify(Object.assign(Object.assign({}, request), {\n      id: newId\n    }));\n    const timer = setTimeout(() => {\n      this.reject(newId, new errors_1.TimeoutError(`Timeout for request: ${JSON.stringify(request)} with id ${newId}`, request));\n    }, timeout);\n    if (timer.unref) {\n      ;\n      timer.unref();\n    }\n    if (this.promisesAwaitingResponse.has(newId)) {\n      clearTimeout(timer);\n      throw new errors_1.XrplError(`Response with id '${newId}' is already pending`, request);\n    }\n    const newPromise = new Promise((resolve, reject) => {\n      this.promisesAwaitingResponse.set(newId, {\n        resolve,\n        reject,\n        timer\n      });\n    });\n    return [newId, newRequest, newPromise];\n  }\n  handleResponse(response) {\n    var _a, _b;\n    if (response.id == null || !(typeof response.id === 'string' || typeof response.id === 'number')) {\n      throw new errors_1.ResponseFormatError('valid id not found in response', response);\n    }\n    if (!this.promisesAwaitingResponse.has(response.id)) {\n      return;\n    }\n    if (response.status == null) {\n      const error = new errors_1.ResponseFormatError('Response has no status');\n      this.reject(response.id, error);\n    }\n    if (response.status === 'error') {\n      const errorResponse = response;\n      const error = new errors_1.RippledError((_a = errorResponse.error_message) !== null && _a !== void 0 ? _a : errorResponse.error, errorResponse);\n      this.reject(response.id, error);\n      return;\n    }\n    if (response.status !== 'success') {\n      const error = new errors_1.ResponseFormatError(`unrecognized response.status: ${(_b = response.status) !== null && _b !== void 0 ? _b : ''}`, response);\n      this.reject(response.id, error);\n      return;\n    }\n    delete response.status;\n    this.resolve(response.id, response);\n  }\n  deletePromise(id) {\n    this.promisesAwaitingResponse.delete(id);\n  }\n}\nexports.default = RequestManager;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","errors_1","require","RequestManager","constructor","nextId","promisesAwaitingResponse","Map","addPromise","newId","timer","set","id","response","promise","get","XrplError","type","clearTimeout","deletePromise","error","rejectAll","forEach","_promise","_map","createRequest","request","timeout","newRequest","JSON","stringify","assign","setTimeout","TimeoutError","unref","has","newPromise","handleResponse","_a","_b","ResponseFormatError","status","errorResponse","RippledError","error_message","delete","default"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/client/RequestManager.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst errors_1 = require(\"../errors\");\nclass RequestManager {\n    constructor() {\n        this.nextId = 0;\n        this.promisesAwaitingResponse = new Map();\n    }\n    addPromise(newId, timer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.promisesAwaitingResponse.set(newId, {\n                    resolve,\n                    reject,\n                    timer,\n                });\n            });\n        });\n    }\n    resolve(id, response) {\n        const promise = this.promisesAwaitingResponse.get(id);\n        if (promise == null) {\n            throw new errors_1.XrplError(`No existing promise with id ${id}`, {\n                type: 'resolve',\n                response,\n            });\n        }\n        clearTimeout(promise.timer);\n        promise.resolve(response);\n        this.deletePromise(id);\n    }\n    reject(id, error) {\n        const promise = this.promisesAwaitingResponse.get(id);\n        if (promise == null) {\n            throw new errors_1.XrplError(`No existing promise with id ${id}`, {\n                type: 'reject',\n                error,\n            });\n        }\n        clearTimeout(promise.timer);\n        promise.reject(error);\n        this.deletePromise(id);\n    }\n    rejectAll(error) {\n        this.promisesAwaitingResponse.forEach((_promise, id, _map) => {\n            this.reject(id, error);\n            this.deletePromise(id);\n        });\n    }\n    createRequest(request, timeout) {\n        let newId;\n        if (request.id == null) {\n            newId = this.nextId;\n            this.nextId += 1;\n        }\n        else {\n            newId = request.id;\n        }\n        const newRequest = JSON.stringify(Object.assign(Object.assign({}, request), { id: newId }));\n        const timer = setTimeout(() => {\n            this.reject(newId, new errors_1.TimeoutError(`Timeout for request: ${JSON.stringify(request)} with id ${newId}`, request));\n        }, timeout);\n        if (timer.unref) {\n            ;\n            timer.unref();\n        }\n        if (this.promisesAwaitingResponse.has(newId)) {\n            clearTimeout(timer);\n            throw new errors_1.XrplError(`Response with id '${newId}' is already pending`, request);\n        }\n        const newPromise = new Promise((resolve, reject) => {\n            this.promisesAwaitingResponse.set(newId, {\n                resolve,\n                reject,\n                timer,\n            });\n        });\n        return [newId, newRequest, newPromise];\n    }\n    handleResponse(response) {\n        var _a, _b;\n        if (response.id == null ||\n            !(typeof response.id === 'string' || typeof response.id === 'number')) {\n            throw new errors_1.ResponseFormatError('valid id not found in response', response);\n        }\n        if (!this.promisesAwaitingResponse.has(response.id)) {\n            return;\n        }\n        if (response.status == null) {\n            const error = new errors_1.ResponseFormatError('Response has no status');\n            this.reject(response.id, error);\n        }\n        if (response.status === 'error') {\n            const errorResponse = response;\n            const error = new errors_1.RippledError((_a = errorResponse.error_message) !== null && _a !== void 0 ? _a : errorResponse.error, errorResponse);\n            this.reject(response.id, error);\n            return;\n        }\n        if (response.status !== 'success') {\n            const error = new errors_1.ResponseFormatError(`unrecognized response.status: ${(_b = response.status) !== null && _b !== void 0 ? _b : ''}`, response);\n            this.reject(response.id, error);\n            return;\n        }\n        delete response.status;\n        this.resolve(response.id, response);\n    }\n    deletePromise(id) {\n        this.promisesAwaitingResponse.delete(id);\n    }\n}\nexports.default = RequestManager;\n//# sourceMappingURL=RequestManager.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAMMWithdraw = exports.AMMWithdrawFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nvar AMMWithdrawFlags;\n(function (AMMWithdrawFlags) {\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfLPToken\"] = 65536] = \"tfLPToken\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfWithdrawAll\"] = 131072] = \"tfWithdrawAll\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfOneAssetWithdrawAll\"] = 262144] = \"tfOneAssetWithdrawAll\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfSingleAsset\"] = 524288] = \"tfSingleAsset\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfTwoAsset\"] = 1048576] = \"tfTwoAsset\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfOneAssetLPToken\"] = 2097152] = \"tfOneAssetLPToken\";\n  AMMWithdrawFlags[AMMWithdrawFlags[\"tfLimitLPToken\"] = 4194304] = \"tfLimitLPToken\";\n})(AMMWithdrawFlags || (exports.AMMWithdrawFlags = AMMWithdrawFlags = {}));\nfunction validateAMMWithdraw(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Asset == null) {\n    throw new errors_1.ValidationError('AMMWithdraw: missing field Asset');\n  }\n  if (!(0, common_1.isCurrency)(tx.Asset)) {\n    throw new errors_1.ValidationError('AMMWithdraw: Asset must be a Currency');\n  }\n  if (tx.Asset2 == null) {\n    throw new errors_1.ValidationError('AMMWithdraw: missing field Asset2');\n  }\n  if (!(0, common_1.isCurrency)(tx.Asset2)) {\n    throw new errors_1.ValidationError('AMMWithdraw: Asset2 must be a Currency');\n  }\n  if (tx.Amount2 != null && tx.Amount == null) {\n    throw new errors_1.ValidationError('AMMWithdraw: must set Amount with Amount2');\n  } else if (tx.EPrice != null && tx.Amount == null) {\n    throw new errors_1.ValidationError('AMMWithdraw: must set Amount with EPrice');\n  }\n  if (tx.LPTokenIn != null && !(0, common_1.isIssuedCurrency)(tx.LPTokenIn)) {\n    throw new errors_1.ValidationError('AMMWithdraw: LPTokenIn must be an IssuedCurrencyAmount');\n  }\n  if (tx.Amount != null && !(0, common_1.isAmount)(tx.Amount)) {\n    throw new errors_1.ValidationError('AMMWithdraw: Amount must be an Amount');\n  }\n  if (tx.Amount2 != null && !(0, common_1.isAmount)(tx.Amount2)) {\n    throw new errors_1.ValidationError('AMMWithdraw: Amount2 must be an Amount');\n  }\n  if (tx.EPrice != null && !(0, common_1.isAmount)(tx.EPrice)) {\n    throw new errors_1.ValidationError('AMMWithdraw: EPrice must be an Amount');\n  }\n}\nexports.validateAMMWithdraw = validateAMMWithdraw;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateAMMWithdraw","AMMWithdrawFlags","errors_1","require","common_1","tx","validateBaseTransaction","Asset","ValidationError","isCurrency","Asset2","Amount2","Amount","EPrice","LPTokenIn","isIssuedCurrency","isAmount"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/models/transactions/AMMWithdraw.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAMMWithdraw = exports.AMMWithdrawFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nvar AMMWithdrawFlags;\n(function (AMMWithdrawFlags) {\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfLPToken\"] = 65536] = \"tfLPToken\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfWithdrawAll\"] = 131072] = \"tfWithdrawAll\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfOneAssetWithdrawAll\"] = 262144] = \"tfOneAssetWithdrawAll\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfSingleAsset\"] = 524288] = \"tfSingleAsset\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfTwoAsset\"] = 1048576] = \"tfTwoAsset\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfOneAssetLPToken\"] = 2097152] = \"tfOneAssetLPToken\";\n    AMMWithdrawFlags[AMMWithdrawFlags[\"tfLimitLPToken\"] = 4194304] = \"tfLimitLPToken\";\n})(AMMWithdrawFlags || (exports.AMMWithdrawFlags = AMMWithdrawFlags = {}));\nfunction validateAMMWithdraw(tx) {\n    (0, common_1.validateBaseTransaction)(tx);\n    if (tx.Asset == null) {\n        throw new errors_1.ValidationError('AMMWithdraw: missing field Asset');\n    }\n    if (!(0, common_1.isCurrency)(tx.Asset)) {\n        throw new errors_1.ValidationError('AMMWithdraw: Asset must be a Currency');\n    }\n    if (tx.Asset2 == null) {\n        throw new errors_1.ValidationError('AMMWithdraw: missing field Asset2');\n    }\n    if (!(0, common_1.isCurrency)(tx.Asset2)) {\n        throw new errors_1.ValidationError('AMMWithdraw: Asset2 must be a Currency');\n    }\n    if (tx.Amount2 != null && tx.Amount == null) {\n        throw new errors_1.ValidationError('AMMWithdraw: must set Amount with Amount2');\n    }\n    else if (tx.EPrice != null && tx.Amount == null) {\n        throw new errors_1.ValidationError('AMMWithdraw: must set Amount with EPrice');\n    }\n    if (tx.LPTokenIn != null && !(0, common_1.isIssuedCurrency)(tx.LPTokenIn)) {\n        throw new errors_1.ValidationError('AMMWithdraw: LPTokenIn must be an IssuedCurrencyAmount');\n    }\n    if (tx.Amount != null && !(0, common_1.isAmount)(tx.Amount)) {\n        throw new errors_1.ValidationError('AMMWithdraw: Amount must be an Amount');\n    }\n    if (tx.Amount2 != null && !(0, common_1.isAmount)(tx.Amount2)) {\n        throw new errors_1.ValidationError('AMMWithdraw: Amount2 must be an Amount');\n    }\n    if (tx.EPrice != null && !(0, common_1.isAmount)(tx.EPrice)) {\n        throw new errors_1.ValidationError('AMMWithdraw: EPrice must be an Amount');\n    }\n}\nexports.validateAMMWithdraw = validateAMMWithdraw;\n//# sourceMappingURL=AMMWithdraw.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
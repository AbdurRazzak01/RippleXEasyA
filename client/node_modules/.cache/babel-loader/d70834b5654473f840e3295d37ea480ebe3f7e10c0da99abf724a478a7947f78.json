{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validatePayment = exports.PaymentFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nvar PaymentFlags;\n(function (PaymentFlags) {\n  PaymentFlags[PaymentFlags[\"tfNoDirectRipple\"] = 65536] = \"tfNoDirectRipple\";\n  PaymentFlags[PaymentFlags[\"tfPartialPayment\"] = 131072] = \"tfPartialPayment\";\n  PaymentFlags[PaymentFlags[\"tfLimitQuality\"] = 262144] = \"tfLimitQuality\";\n})(PaymentFlags || (exports.PaymentFlags = PaymentFlags = {}));\nfunction validatePayment(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Amount === undefined) {\n    throw new errors_1.ValidationError('PaymentTransaction: missing field Amount');\n  }\n  if (!(0, common_1.isAmount)(tx.Amount)) {\n    throw new errors_1.ValidationError('PaymentTransaction: invalid Amount');\n  }\n  (0, common_1.validateRequiredField)(tx, 'Destination', common_1.isAccount);\n  (0, common_1.validateOptionalField)(tx, 'DestinationTag', common_1.isNumber);\n  if (tx.InvoiceID !== undefined && typeof tx.InvoiceID !== 'string') {\n    throw new errors_1.ValidationError('PaymentTransaction: InvoiceID must be a string');\n  }\n  if (tx.Paths !== undefined && !isPaths(tx.Paths)) {\n    throw new errors_1.ValidationError('PaymentTransaction: invalid Paths');\n  }\n  if (tx.SendMax !== undefined && !(0, common_1.isAmount)(tx.SendMax)) {\n    throw new errors_1.ValidationError('PaymentTransaction: invalid SendMax');\n  }\n  checkPartialPayment(tx);\n}\nexports.validatePayment = validatePayment;\nfunction checkPartialPayment(tx) {\n  var _a;\n  if (tx.DeliverMin != null) {\n    if (tx.Flags == null) {\n      throw new errors_1.ValidationError('PaymentTransaction: tfPartialPayment flag required with DeliverMin');\n    }\n    const flags = tx.Flags;\n    const isTfPartialPayment = typeof flags === 'number' ? (0, utils_1.isFlagEnabled)(flags, PaymentFlags.tfPartialPayment) : (_a = flags.tfPartialPayment) !== null && _a !== void 0 ? _a : false;\n    if (!isTfPartialPayment) {\n      throw new errors_1.ValidationError('PaymentTransaction: tfPartialPayment flag required with DeliverMin');\n    }\n    if (!(0, common_1.isAmount)(tx.DeliverMin)) {\n      throw new errors_1.ValidationError('PaymentTransaction: invalid DeliverMin');\n    }\n  }\n}\nfunction isPathStep(pathStep) {\n  if (pathStep.account !== undefined && typeof pathStep.account !== 'string') {\n    return false;\n  }\n  if (pathStep.currency !== undefined && typeof pathStep.currency !== 'string') {\n    return false;\n  }\n  if (pathStep.issuer !== undefined && typeof pathStep.issuer !== 'string') {\n    return false;\n  }\n  if (pathStep.account !== undefined && pathStep.currency === undefined && pathStep.issuer === undefined) {\n    return true;\n  }\n  if (pathStep.currency !== undefined || pathStep.issuer !== undefined) {\n    return true;\n  }\n  return false;\n}\nfunction isPath(path) {\n  for (const pathStep of path) {\n    if (!isPathStep(pathStep)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPaths(paths) {\n  if (!Array.isArray(paths) || paths.length === 0) {\n    return false;\n  }\n  for (const path of paths) {\n    if (!Array.isArray(path) || path.length === 0) {\n      return false;\n    }\n    if (!isPath(path)) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","validatePayment","PaymentFlags","errors_1","require","utils_1","common_1","tx","validateBaseTransaction","Amount","undefined","ValidationError","isAmount","validateRequiredField","isAccount","validateOptionalField","isNumber","InvoiceID","Paths","isPaths","SendMax","checkPartialPayment","_a","DeliverMin","Flags","flags","isTfPartialPayment","isFlagEnabled","tfPartialPayment","isPathStep","pathStep","account","currency","issuer","isPath","path","paths","Array","isArray","length"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/models/transactions/payment.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validatePayment = exports.PaymentFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst utils_1 = require(\"../utils\");\nconst common_1 = require(\"./common\");\nvar PaymentFlags;\n(function (PaymentFlags) {\n    PaymentFlags[PaymentFlags[\"tfNoDirectRipple\"] = 65536] = \"tfNoDirectRipple\";\n    PaymentFlags[PaymentFlags[\"tfPartialPayment\"] = 131072] = \"tfPartialPayment\";\n    PaymentFlags[PaymentFlags[\"tfLimitQuality\"] = 262144] = \"tfLimitQuality\";\n})(PaymentFlags || (exports.PaymentFlags = PaymentFlags = {}));\nfunction validatePayment(tx) {\n    (0, common_1.validateBaseTransaction)(tx);\n    if (tx.Amount === undefined) {\n        throw new errors_1.ValidationError('PaymentTransaction: missing field Amount');\n    }\n    if (!(0, common_1.isAmount)(tx.Amount)) {\n        throw new errors_1.ValidationError('PaymentTransaction: invalid Amount');\n    }\n    (0, common_1.validateRequiredField)(tx, 'Destination', common_1.isAccount);\n    (0, common_1.validateOptionalField)(tx, 'DestinationTag', common_1.isNumber);\n    if (tx.InvoiceID !== undefined && typeof tx.InvoiceID !== 'string') {\n        throw new errors_1.ValidationError('PaymentTransaction: InvoiceID must be a string');\n    }\n    if (tx.Paths !== undefined &&\n        !isPaths(tx.Paths)) {\n        throw new errors_1.ValidationError('PaymentTransaction: invalid Paths');\n    }\n    if (tx.SendMax !== undefined && !(0, common_1.isAmount)(tx.SendMax)) {\n        throw new errors_1.ValidationError('PaymentTransaction: invalid SendMax');\n    }\n    checkPartialPayment(tx);\n}\nexports.validatePayment = validatePayment;\nfunction checkPartialPayment(tx) {\n    var _a;\n    if (tx.DeliverMin != null) {\n        if (tx.Flags == null) {\n            throw new errors_1.ValidationError('PaymentTransaction: tfPartialPayment flag required with DeliverMin');\n        }\n        const flags = tx.Flags;\n        const isTfPartialPayment = typeof flags === 'number'\n            ? (0, utils_1.isFlagEnabled)(flags, PaymentFlags.tfPartialPayment)\n            : (_a = flags.tfPartialPayment) !== null && _a !== void 0 ? _a : false;\n        if (!isTfPartialPayment) {\n            throw new errors_1.ValidationError('PaymentTransaction: tfPartialPayment flag required with DeliverMin');\n        }\n        if (!(0, common_1.isAmount)(tx.DeliverMin)) {\n            throw new errors_1.ValidationError('PaymentTransaction: invalid DeliverMin');\n        }\n    }\n}\nfunction isPathStep(pathStep) {\n    if (pathStep.account !== undefined && typeof pathStep.account !== 'string') {\n        return false;\n    }\n    if (pathStep.currency !== undefined &&\n        typeof pathStep.currency !== 'string') {\n        return false;\n    }\n    if (pathStep.issuer !== undefined && typeof pathStep.issuer !== 'string') {\n        return false;\n    }\n    if (pathStep.account !== undefined &&\n        pathStep.currency === undefined &&\n        pathStep.issuer === undefined) {\n        return true;\n    }\n    if (pathStep.currency !== undefined || pathStep.issuer !== undefined) {\n        return true;\n    }\n    return false;\n}\nfunction isPath(path) {\n    for (const pathStep of path) {\n        if (!isPathStep(pathStep)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isPaths(paths) {\n    if (!Array.isArray(paths) || paths.length === 0) {\n        return false;\n    }\n    for (const path of paths) {\n        if (!Array.isArray(path) || path.length === 0) {\n            return false;\n        }\n        if (!isPath(path)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=payment.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,YAAY,GAAG,KAAK,CAAC;AACvD,MAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAU,CAAC;AACnC,MAAME,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AACpC,IAAIF,YAAY;AAChB,CAAC,UAAUA,YAAY,EAAE;EACrBA,YAAY,CAACA,YAAY,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC,GAAG,kBAAkB;EAC3EA,YAAY,CAACA,YAAY,CAAC,kBAAkB,CAAC,GAAG,MAAM,CAAC,GAAG,kBAAkB;EAC5EA,YAAY,CAACA,YAAY,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,GAAG,gBAAgB;AAC5E,CAAC,EAAEA,YAAY,KAAKH,OAAO,CAACG,YAAY,GAAGA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;AAC9D,SAASD,eAAeA,CAACM,EAAE,EAAE;EACzB,CAAC,CAAC,EAAED,QAAQ,CAACE,uBAAuB,EAAED,EAAE,CAAC;EACzC,IAAIA,EAAE,CAACE,MAAM,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIP,QAAQ,CAACQ,eAAe,CAAC,0CAA0C,CAAC;EAClF;EACA,IAAI,CAAC,CAAC,CAAC,EAAEL,QAAQ,CAACM,QAAQ,EAAEL,EAAE,CAACE,MAAM,CAAC,EAAE;IACpC,MAAM,IAAIN,QAAQ,CAACQ,eAAe,CAAC,oCAAoC,CAAC;EAC5E;EACA,CAAC,CAAC,EAAEL,QAAQ,CAACO,qBAAqB,EAAEN,EAAE,EAAE,aAAa,EAAED,QAAQ,CAACQ,SAAS,CAAC;EAC1E,CAAC,CAAC,EAAER,QAAQ,CAACS,qBAAqB,EAAER,EAAE,EAAE,gBAAgB,EAAED,QAAQ,CAACU,QAAQ,CAAC;EAC5E,IAAIT,EAAE,CAACU,SAAS,KAAKP,SAAS,IAAI,OAAOH,EAAE,CAACU,SAAS,KAAK,QAAQ,EAAE;IAChE,MAAM,IAAId,QAAQ,CAACQ,eAAe,CAAC,gDAAgD,CAAC;EACxF;EACA,IAAIJ,EAAE,CAACW,KAAK,KAAKR,SAAS,IACtB,CAACS,OAAO,CAACZ,EAAE,CAACW,KAAK,CAAC,EAAE;IACpB,MAAM,IAAIf,QAAQ,CAACQ,eAAe,CAAC,mCAAmC,CAAC;EAC3E;EACA,IAAIJ,EAAE,CAACa,OAAO,KAAKV,SAAS,IAAI,CAAC,CAAC,CAAC,EAAEJ,QAAQ,CAACM,QAAQ,EAAEL,EAAE,CAACa,OAAO,CAAC,EAAE;IACjE,MAAM,IAAIjB,QAAQ,CAACQ,eAAe,CAAC,qCAAqC,CAAC;EAC7E;EACAU,mBAAmB,CAACd,EAAE,CAAC;AAC3B;AACAR,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC,SAASoB,mBAAmBA,CAACd,EAAE,EAAE;EAC7B,IAAIe,EAAE;EACN,IAAIf,EAAE,CAACgB,UAAU,IAAI,IAAI,EAAE;IACvB,IAAIhB,EAAE,CAACiB,KAAK,IAAI,IAAI,EAAE;MAClB,MAAM,IAAIrB,QAAQ,CAACQ,eAAe,CAAC,oEAAoE,CAAC;IAC5G;IACA,MAAMc,KAAK,GAAGlB,EAAE,CAACiB,KAAK;IACtB,MAAME,kBAAkB,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAC9C,CAAC,CAAC,EAAEpB,OAAO,CAACsB,aAAa,EAAEF,KAAK,EAAEvB,YAAY,CAAC0B,gBAAgB,CAAC,GAChE,CAACN,EAAE,GAAGG,KAAK,CAACG,gBAAgB,MAAM,IAAI,IAAIN,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;IAC1E,IAAI,CAACI,kBAAkB,EAAE;MACrB,MAAM,IAAIvB,QAAQ,CAACQ,eAAe,CAAC,oEAAoE,CAAC;IAC5G;IACA,IAAI,CAAC,CAAC,CAAC,EAAEL,QAAQ,CAACM,QAAQ,EAAEL,EAAE,CAACgB,UAAU,CAAC,EAAE;MACxC,MAAM,IAAIpB,QAAQ,CAACQ,eAAe,CAAC,wCAAwC,CAAC;IAChF;EACJ;AACJ;AACA,SAASkB,UAAUA,CAACC,QAAQ,EAAE;EAC1B,IAAIA,QAAQ,CAACC,OAAO,KAAKrB,SAAS,IAAI,OAAOoB,QAAQ,CAACC,OAAO,KAAK,QAAQ,EAAE;IACxE,OAAO,KAAK;EAChB;EACA,IAAID,QAAQ,CAACE,QAAQ,KAAKtB,SAAS,IAC/B,OAAOoB,QAAQ,CAACE,QAAQ,KAAK,QAAQ,EAAE;IACvC,OAAO,KAAK;EAChB;EACA,IAAIF,QAAQ,CAACG,MAAM,KAAKvB,SAAS,IAAI,OAAOoB,QAAQ,CAACG,MAAM,KAAK,QAAQ,EAAE;IACtE,OAAO,KAAK;EAChB;EACA,IAAIH,QAAQ,CAACC,OAAO,KAAKrB,SAAS,IAC9BoB,QAAQ,CAACE,QAAQ,KAAKtB,SAAS,IAC/BoB,QAAQ,CAACG,MAAM,KAAKvB,SAAS,EAAE;IAC/B,OAAO,IAAI;EACf;EACA,IAAIoB,QAAQ,CAACE,QAAQ,KAAKtB,SAAS,IAAIoB,QAAQ,CAACG,MAAM,KAAKvB,SAAS,EAAE;IAClE,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB;AACA,SAASwB,MAAMA,CAACC,IAAI,EAAE;EAClB,KAAK,MAAML,QAAQ,IAAIK,IAAI,EAAE;IACzB,IAAI,CAACN,UAAU,CAACC,QAAQ,CAAC,EAAE;MACvB,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AACA,SAASX,OAAOA,CAACiB,KAAK,EAAE;EACpB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IAC7C,OAAO,KAAK;EAChB;EACA,KAAK,MAAMJ,IAAI,IAAIC,KAAK,EAAE;IACtB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;MAC3C,OAAO,KAAK;IAChB;IACA,IAAI,CAACL,MAAM,CAACC,IAAI,CAAC,EAAE;MACf,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
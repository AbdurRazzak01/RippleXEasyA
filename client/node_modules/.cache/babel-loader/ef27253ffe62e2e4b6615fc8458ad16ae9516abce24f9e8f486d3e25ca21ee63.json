{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignerListFlags = void 0;\nvar SignerListFlags;\n(function (SignerListFlags) {\n  SignerListFlags[SignerListFlags[\"lsfOneOwnerCount\"] = 65536] = \"lsfOneOwnerCount\";\n})(SignerListFlags || (exports.SignerListFlags = SignerListFlags = {}));","map":{"version":3,"names":["SignerListFlags","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/ledger/SignerList.ts"],"sourcesContent":["import { SignerEntry } from '../common'\n\nimport { BaseLedgerEntry, HasPreviousTxnID } from './BaseLedgerEntry'\n\n/**\n * The SignerList object type represents a list of parties that, as a group,\n * are authorized to sign a transaction in place of an individual account. You\n * can create, replace, or remove a signer list using a SignerListSet\n * transaction.\n *\n * @category Ledger Entries\n */\nexport default interface SignerList extends BaseLedgerEntry, HasPreviousTxnID {\n  LedgerEntryType: 'SignerList'\n  /**\n   * A bit-map of Boolean flags enabled for this signer list. For more\n   * information, see SignerList Flags.\n   */\n  Flags: number\n  /**\n   * A hint indicating which page of the owner directory links to this object,\n   * in case the directory consists of multiple pages.\n   */\n  OwnerNode: string\n  /**\n   * An array of Signer Entry objects representing the parties who are part of\n   * this signer list.\n   */\n  SignerEntries: SignerEntry[]\n  /**\n   * An ID for this signer list. Currently always set to 0. If a future\n   * amendment allows multiple signer lists for an account, this may change.\n   */\n  SignerListID: number\n  /**\n   * A target number for signer weights. To produce a valid signature for the\n   * owner of this SignerList, the signers must provide valid signatures whose\n   * weights sum to this value or more.\n   */\n  SignerQuorum: number\n}\n\nexport enum SignerListFlags {\n  // True, uses only one OwnerCount\n  lsfOneOwnerCount = 0x00010000,\n}\n"],"mappings":";;;;;;AA0CA,IAAYA,eAGX;AAHD,WAAYA,eAAe;EAEzBA,eAAA,CAAAA,eAAA,kDAA6B;AAC/B,CAAC,EAHWA,eAAe,KAAAC,OAAA,CAAAD,eAAA,GAAfA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateXChainAddAccountCreateAttestation = void 0;\nconst common_1 = require(\"./common\");\nfunction validateXChainAddAccountCreateAttestation(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  (0, common_1.validateRequiredField)(tx, 'Amount', common_1.isAmount);\n  (0, common_1.validateRequiredField)(tx, 'AttestationRewardAccount', common_1.isAccount);\n  (0, common_1.validateRequiredField)(tx, 'AttestationSignerAccount', common_1.isAccount);\n  (0, common_1.validateRequiredField)(tx, 'Destination', common_1.isAccount);\n  (0, common_1.validateRequiredField)(tx, 'OtherChainSource', common_1.isAccount);\n  (0, common_1.validateRequiredField)(tx, 'PublicKey', common_1.isString);\n  (0, common_1.validateRequiredField)(tx, 'Signature', common_1.isString);\n  (0, common_1.validateRequiredField)(tx, 'SignatureReward', common_1.isAmount);\n  (0, common_1.validateRequiredField)(tx, 'WasLockingChainSend', inp => inp === 0 || inp === 1);\n  (0, common_1.validateRequiredField)(tx, 'XChainAccountCreateCount', inp => (0, common_1.isNumber)(inp) || (0, common_1.isString)(inp));\n  (0, common_1.validateRequiredField)(tx, 'XChainBridge', common_1.isXChainBridge);\n}\nexports.validateXChainAddAccountCreateAttestation = validateXChainAddAccountCreateAttestation;","map":{"version":3,"names":["common_1","require","validateXChainAddAccountCreateAttestation","tx","validateBaseTransaction","validateRequiredField","isAmount","isAccount","isString","inp","isNumber","isXChainBridge","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/XChainAddAccountCreateAttestation.ts"],"sourcesContent":["import { Amount, XChainBridge } from '../common'\n\nimport {\n  Account,\n  BaseTransaction,\n  isAccount,\n  isAmount,\n  isNumber,\n  isString,\n  isXChainBridge,\n  validateBaseTransaction,\n  validateRequiredField,\n} from './common'\n\n/**\n * The XChainAddAccountCreateAttestation transaction provides an attestation\n * from a witness server that a {@link XChainAccountCreateCommit} transaction\n * occurred on the other chain.\n *\n * @category Transaction Models\n */\nexport interface XChainAddAccountCreateAttestation extends BaseTransaction {\n  TransactionType: 'XChainAddAccountCreateAttestation'\n\n  /**\n   * The amount committed by the {@link XChainAccountCreateCommit} transaction\n   * on the source chain.\n   */\n  Amount: Amount\n\n  /**\n   * The account that should receive this signer's share of the SignatureReward.\n   */\n  AttestationRewardAccount: Account\n\n  /**\n   * The account on the door account's signer list that is signing the transaction.\n   */\n  AttestationSignerAccount: Account\n\n  /**\n   * The destination account for the funds on the destination chain.\n   */\n  Destination: Account\n\n  /**\n   * The account on the source chain that submitted the {@link XChainAccountCreateCommit}\n   * transaction that triggered the event associated with the attestation.\n   */\n  OtherChainSource: Account\n\n  /**\n   * The public key used to verify the signature.\n   */\n  PublicKey: string\n\n  /**\n   * The signature attesting to the event on the other chain.\n   */\n  Signature: string\n\n  /**\n   * The signature reward paid in the {@link XChainAccountCreateCommit} transaction.\n   */\n  SignatureReward: Amount\n\n  /**\n   * A boolean representing the chain where the event occurred.\n   */\n  WasLockingChainSend: 0 | 1\n\n  /**\n   * The counter that represents the order that the claims must be processed in.\n   */\n  XChainAccountCreateCount: number | string\n\n  /**\n   * The bridge associated with the attestation.\n   */\n  XChainBridge: XChainBridge\n}\n\n/**\n * Verify the form and type of an XChainAddAccountCreateAttestation at runtime.\n *\n * @param tx - An XChainAddAccountCreateAttestation Transaction.\n * @throws When the XChainAddAccountCreateAttestation is malformed.\n */\nexport function validateXChainAddAccountCreateAttestation(\n  tx: Record<string, unknown>,\n): void {\n  validateBaseTransaction(tx)\n\n  validateRequiredField(tx, 'Amount', isAmount)\n\n  validateRequiredField(tx, 'AttestationRewardAccount', isAccount)\n\n  validateRequiredField(tx, 'AttestationSignerAccount', isAccount)\n\n  validateRequiredField(tx, 'Destination', isAccount)\n\n  validateRequiredField(tx, 'OtherChainSource', isAccount)\n\n  validateRequiredField(tx, 'PublicKey', isString)\n\n  validateRequiredField(tx, 'Signature', isString)\n\n  validateRequiredField(tx, 'SignatureReward', isAmount)\n\n  validateRequiredField(\n    tx,\n    'WasLockingChainSend',\n    (inp) => inp === 0 || inp === 1,\n  )\n\n  validateRequiredField(\n    tx,\n    'XChainAccountCreateCount',\n    (inp) => isNumber(inp) || isString(inp),\n  )\n\n  validateRequiredField(tx, 'XChainBridge', isXChainBridge)\n}\n"],"mappings":";;;;;;AAEA,MAAAA,QAAA,GAAAC,OAAA;AAsFA,SAAgBC,yCAAyCA,CACvDC,EAA2B;EAE3B,IAAAH,QAAA,CAAAI,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAAH,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,QAAQ,EAAEH,QAAA,CAAAM,QAAQ,CAAC;EAE7C,IAAAN,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,0BAA0B,EAAEH,QAAA,CAAAO,SAAS,CAAC;EAEhE,IAAAP,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,0BAA0B,EAAEH,QAAA,CAAAO,SAAS,CAAC;EAEhE,IAAAP,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,aAAa,EAAEH,QAAA,CAAAO,SAAS,CAAC;EAEnD,IAAAP,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,kBAAkB,EAAEH,QAAA,CAAAO,SAAS,CAAC;EAExD,IAAAP,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,WAAW,EAAEH,QAAA,CAAAQ,QAAQ,CAAC;EAEhD,IAAAR,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,WAAW,EAAEH,QAAA,CAAAQ,QAAQ,CAAC;EAEhD,IAAAR,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,iBAAiB,EAAEH,QAAA,CAAAM,QAAQ,CAAC;EAEtD,IAAAN,QAAA,CAAAK,qBAAqB,EACnBF,EAAE,EACF,qBAAqB,EACpBM,GAAG,IAAKA,GAAG,KAAK,CAAC,IAAIA,GAAG,KAAK,CAAC,CAChC;EAED,IAAAT,QAAA,CAAAK,qBAAqB,EACnBF,EAAE,EACF,0BAA0B,EACzBM,GAAG,IAAK,IAAAT,QAAA,CAAAU,QAAQ,EAACD,GAAG,CAAC,IAAI,IAAAT,QAAA,CAAAQ,QAAQ,EAACC,GAAG,CAAC,CACxC;EAED,IAAAT,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,cAAc,EAAEH,QAAA,CAAAW,cAAc,CAAC;AAC3D;AAlCAC,OAAA,CAAAV,yCAAA,GAAAA,yCAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
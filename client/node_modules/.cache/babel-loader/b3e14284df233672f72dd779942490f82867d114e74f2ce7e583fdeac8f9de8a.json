{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAMMDelete = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nfunction validateAMMDelete(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Asset == null) {\n    throw new errors_1.ValidationError('AMMDelete: missing field Asset');\n  }\n  if (!(0, common_1.isCurrency)(tx.Asset)) {\n    throw new errors_1.ValidationError('AMMDelete: Asset must be a Currency');\n  }\n  if (tx.Asset2 == null) {\n    throw new errors_1.ValidationError('AMMDelete: missing field Asset2');\n  }\n  if (!(0, common_1.isCurrency)(tx.Asset2)) {\n    throw new errors_1.ValidationError('AMMDelete: Asset2 must be a Currency');\n  }\n}\nexports.validateAMMDelete = validateAMMDelete;","map":{"version":3,"names":["errors_1","require","common_1","validateAMMDelete","tx","validateBaseTransaction","Asset","ValidationError","isCurrency","Asset2","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/AMMDelete.ts"],"sourcesContent":["import { ValidationError } from '../../errors'\nimport { Currency } from '../common'\n\nimport { BaseTransaction, isCurrency, validateBaseTransaction } from './common'\n\n/**\n * Delete an empty Automated Market Maker (AMM) instance that could not be fully deleted automatically.\n *\n * Tip: The AMMWithdraw transaction automatically tries to delete an AMM, along with associated ledger\n * entries such as empty trust lines, if it withdrew all the assets from the AMM's pool.\n * However, if there are too many trust lines to the AMM account to remove in one transaction,\n * it may stop before fully removing the AMM. Similarly, an AMMDelete transaction removes up to\n * a maximum number of trust lines; in extreme cases, it may take several AMMDelete transactions\n * to fully delete the trust lines and the associated AMM.\n * In all cases, the AMM ledger entry and AMM account are deleted by the last such transaction.\n */\nexport interface AMMDelete extends BaseTransaction {\n  TransactionType: 'AMMDelete'\n\n  /**\n   * The definition for one of the assets in the AMM's pool.\n   */\n  Asset: Currency\n\n  /**\n   * The definition for the other asset in the AMM's pool.\n   */\n  Asset2: Currency\n}\n\n/**\n * Verify the form and type of an AMMDelete at runtime.\n *\n * @param tx - An AMMDelete Transaction.\n * @throws When the AMMDelete is Malformed.\n */\nexport function validateAMMDelete(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  if (tx.Asset == null) {\n    throw new ValidationError('AMMDelete: missing field Asset')\n  }\n\n  if (!isCurrency(tx.Asset)) {\n    throw new ValidationError('AMMDelete: Asset must be a Currency')\n  }\n\n  if (tx.Asset2 == null) {\n    throw new ValidationError('AMMDelete: missing field Asset2')\n  }\n\n  if (!isCurrency(tx.Asset2)) {\n    throw new ValidationError('AMMDelete: Asset2 must be a Currency')\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAGA,MAAAC,QAAA,GAAAD,OAAA;AAiCA,SAAgBE,iBAAiBA,CAACC,EAA2B;EAC3D,IAAAF,QAAA,CAAAG,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAIA,EAAE,CAACE,KAAK,IAAI,IAAI,EAAE;IACpB,MAAM,IAAIN,QAAA,CAAAO,eAAe,CAAC,gCAAgC,CAAC;;EAG7D,IAAI,CAAC,IAAAL,QAAA,CAAAM,UAAU,EAACJ,EAAE,CAACE,KAAK,CAAC,EAAE;IACzB,MAAM,IAAIN,QAAA,CAAAO,eAAe,CAAC,qCAAqC,CAAC;;EAGlE,IAAIH,EAAE,CAACK,MAAM,IAAI,IAAI,EAAE;IACrB,MAAM,IAAIT,QAAA,CAAAO,eAAe,CAAC,iCAAiC,CAAC;;EAG9D,IAAI,CAAC,IAAAL,QAAA,CAAAM,UAAU,EAACJ,EAAE,CAACK,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIT,QAAA,CAAAO,eAAe,CAAC,sCAAsC,CAAC;;AAErE;AAlBAG,OAAA,CAAAP,iBAAA,GAAAA,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
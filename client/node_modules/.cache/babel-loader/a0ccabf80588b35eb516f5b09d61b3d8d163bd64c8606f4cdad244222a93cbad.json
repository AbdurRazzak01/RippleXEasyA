{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setTransactionFlagsToNumber = exports.parseAccountRootFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst AccountRoot_1 = require(\"../ledger/AccountRoot\");\nconst accountSet_1 = require(\"../transactions/accountSet\");\nconst AMMDeposit_1 = require(\"../transactions/AMMDeposit\");\nconst AMMWithdraw_1 = require(\"../transactions/AMMWithdraw\");\nconst NFTokenCreateOffer_1 = require(\"../transactions/NFTokenCreateOffer\");\nconst NFTokenMint_1 = require(\"../transactions/NFTokenMint\");\nconst offerCreate_1 = require(\"../transactions/offerCreate\");\nconst payment_1 = require(\"../transactions/payment\");\nconst paymentChannelClaim_1 = require(\"../transactions/paymentChannelClaim\");\nconst trustSet_1 = require(\"../transactions/trustSet\");\nconst XChainModifyBridge_1 = require(\"../transactions/XChainModifyBridge\");\nconst _1 = require(\".\");\nfunction parseAccountRootFlags(flags) {\n  const flagsInterface = {};\n  Object.values(AccountRoot_1.AccountRootFlags).forEach(flag => {\n    if (typeof flag === 'string' && (0, _1.isFlagEnabled)(flags, AccountRoot_1.AccountRootFlags[flag])) {\n      flagsInterface[flag] = true;\n    }\n  });\n  return flagsInterface;\n}\nexports.parseAccountRootFlags = parseAccountRootFlags;\nconst txToFlag = {\n  AccountSet: accountSet_1.AccountSetTfFlags,\n  AMMDeposit: AMMDeposit_1.AMMDepositFlags,\n  AMMWithdraw: AMMWithdraw_1.AMMWithdrawFlags,\n  NFTokenCreateOffer: NFTokenCreateOffer_1.NFTokenCreateOfferFlags,\n  NFTokenMint: NFTokenMint_1.NFTokenMintFlags,\n  OfferCreate: offerCreate_1.OfferCreateFlags,\n  PaymentChannelClaim: paymentChannelClaim_1.PaymentChannelClaimFlags,\n  Payment: payment_1.PaymentFlags,\n  TrustSet: trustSet_1.TrustSetFlags,\n  XChainModifyBridge: XChainModifyBridge_1.XChainModifyBridgeFlags\n};\nfunction setTransactionFlagsToNumber(tx) {\n  if (tx.Flags == null) {\n    tx.Flags = 0;\n    return;\n  }\n  if (typeof tx.Flags === 'number') {\n    return;\n  }\n  tx.Flags = txToFlag[tx.TransactionType] ? convertFlagsToNumber(tx.Flags, txToFlag[tx.TransactionType]) : 0;\n}\nexports.setTransactionFlagsToNumber = setTransactionFlagsToNumber;\nfunction convertFlagsToNumber(flags, flagEnum) {\n  return Object.keys(flags).reduce((resultFlags, flag) => {\n    if (flagEnum[flag] == null) {\n      throw new errors_1.ValidationError(`flag ${flag} doesn't exist in flagEnum: ${JSON.stringify(flagEnum)}`);\n    }\n    return flags[flag] ? resultFlags | flagEnum[flag] : resultFlags;\n  }, 0);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","setTransactionFlagsToNumber","parseAccountRootFlags","errors_1","require","AccountRoot_1","accountSet_1","AMMDeposit_1","AMMWithdraw_1","NFTokenCreateOffer_1","NFTokenMint_1","offerCreate_1","payment_1","paymentChannelClaim_1","trustSet_1","XChainModifyBridge_1","_1","flags","flagsInterface","values","AccountRootFlags","forEach","flag","isFlagEnabled","txToFlag","AccountSet","AccountSetTfFlags","AMMDeposit","AMMDepositFlags","AMMWithdraw","AMMWithdrawFlags","NFTokenCreateOffer","NFTokenCreateOfferFlags","NFTokenMint","NFTokenMintFlags","OfferCreate","OfferCreateFlags","PaymentChannelClaim","PaymentChannelClaimFlags","Payment","PaymentFlags","TrustSet","TrustSetFlags","XChainModifyBridge","XChainModifyBridgeFlags","tx","Flags","TransactionType","convertFlagsToNumber","flagEnum","keys","reduce","resultFlags","ValidationError","JSON","stringify"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/models/utils/flags.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setTransactionFlagsToNumber = exports.parseAccountRootFlags = void 0;\nconst errors_1 = require(\"../../errors\");\nconst AccountRoot_1 = require(\"../ledger/AccountRoot\");\nconst accountSet_1 = require(\"../transactions/accountSet\");\nconst AMMDeposit_1 = require(\"../transactions/AMMDeposit\");\nconst AMMWithdraw_1 = require(\"../transactions/AMMWithdraw\");\nconst NFTokenCreateOffer_1 = require(\"../transactions/NFTokenCreateOffer\");\nconst NFTokenMint_1 = require(\"../transactions/NFTokenMint\");\nconst offerCreate_1 = require(\"../transactions/offerCreate\");\nconst payment_1 = require(\"../transactions/payment\");\nconst paymentChannelClaim_1 = require(\"../transactions/paymentChannelClaim\");\nconst trustSet_1 = require(\"../transactions/trustSet\");\nconst XChainModifyBridge_1 = require(\"../transactions/XChainModifyBridge\");\nconst _1 = require(\".\");\nfunction parseAccountRootFlags(flags) {\n    const flagsInterface = {};\n    Object.values(AccountRoot_1.AccountRootFlags).forEach((flag) => {\n        if (typeof flag === 'string' &&\n            (0, _1.isFlagEnabled)(flags, AccountRoot_1.AccountRootFlags[flag])) {\n            flagsInterface[flag] = true;\n        }\n    });\n    return flagsInterface;\n}\nexports.parseAccountRootFlags = parseAccountRootFlags;\nconst txToFlag = {\n    AccountSet: accountSet_1.AccountSetTfFlags,\n    AMMDeposit: AMMDeposit_1.AMMDepositFlags,\n    AMMWithdraw: AMMWithdraw_1.AMMWithdrawFlags,\n    NFTokenCreateOffer: NFTokenCreateOffer_1.NFTokenCreateOfferFlags,\n    NFTokenMint: NFTokenMint_1.NFTokenMintFlags,\n    OfferCreate: offerCreate_1.OfferCreateFlags,\n    PaymentChannelClaim: paymentChannelClaim_1.PaymentChannelClaimFlags,\n    Payment: payment_1.PaymentFlags,\n    TrustSet: trustSet_1.TrustSetFlags,\n    XChainModifyBridge: XChainModifyBridge_1.XChainModifyBridgeFlags,\n};\nfunction setTransactionFlagsToNumber(tx) {\n    if (tx.Flags == null) {\n        tx.Flags = 0;\n        return;\n    }\n    if (typeof tx.Flags === 'number') {\n        return;\n    }\n    tx.Flags = txToFlag[tx.TransactionType]\n        ? convertFlagsToNumber(tx.Flags, txToFlag[tx.TransactionType])\n        : 0;\n}\nexports.setTransactionFlagsToNumber = setTransactionFlagsToNumber;\nfunction convertFlagsToNumber(flags, flagEnum) {\n    return Object.keys(flags).reduce((resultFlags, flag) => {\n        if (flagEnum[flag] == null) {\n            throw new errors_1.ValidationError(`flag ${flag} doesn't exist in flagEnum: ${JSON.stringify(flagEnum)}`);\n        }\n        return flags[flag] ? resultFlags | flagEnum[flag] : resultFlags;\n    }, 0);\n}\n//# sourceMappingURL=flags.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
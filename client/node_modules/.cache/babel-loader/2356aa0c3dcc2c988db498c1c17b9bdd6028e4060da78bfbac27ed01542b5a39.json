{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst errors_1 = require(\"../errors\");\nconst NUM_DECIMAL_PLACES = 6;\nconst BASE_10 = 10;\nfunction getFeeXrp(client, cushion) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const feeCushion = cushion !== null && cushion !== void 0 ? cushion : client.feeCushion;\n    const serverInfo = (yield client.request({\n      command: 'server_info'\n    })).result.info;\n    const baseFee = (_a = serverInfo.validated_ledger) === null || _a === void 0 ? void 0 : _a.base_fee_xrp;\n    if (baseFee == null) {\n      throw new errors_1.XrplError('getFeeXrp: Could not get base_fee_xrp from server_info');\n    }\n    const baseFeeXrp = new bignumber_js_1.default(baseFee);\n    if (serverInfo.load_factor == null) {\n      serverInfo.load_factor = 1;\n    }\n    let fee = baseFeeXrp.times(serverInfo.load_factor).times(feeCushion);\n    fee = bignumber_js_1.default.min(fee, client.maxFeeXRP);\n    return new bignumber_js_1.default(fee.toFixed(NUM_DECIMAL_PLACES)).toString(BASE_10);\n  });\n}\nexports.default = getFeeXrp;","map":{"version":3,"names":["bignumber_js_1","__importDefault","require","errors_1","NUM_DECIMAL_PLACES","BASE_10","getFeeXrp","client","cushion","feeCushion","serverInfo","request","command","result","info","baseFee","_a","validated_ledger","base_fee_xrp","XrplError","baseFeeXrp","default","load_factor","fee","times","min","maxFeeXRP","toFixed","toString","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/sugar/getFeeXrp.ts"],"sourcesContent":["import BigNumber from 'bignumber.js'\n\nimport type { Client } from '..'\nimport { XrplError } from '../errors'\n\nconst NUM_DECIMAL_PLACES = 6\nconst BASE_10 = 10\n\n/**\n * Calculates the current transaction fee for the ledger.\n * Note: This is a public API that can be called directly.\n *\n * @param client - The Client used to connect to the ledger.\n * @param cushion - The fee cushion to use.\n * @returns The transaction fee.\n */\nexport default async function getFeeXrp(\n  client: Client,\n  cushion?: number,\n): Promise<string> {\n  const feeCushion = cushion ?? client.feeCushion\n\n  const serverInfo = (await client.request({ command: 'server_info' })).result\n    .info\n\n  const baseFee = serverInfo.validated_ledger?.base_fee_xrp\n\n  if (baseFee == null) {\n    throw new XrplError(\n      'getFeeXrp: Could not get base_fee_xrp from server_info',\n    )\n  }\n\n  const baseFeeXrp = new BigNumber(baseFee)\n  if (serverInfo.load_factor == null) {\n    // https://github.com/ripple/rippled/issues/3812#issuecomment-816871100\n    serverInfo.load_factor = 1\n  }\n  let fee = baseFeeXrp.times(serverInfo.load_factor).times(feeCushion)\n\n  // Cap fee to `client.maxFeeXRP`\n  fee = BigNumber.min(fee, client.maxFeeXRP)\n  // Round fee to 6 decimal places\n  return new BigNumber(fee.toFixed(NUM_DECIMAL_PLACES)).toString(BASE_10)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAAA,cAAA,GAAAC,eAAA,CAAAC,OAAA;AAGA,MAAAC,QAAA,GAAAD,OAAA;AAEA,MAAME,kBAAkB,GAAG,CAAC;AAC5B,MAAMC,OAAO,GAAG,EAAE;AAUlB,SAA8BC,SAASA,CACrCC,MAAc,EACdC,OAAgB;;;IAEhB,MAAMC,UAAU,GAAGD,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAID,MAAM,CAACE,UAAU;IAE/C,MAAMC,UAAU,GAAG,CAAC,MAAMH,MAAM,CAACI,OAAO,CAAC;MAAEC,OAAO,EAAE;IAAa,CAAE,CAAC,EAAEC,MAAM,CACzEC,IAAI;IAEP,MAAMC,OAAO,GAAG,CAAAC,EAAA,GAAAN,UAAU,CAACO,gBAAgB,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,YAAY;IAEzD,IAAIH,OAAO,IAAI,IAAI,EAAE;MACnB,MAAM,IAAIZ,QAAA,CAAAgB,SAAS,CACjB,wDAAwD,CACzD;;IAGH,MAAMC,UAAU,GAAG,IAAIpB,cAAA,CAAAqB,OAAS,CAACN,OAAO,CAAC;IACzC,IAAIL,UAAU,CAACY,WAAW,IAAI,IAAI,EAAE;MAElCZ,UAAU,CAACY,WAAW,GAAG,CAAC;;IAE5B,IAAIC,GAAG,GAAGH,UAAU,CAACI,KAAK,CAACd,UAAU,CAACY,WAAW,CAAC,CAACE,KAAK,CAACf,UAAU,CAAC;IAGpEc,GAAG,GAAGvB,cAAA,CAAAqB,OAAS,CAACI,GAAG,CAACF,GAAG,EAAEhB,MAAM,CAACmB,SAAS,CAAC;IAE1C,OAAO,IAAI1B,cAAA,CAAAqB,OAAS,CAACE,GAAG,CAACI,OAAO,CAACvB,kBAAkB,CAAC,CAAC,CAACwB,QAAQ,CAACvB,OAAO,CAAC;;;AA3BzEwB,OAAA,CAAAR,OAAA,GAAAf,SAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
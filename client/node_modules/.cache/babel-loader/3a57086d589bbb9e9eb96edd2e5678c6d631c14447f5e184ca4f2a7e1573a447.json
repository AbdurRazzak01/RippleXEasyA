{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/XrpWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client, Wallet, dropsToXrp, rippleTimeToISOTime } from 'xrpl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst XrpWallet = () => {\n  _s();\n  const [accountInfo, setAccountInfo] = useState(null);\n  const [ledgerDetails, setLedgerDetails] = useState(null);\n  useEffect(() => {\n    const client = new Client('wss://s.altnet.rippletest.net:51233'); // Replace with your server URI\n\n    const fetchAccountInfo = async () => {\n      try {\n        await client.connect();\n        const wallet = Wallet.fromSeed(process.env.REACT_APP_SEED); // Make sure your .env variable is prefixed with REACT_APP_\n        const {\n          account_data\n        } = await client.request({\n          command: 'account_info',\n          account: wallet.address,\n          ledger_index: 'validated'\n        });\n        setAccountInfo(account_data);\n        await client.request({\n          command: 'subscribe',\n          streams: ['ledger']\n        });\n        client.on('ledgerClosed', ledger => {\n          setLedgerDetails(ledger);\n        });\n      } catch (error) {\n        console.error('Error connecting to the XRP Ledger:', error);\n      }\n    };\n    fetchAccountInfo();\n    return () => {\n      client.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account Information:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), accountInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Account Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this), \" \", accountInfo.Account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Balance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this), \" \", dropsToXrp(accountInfo.Balance), \" XRP\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Ledger Details:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), ledgerDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ledger Index:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this), \" \", ledgerDetails.ledger_index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ledger Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this), \" \", ledgerDetails.ledger_hash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Close Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this), \" \", rippleTimeToISOTime(ledgerDetails.ledger_time)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(XrpWallet, \"oUYJnfuGwdPWam0XAm+clK5h7cg=\");\n_c = XrpWallet;\nexport default XrpWallet;\nvar _c;\n$RefreshReg$(_c, \"XrpWallet\");","map":{"version":3,"names":["React","useEffect","useState","Client","Wallet","dropsToXrp","rippleTimeToISOTime","jsxDEV","_jsxDEV","XrpWallet","_s","accountInfo","setAccountInfo","ledgerDetails","setLedgerDetails","client","fetchAccountInfo","connect","wallet","fromSeed","process","env","REACT_APP_SEED","account_data","request","command","account","address","ledger_index","streams","on","ledger","error","console","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","Account","Balance","ledger_hash","ledger_time","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/XrpWallet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Client, Wallet, dropsToXrp, rippleTimeToISOTime } from 'xrpl';\n\nconst XrpWallet = () => {\n    const [accountInfo, setAccountInfo] = useState(null);\n    const [ledgerDetails, setLedgerDetails] = useState(null);\n\n    useEffect(() => {\n        const client = new Client('wss://s.altnet.rippletest.net:51233'); // Replace with your server URI\n\n        const fetchAccountInfo = async () => {\n            try {\n                await client.connect();\n\n                const wallet = Wallet.fromSeed(process.env.REACT_APP_SEED); // Make sure your .env variable is prefixed with REACT_APP_\n                const { account_data } = await client.request({\n                    command: 'account_info',\n                    account: wallet.address,\n                    ledger_index: 'validated',\n                });\n\n                setAccountInfo(account_data);\n\n                await client.request({\n                    command: 'subscribe',\n                    streams: ['ledger'],\n                });\n\n                client.on('ledgerClosed', (ledger) => {\n                    setLedgerDetails(ledger);\n                });\n            } catch (error) {\n                console.error('Error connecting to the XRP Ledger:', error);\n            }\n        };\n\n        fetchAccountInfo();\n\n        return () => {\n            client.disconnect();\n        };\n    }, []);\n\n    return (\n        <div>\n            <h2>Account Information:</h2>\n            {accountInfo && (\n                <div>\n                    <p><strong>Account Address:</strong> {accountInfo.Account}</p>\n                    <p><strong>Balance:</strong> {dropsToXrp(accountInfo.Balance)} XRP</p>\n                </div>\n            )}\n            <h2>Latest Ledger Details:</h2>\n            {ledgerDetails && (\n                <div>\n                    <p><strong>Ledger Index:</strong> {ledgerDetails.ledger_index}</p>\n                    <p><strong>Ledger Hash:</strong> {ledgerDetails.ledger_hash}</p>\n                    <p><strong>Close Time:</strong> {rippleTimeToISOTime(ledgerDetails.ledger_time)}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default XrpWallet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAccountDelete = void 0;\nconst common_1 = require(\"./common\");\nfunction validateAccountDelete(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  (0, common_1.validateRequiredField)(tx, 'Destination', common_1.isAccount);\n  (0, common_1.validateOptionalField)(tx, 'DestinationTag', common_1.isNumber);\n}\nexports.validateAccountDelete = validateAccountDelete;","map":{"version":3,"names":["common_1","require","validateAccountDelete","tx","validateBaseTransaction","validateRequiredField","isAccount","validateOptionalField","isNumber","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/accountDelete.ts"],"sourcesContent":["import {\n  Account,\n  BaseTransaction,\n  isAccount,\n  isNumber,\n  validateBaseTransaction,\n  validateOptionalField,\n  validateRequiredField,\n} from './common'\n\n/**\n * An AccountDelete transaction deletes an account and any objects it owns in\n * the XRP Ledger, if possible, sending the account's remaining XRP to a\n * specified destination account.\n *\n * @category Transaction Models\n */\nexport interface AccountDelete extends BaseTransaction {\n  TransactionType: 'AccountDelete'\n  /**\n   * The address of an account to receive any leftover XRP after deleting the\n   * sending account. Must be a funded account in the ledger, and must not be.\n   * the sending account.\n   */\n  Destination: Account\n  /**\n   * Arbitrary destination tag that identifies a hosted recipient or other.\n   * information for the recipient of the deleted account's leftover XRP.\n   */\n  DestinationTag?: number\n}\n\n/**\n * Verify the form and type of an AccountDelete at runtime.\n *\n * @param tx - An AccountDelete Transaction.\n * @throws When the AccountDelete is Malformed.\n */\nexport function validateAccountDelete(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  validateRequiredField(tx, 'Destination', isAccount)\n  validateOptionalField(tx, 'DestinationTag', isNumber)\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAsCA,SAAgBC,qBAAqBA,CAACC,EAA2B;EAC/D,IAAAH,QAAA,CAAAI,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAAH,QAAA,CAAAK,qBAAqB,EAACF,EAAE,EAAE,aAAa,EAAEH,QAAA,CAAAM,SAAS,CAAC;EACnD,IAAAN,QAAA,CAAAO,qBAAqB,EAACJ,EAAE,EAAE,gBAAgB,EAAEH,QAAA,CAAAQ,QAAQ,CAAC;AACvD;AALAC,OAAA,CAAAP,qBAAA,GAAAA,qBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
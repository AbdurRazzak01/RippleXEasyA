{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst collections_1 = require(\"./collections\");\nconst xrpConversion_1 = require(\"./xrpConversion\");\nfunction normalizeNode(affectedNode) {\n  const diffType = Object.keys(affectedNode)[0];\n  const node = affectedNode[diffType];\n  return Object.assign(Object.assign({}, node), {\n    NodeType: diffType,\n    LedgerEntryType: node.LedgerEntryType,\n    LedgerIndex: node.LedgerIndex,\n    NewFields: node.NewFields,\n    FinalFields: node.FinalFields,\n    PreviousFields: node.PreviousFields\n  });\n}\nfunction normalizeNodes(metadata) {\n  if (metadata.AffectedNodes.length === 0) {\n    return [];\n  }\n  return metadata.AffectedNodes.map(normalizeNode);\n}\nfunction groupByAccount(balanceChanges) {\n  const grouped = (0, collections_1.groupBy)(balanceChanges, node => node.account);\n  return Object.entries(grouped).map(([account, items]) => {\n    return {\n      account,\n      balances: items.map(item => item.balance)\n    };\n  });\n}\nfunction getValue(balance) {\n  if (typeof balance === 'string') {\n    return new bignumber_js_1.default(balance);\n  }\n  return new bignumber_js_1.default(balance.value);\n}\nfunction computeBalanceChange(node) {\n  var _a, _b, _c;\n  let value = null;\n  if ((_a = node.NewFields) === null || _a === void 0 ? void 0 : _a.Balance) {\n    value = getValue(node.NewFields.Balance);\n  } else if (((_b = node.PreviousFields) === null || _b === void 0 ? void 0 : _b.Balance) && ((_c = node.FinalFields) === null || _c === void 0 ? void 0 : _c.Balance)) {\n    value = getValue(node.FinalFields.Balance).minus(getValue(node.PreviousFields.Balance));\n  }\n  if (value === null || value.isZero()) {\n    return null;\n  }\n  return value;\n}\nfunction getXRPQuantity(node) {\n  var _a, _b, _c;\n  const value = computeBalanceChange(node);\n  if (value === null) {\n    return null;\n  }\n  return {\n    account: (_b = (_a = node.FinalFields) === null || _a === void 0 ? void 0 : _a.Account) !== null && _b !== void 0 ? _b : (_c = node.NewFields) === null || _c === void 0 ? void 0 : _c.Account,\n    balance: {\n      currency: 'XRP',\n      value: (0, xrpConversion_1.dropsToXrp)(value).toString()\n    }\n  };\n}\nfunction flipTrustlinePerspective(balanceChange) {\n  const negatedBalance = new bignumber_js_1.default(balanceChange.balance.value).negated();\n  return {\n    account: balanceChange.balance.issuer,\n    balance: {\n      issuer: balanceChange.account,\n      currency: balanceChange.balance.currency,\n      value: negatedBalance.toString()\n    }\n  };\n}\nfunction getTrustlineQuantity(node) {\n  var _a, _b;\n  const value = computeBalanceChange(node);\n  if (value === null) {\n    return null;\n  }\n  const fields = node.NewFields == null ? node.FinalFields : node.NewFields;\n  const result = {\n    account: (_a = fields === null || fields === void 0 ? void 0 : fields.LowLimit) === null || _a === void 0 ? void 0 : _a.issuer,\n    balance: {\n      issuer: (_b = fields === null || fields === void 0 ? void 0 : fields.HighLimit) === null || _b === void 0 ? void 0 : _b.issuer,\n      currency: (fields === null || fields === void 0 ? void 0 : fields.Balance).currency,\n      value: value.toString()\n    }\n  };\n  return [result, flipTrustlinePerspective(result)];\n}\nfunction getBalanceChanges(metadata) {\n  const quantities = normalizeNodes(metadata).map(node => {\n    if (node.LedgerEntryType === 'AccountRoot') {\n      const xrpQuantity = getXRPQuantity(node);\n      if (xrpQuantity == null) {\n        return [];\n      }\n      return [xrpQuantity];\n    }\n    if (node.LedgerEntryType === 'RippleState') {\n      const trustlineQuantity = getTrustlineQuantity(node);\n      if (trustlineQuantity == null) {\n        return [];\n      }\n      return trustlineQuantity;\n    }\n    return [];\n  });\n  return groupByAccount(quantities.flat());\n}\nexports.default = getBalanceChanges;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bignumber_js_1","require","collections_1","xrpConversion_1","normalizeNode","affectedNode","diffType","keys","node","assign","NodeType","LedgerEntryType","LedgerIndex","NewFields","FinalFields","PreviousFields","normalizeNodes","metadata","AffectedNodes","length","map","groupByAccount","balanceChanges","grouped","groupBy","account","entries","items","balances","item","balance","getValue","default","computeBalanceChange","_a","_b","_c","Balance","minus","isZero","getXRPQuantity","Account","currency","dropsToXrp","toString","flipTrustlinePerspective","balanceChange","negatedBalance","negated","issuer","getTrustlineQuantity","fields","result","LowLimit","HighLimit","getBalanceChanges","quantities","xrpQuantity","trustlineQuantity","flat"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/dist/npm/utils/getBalanceChanges.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst collections_1 = require(\"./collections\");\nconst xrpConversion_1 = require(\"./xrpConversion\");\nfunction normalizeNode(affectedNode) {\n    const diffType = Object.keys(affectedNode)[0];\n    const node = affectedNode[diffType];\n    return Object.assign(Object.assign({}, node), { NodeType: diffType, LedgerEntryType: node.LedgerEntryType, LedgerIndex: node.LedgerIndex, NewFields: node.NewFields, FinalFields: node.FinalFields, PreviousFields: node.PreviousFields });\n}\nfunction normalizeNodes(metadata) {\n    if (metadata.AffectedNodes.length === 0) {\n        return [];\n    }\n    return metadata.AffectedNodes.map(normalizeNode);\n}\nfunction groupByAccount(balanceChanges) {\n    const grouped = (0, collections_1.groupBy)(balanceChanges, (node) => node.account);\n    return Object.entries(grouped).map(([account, items]) => {\n        return { account, balances: items.map((item) => item.balance) };\n    });\n}\nfunction getValue(balance) {\n    if (typeof balance === 'string') {\n        return new bignumber_js_1.default(balance);\n    }\n    return new bignumber_js_1.default(balance.value);\n}\nfunction computeBalanceChange(node) {\n    var _a, _b, _c;\n    let value = null;\n    if ((_a = node.NewFields) === null || _a === void 0 ? void 0 : _a.Balance) {\n        value = getValue(node.NewFields.Balance);\n    }\n    else if (((_b = node.PreviousFields) === null || _b === void 0 ? void 0 : _b.Balance) && ((_c = node.FinalFields) === null || _c === void 0 ? void 0 : _c.Balance)) {\n        value = getValue(node.FinalFields.Balance).minus(getValue(node.PreviousFields.Balance));\n    }\n    if (value === null || value.isZero()) {\n        return null;\n    }\n    return value;\n}\nfunction getXRPQuantity(node) {\n    var _a, _b, _c;\n    const value = computeBalanceChange(node);\n    if (value === null) {\n        return null;\n    }\n    return {\n        account: ((_b = (_a = node.FinalFields) === null || _a === void 0 ? void 0 : _a.Account) !== null && _b !== void 0 ? _b : (_c = node.NewFields) === null || _c === void 0 ? void 0 : _c.Account),\n        balance: {\n            currency: 'XRP',\n            value: (0, xrpConversion_1.dropsToXrp)(value).toString(),\n        },\n    };\n}\nfunction flipTrustlinePerspective(balanceChange) {\n    const negatedBalance = new bignumber_js_1.default(balanceChange.balance.value).negated();\n    return {\n        account: balanceChange.balance.issuer,\n        balance: {\n            issuer: balanceChange.account,\n            currency: balanceChange.balance.currency,\n            value: negatedBalance.toString(),\n        },\n    };\n}\nfunction getTrustlineQuantity(node) {\n    var _a, _b;\n    const value = computeBalanceChange(node);\n    if (value === null) {\n        return null;\n    }\n    const fields = node.NewFields == null ? node.FinalFields : node.NewFields;\n    const result = {\n        account: (_a = fields === null || fields === void 0 ? void 0 : fields.LowLimit) === null || _a === void 0 ? void 0 : _a.issuer,\n        balance: {\n            issuer: (_b = fields === null || fields === void 0 ? void 0 : fields.HighLimit) === null || _b === void 0 ? void 0 : _b.issuer,\n            currency: (fields === null || fields === void 0 ? void 0 : fields.Balance).currency,\n            value: value.toString(),\n        },\n    };\n    return [result, flipTrustlinePerspective(result)];\n}\nfunction getBalanceChanges(metadata) {\n    const quantities = normalizeNodes(metadata).map((node) => {\n        if (node.LedgerEntryType === 'AccountRoot') {\n            const xrpQuantity = getXRPQuantity(node);\n            if (xrpQuantity == null) {\n                return [];\n            }\n            return [xrpQuantity];\n        }\n        if (node.LedgerEntryType === 'RippleState') {\n            const trustlineQuantity = getTrustlineQuantity(node);\n            if (trustlineQuantity == null) {\n                return [];\n            }\n            return trustlineQuantity;\n        }\n        return [];\n    });\n    return groupByAccount(quantities.flat());\n}\nexports.default = getBalanceChanges;\n//# sourceMappingURL=getBalanceChanges.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isDeletedNode = exports.isModifiedNode = exports.isCreatedNode = void 0;\nfunction isCreatedNode(node) {\n  return Object.prototype.hasOwnProperty.call(node, `CreatedNode`);\n}\nexports.isCreatedNode = isCreatedNode;\nfunction isModifiedNode(node) {\n  return Object.prototype.hasOwnProperty.call(node, `ModifiedNode`);\n}\nexports.isModifiedNode = isModifiedNode;\nfunction isDeletedNode(node) {\n  return Object.prototype.hasOwnProperty.call(node, `DeletedNode`);\n}\nexports.isDeletedNode = isDeletedNode;","map":{"version":3,"names":["isCreatedNode","node","Object","prototype","hasOwnProperty","call","exports","isModifiedNode","isDeletedNode"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/metadata.ts"],"sourcesContent":["import { Amount } from '../common'\n\nimport { BaseTransaction } from './common'\nimport {\n  NFTokenAcceptOffer,\n  NFTokenAcceptOfferMetadata,\n} from './NFTokenAcceptOffer'\nimport {\n  NFTokenCancelOffer,\n  NFTokenCancelOfferMetadata,\n} from './NFTokenCancelOffer'\nimport {\n  NFTokenCreateOffer,\n  NFTokenCreateOfferMetadata,\n} from './NFTokenCreateOffer'\nimport { NFTokenMint, NFTokenMintMetadata } from './NFTokenMint'\nimport { Payment, PaymentMetadata } from './payment'\nimport type { Transaction } from './transaction'\n\nexport interface CreatedNode {\n  CreatedNode: {\n    LedgerEntryType: string\n    LedgerIndex: string\n    NewFields: { [field: string]: unknown }\n  }\n}\n\nexport interface ModifiedNode {\n  ModifiedNode: {\n    LedgerEntryType: string\n    LedgerIndex: string\n    FinalFields?: { [field: string]: unknown }\n    PreviousFields?: { [field: string]: unknown }\n    PreviousTxnID?: string\n    PreviousTxnLgrSeq?: number\n  }\n}\n\nexport interface DeletedNode {\n  DeletedNode: {\n    LedgerEntryType: string\n    LedgerIndex: string\n    FinalFields: { [field: string]: unknown }\n  }\n}\n\nexport type Node = CreatedNode | ModifiedNode | DeletedNode\n\n/**\n * A typeguard to check if a node is a CreatedNode.\n *\n * @param node - A node from metadata.\n * @returns whether the given node is a CreatedNode.\n */\nexport function isCreatedNode(node: Node): node is CreatedNode {\n  return Object.prototype.hasOwnProperty.call(node, `CreatedNode`)\n}\n\n/**\n * A typeguard to check if a node is a ModifiedNode.\n *\n * @param node - A node from metadata.\n * @returns whether the given node is a ModifiedNode.\n */\nexport function isModifiedNode(node: Node): node is ModifiedNode {\n  return Object.prototype.hasOwnProperty.call(node, `ModifiedNode`)\n}\n\n/**\n * A typeguard to check if a node is a DeletedNode.\n *\n * @param node - A node from metadata.\n * @returns whether the given node is a DeletedNode.\n */\nexport function isDeletedNode(node: Node): node is DeletedNode {\n  return Object.prototype.hasOwnProperty.call(node, `DeletedNode`)\n}\n\nexport interface TransactionMetadataBase {\n  AffectedNodes: Node[]\n  DeliveredAmount?: Amount\n  // \"unavailable\" possible for transactions before 2014-01-20\n  delivered_amount?: Amount | 'unavailable'\n  TransactionIndex: number\n  TransactionResult: string\n}\n\nexport type TransactionMetadata<T extends BaseTransaction = Transaction> =\n  T extends Payment\n    ? PaymentMetadata\n    : T extends NFTokenMint\n    ? NFTokenMintMetadata\n    : T extends NFTokenCreateOffer\n    ? NFTokenCreateOfferMetadata\n    : T extends NFTokenAcceptOffer\n    ? NFTokenAcceptOfferMetadata\n    : T extends NFTokenCancelOffer\n    ? NFTokenCancelOfferMetadata\n    : TransactionMetadataBase\n"],"mappings":";;;;;;AAsDA,SAAgBA,aAAaA,CAACC,IAAU;EACtC,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,IAAI,EAAE,aAAa,CAAC;AAClE;AAFAK,OAAA,CAAAN,aAAA,GAAAA,aAAA;AAUA,SAAgBO,cAAcA,CAACN,IAAU;EACvC,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,IAAI,EAAE,cAAc,CAAC;AACnE;AAFAK,OAAA,CAAAC,cAAA,GAAAA,cAAA;AAUA,SAAgBC,aAAaA,CAACP,IAAU;EACtC,OAAOC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,IAAI,EAAE,aAAa,CAAC;AAClE;AAFAK,OAAA,CAAAE,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
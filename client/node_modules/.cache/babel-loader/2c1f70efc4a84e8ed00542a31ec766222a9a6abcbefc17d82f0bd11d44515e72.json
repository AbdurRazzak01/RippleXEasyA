{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ripple_binary_codec_1 = require(\"ripple-binary-codec\");\nconst ripple_keypairs_1 = require(\"ripple-keypairs\");\nconst xrpConversion_1 = require(\"./xrpConversion\");\nfunction verifyPaymentChannelClaim(channel, xrpAmount, signature, publicKey) {\n  const signingData = (0, ripple_binary_codec_1.encodeForSigningClaim)({\n    channel,\n    amount: (0, xrpConversion_1.xrpToDrops)(xrpAmount)\n  });\n  return (0, ripple_keypairs_1.verify)(signingData, signature, publicKey);\n}\nexports.default = verifyPaymentChannelClaim;","map":{"version":3,"names":["ripple_binary_codec_1","require","ripple_keypairs_1","xrpConversion_1","verifyPaymentChannelClaim","channel","xrpAmount","signature","publicKey","signingData","encodeForSigningClaim","amount","xrpToDrops","verify","exports","default"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/utils/verifyPaymentChannelClaim.ts"],"sourcesContent":["import { encodeForSigningClaim } from 'ripple-binary-codec'\nimport { verify } from 'ripple-keypairs'\n\nimport { xrpToDrops } from './xrpConversion'\n\n/**\n * Verify the signature of a payment channel claim.\n *\n * @param channel - Channel identifier specified by the paymentChannelClaim.\n * @param xrpAmount - XRP Amount specified by the paymentChannelClaim.\n * @param signature - Signature produced from signing paymentChannelClaim.\n * @param publicKey - Public key that signed the paymentChannelClaim.\n * @returns True if the channel is valid.\n * @category Utilities\n */\n// eslint-disable-next-line max-params -- Needs 4 params\nfunction verifyPaymentChannelClaim(\n  channel: string,\n  xrpAmount: string,\n  signature: string,\n  publicKey: string,\n): boolean {\n  const signingData = encodeForSigningClaim({\n    channel,\n    amount: xrpToDrops(xrpAmount),\n  })\n  return verify(signingData, signature, publicKey)\n}\n\nexport default verifyPaymentChannelClaim\n"],"mappings":";;;;;AAAA,MAAAA,qBAAA,GAAAC,OAAA;AACA,MAAAC,iBAAA,GAAAD,OAAA;AAEA,MAAAE,eAAA,GAAAF,OAAA;AAaA,SAASG,yBAAyBA,CAChCC,OAAe,EACfC,SAAiB,EACjBC,SAAiB,EACjBC,SAAiB;EAEjB,MAAMC,WAAW,GAAG,IAAAT,qBAAA,CAAAU,qBAAqB,EAAC;IACxCL,OAAO;IACPM,MAAM,EAAE,IAAAR,eAAA,CAAAS,UAAU,EAACN,SAAS;GAC7B,CAAC;EACF,OAAO,IAAAJ,iBAAA,CAAAW,MAAM,EAACJ,WAAW,EAAEF,SAAS,EAAEC,SAAS,CAAC;AAClD;AAEAM,OAAA,CAAAC,OAAA,GAAeX,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
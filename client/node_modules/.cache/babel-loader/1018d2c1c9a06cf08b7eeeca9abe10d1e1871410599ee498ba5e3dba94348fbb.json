{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/MetamaskDataRead.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetaInfo = () => {\n  _s();\n  const [balanceInEther, setBalanceInEther] = useState('');\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        // Check if MetaMask is installed\n        if (window.ethereum) {\n          // Request access to the user's MetaMask accounts\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n\n          // Get the balance of the user's account\n          const balance = await window.ethereum.request({\n            method: 'eth_getBalance',\n            params: [accounts[0]] // Pass the account address\n          });\n\n          // Convert Wei to Ether\n          const balanceInEther = ethers.utils.formatEther(balance);\n          setBalanceInEther(balanceInEther);\n        } else {\n          console.error('MetaMask not found. Please install MetaMask to use this feature.');\n        }\n      } catch (error) {\n        console.error('Error reading data:', error);\n      }\n    };\n    fetchBalance();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MetaMask Account Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account balance in Ether: \", balanceInEther]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MetaInfo, \"ABqOyFDTJkcwFtiN+GVW4rZAZ/w=\");\n_c = MetaInfo;\nexport default MetaInfo;\nvar _c;\n$RefreshReg$(_c, \"MetaInfo\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","MetaInfo","_s","balanceInEther","setBalanceInEther","fetchBalance","window","ethereum","accounts","request","method","balance","params","utils","formatEther","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/MetamaskDataRead.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nconst MetaInfo = () => {\n  const [balanceInEther, setBalanceInEther] = useState('');\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        // Check if MetaMask is installed\n        if (window.ethereum) {\n          // Request access to the user's MetaMask accounts\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n          // Get the balance of the user's account\n          const balance = await window.ethereum.request({\n            method: 'eth_getBalance',\n            params: [accounts[0]], // Pass the account address\n          });\n\n          // Convert Wei to Ether\n          const balanceInEther = ethers.utils.formatEther(balance);\n          setBalanceInEther(balanceInEther);\n        } else {\n          console.error('MetaMask not found. Please install MetaMask to use this feature.');\n        }\n      } catch (error) {\n        console.error('Error reading data:', error);\n      }\n    };\n    \n\n    fetchBalance();\n  }, []);\n\n  return (\n    <div>\n      <h2>MetaMask Account Info</h2>\n      <p>Account balance in Ether: {balanceInEther}</p>\n    </div>\n  );\n};\n\nexport default MetaInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;UACnB;UACA,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;;UAEjF;UACA,MAAMC,OAAO,GAAG,MAAML,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YAC5CC,MAAM,EAAE,gBAAgB;YACxBE,MAAM,EAAE,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;UACzB,CAAC,CAAC;;UAEF;UACA,MAAML,cAAc,GAAGL,MAAM,CAACe,KAAK,CAACC,WAAW,CAACH,OAAO,CAAC;UACxDP,iBAAiB,CAACD,cAAc,CAAC;QACnC,CAAC,MAAM;UACLY,OAAO,CAACC,KAAK,CAAC,kEAAkE,CAAC;QACnF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC;IAGDX,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BrB,OAAA;MAAAiB,QAAA,GAAG,4BAA0B,EAACd,cAAc;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCID,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
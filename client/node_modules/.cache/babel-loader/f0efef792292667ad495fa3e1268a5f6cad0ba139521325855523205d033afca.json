{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertStringToHex = exports.convertHexToString = void 0;\nconst utils_1 = require(\"@xrplf/isomorphic/utils\");\nfunction convertStringToHex(string) {\n  return (0, utils_1.stringToHex)(string);\n}\nexports.convertStringToHex = convertStringToHex;\nfunction convertHexToString(hex, encoding = 'utf8') {\n  return (0, utils_1.hexToString)(hex, encoding);\n}\nexports.convertHexToString = convertHexToString;","map":{"version":3,"names":["utils_1","require","convertStringToHex","string","stringToHex","exports","convertHexToString","hex","encoding","hexToString"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/utils/stringConversion.ts"],"sourcesContent":["import { stringToHex, hexToString } from '@xrplf/isomorphic/utils'\n\n/**\n * Converts a string to its hex equivalent. Useful for Memos.\n *\n * @param string - The string to convert to Hex.\n * @returns The Hex equivalent of the string.\n *\n * @deprecated use `@xrplf/isomorphic/utils`'s `stringToHex`\n *\n * @category Utilities\n */\nfunction convertStringToHex(string: string): string {\n  return stringToHex(string)\n}\n\n/**\n * Converts hex to its string equivalent. Useful to read the Domain field and some Memos.\n *\n * @param hex - The hex to convert to a string.\n * @param encoding - The encoding to use. Defaults to 'utf8' (UTF-8). 'ascii' is also allowed.\n * @returns The converted string.\n *\n * @deprecated use `@xrplf/isomorphic/utils`'s `hexToString`\n *\n * @category Utilities\n */\nfunction convertHexToString(hex: string, encoding = 'utf8'): string {\n  return hexToString(hex, encoding)\n}\n\nexport { convertHexToString, convertStringToHex }\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAYA,SAASC,kBAAkBA,CAACC,MAAc;EACxC,OAAO,IAAAH,OAAA,CAAAI,WAAW,EAACD,MAAM,CAAC;AAC5B;AAiB6BE,OAAA,CAAAH,kBAAA,GAAAA,kBAAA;AAJ7B,SAASI,kBAAkBA,CAACC,GAAW,EAAEC,QAAQ,GAAG,MAAM;EACxD,OAAO,IAAAR,OAAA,CAAAS,WAAW,EAACF,GAAG,EAAEC,QAAQ,CAAC;AACnC;AAESH,OAAA,CAAAC,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NEGATIVE_UNL_ID = void 0;\nexports.NEGATIVE_UNL_ID = '2E8A59AA9D3B5B186B0B9E0F62E6C02587CA74A4D778938E957B6357D364B244';","map":{"version":3,"names":["exports","NEGATIVE_UNL_ID"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/ledger/NegativeUNL.ts"],"sourcesContent":["import { BaseLedgerEntry, MissingPreviousTxnID } from './BaseLedgerEntry'\n\n/**\n * The unique id for the nUNL object https://xrpl.org/negativeunl.html#negativeunl-id-format\n */\nexport const NEGATIVE_UNL_ID =\n  '2E8A59AA9D3B5B186B0B9E0F62E6C02587CA74A4D778938E957B6357D364B244'\n\n/**\n * The NegativeUNL object type contains the current status of the Negative UNL,\n * a list of trusted validators currently believed to be offline.\n *\n * @category Ledger Entries\n */\nexport default interface NegativeUNL\n  extends BaseLedgerEntry,\n    MissingPreviousTxnID {\n  LedgerEntryType: 'NegativeUNL'\n  /**\n   * A list of trusted validators that are currently disabled.\n   */\n  DisabledValidators?: Array<{\n    FirstLedgerSequence: number\n    PublicKey: string\n  }>\n  /**\n   * The public key of a trusted validator that is scheduled to be disabled in\n   * the next flag ledger.\n   */\n  ValidatorToDisable?: string\n  /**\n   * The public key of a trusted validator in the Negative UNL that is\n   * scheduled to be re-enabled in the next flag ledger.\n   */\n  ValidatorToReEnable?: string\n}\n"],"mappings":";;;;;;AAKaA,OAAA,CAAAC,eAAe,GAC1B,kEAAkE","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/MetaPopUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport SignMessage from './SignMessage';\n\n// Modal configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst MyComponent = () => {\n  _s();\n  const [amount1, setAmount1] = useState('');\n  const [amount2, setAmount2] = useState('');\n  const [coins, setCoins] = useState(null);\n  const [error, setError] = useState(null);\n  const [transactionStatus, setTransactionStatus] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState('');\n\n  // Function to open MetaMask modal and connect\n  const openMetaMaskModal = async () => {\n    try {\n      if (window.ethereum) {\n        const ethereum = window.ethereum;\n        await ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new Web3(ethereum);\n        setWeb3(provider);\n        const accounts = await provider.eth.getAccounts();\n        setAccount(accounts[0]);\n        setModalOpen(true);\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      setError('Error connecting to MetaMask. Please try again later.');\n      console.error('Error connecting to MetaMask:', error);\n    }\n  };\n\n  // Function to close the MetaMask modal\n  const closeMetaMaskModal = () => {\n    setModalOpen(false);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/calculate-coins', {\n        amount: parseInt(amount1) + parseInt(amount2)\n      },\n      // Sum of two amounts\n      {\n        headers: {\n          'Content-Type': 'application/json' // Explicitly set content type to JSON\n        }\n      });\n      setCoins(response.data.coins);\n      setError(null);\n\n      // Transfer the calculated coins\n      if (response.data.coins > 0) {\n        if (!web3) {\n          await openMetaMaskModal();\n          return;\n        }\n        const senderAddress = account;\n        const receiverAddress = '0xRecipientAddress'; // Replace with the recipient's address\n        const amountToSend = web3.utils.toWei(response.data.coins.toString(), 'ether');\n        const tx = await web3.eth.sendTransaction({\n          from: senderAddress,\n          to: receiverAddress,\n          value: amountToSend\n        });\n        setTransactionStatus(`Transaction successful. Transaction hash: ${tx.transactionHash}`);\n      } else {\n        setTransactionStatus('No coins to transfer.');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      setError('Error calculating coins. Please try again later.');\n      setCoins(null); // Reset coins value in case of error\n    }\n  };\n  useEffect(() => {\n    // Fetch account information\n    const fetchAccountInfo = async () => {\n      try {\n        if (window.ethereum) {\n          const web3 = new Web3(window.ethereum);\n          const accounts = await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const accountNumber = accounts[0];\n          const balance = await web3.eth.getBalance(accountNumber);\n          const balanceInEther = web3.utils.fromWei(balance, 'ether');\n          const blockNumber = await web3.eth.getBlockNumber();\n          const latestBlock = await web3.eth.getBlock(blockNumber);\n          const latestBlockStringified = {\n            number: latestBlock.number.toString(),\n            timestamp: latestBlock.timestamp.toString()\n          };\n          const accountInfo = {\n            accountNumber,\n            balanceInEther: balanceInEther.toString(),\n            latestBlock: latestBlockStringified\n          };\n          setAccountInfo(accountInfo);\n        } else {\n          console.error('MetaMask not found. Please install MetaMask to use this feature.');\n        }\n      } catch (error) {\n        console.error('Error fetching account information:', error);\n      }\n    };\n    fetchAccountInfo();\n  }, []);\n  const handleTransaction = async () => {\n    try {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const senderAddress = accounts[0];\n        const receiverAddress = '0x1234567890123456789012345678901234567890'; // Replace with the recipient's address\n        const amountToSend = web3.utils.toWei('1', 'ether'); // Amount to send in Wei\n\n        const tx = await web3.eth.sendTransaction({\n          from: senderAddress,\n          to: receiverAddress,\n          value: amountToSend\n        });\n        setTransactionStatus(`Transaction successful. Transaction hash: ${tx.transactionHash}`);\n      } else {\n        console.error('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      console.error('Error sending transaction:', error);\n      setTransactionStatus(`Error sending transaction: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"calculator-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount1\",\n          children: \"Amount 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount1\",\n          value: amount1,\n          onChange: e => setAmount1(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount2\",\n          children: \"Amount 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"amount2\",\n          value: amount2,\n          onChange: e => setAmount2(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"calculate-button\",\n        children: \"Calculate Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this), !error && coins !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: coins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), transactionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-status\",\n      children: transactionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalOpen,\n      onRequestClose: closeMetaMaskModal,\n      contentLabel: \"MetaMask Modal\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }, this), web3 && account && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"MetaMask Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Account: \", account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeMetaMaskModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SignMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"XepDmcNLAAk3JXHX92ixBmuEnL8=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Web3","axios","SignMessage","jsxDEV","_jsxDEV","setAppElement","MyComponent","_s","amount1","setAmount1","amount2","setAmount2","coins","setCoins","error","setError","transactionStatus","setTransactionStatus","modalOpen","setModalOpen","web3","setWeb3","account","setAccount","openMetaMaskModal","window","ethereum","request","method","provider","accounts","eth","getAccounts","console","closeMetaMaskModal","handleSubmit","e","preventDefault","response","post","amount","parseInt","headers","data","senderAddress","receiverAddress","amountToSend","utils","toWei","toString","tx","sendTransaction","from","to","value","transactionHash","message","fetchAccountInfo","accountNumber","balance","getBalance","balanceInEther","fromWei","blockNumber","getBlockNumber","latestBlock","getBlock","latestBlockStringified","number","timestamp","accountInfo","setAccountInfo","handleTransaction","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","required","isOpen","onRequestClose","contentLabel","onClick","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/MetaPopUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport Web3 from 'web3';\nimport axios from 'axios';\nimport SignMessage from './SignMessage';\n\n// Modal configuration\nModal.setAppElement('#root');\n\nconst MyComponent = () => {\n  const [amount1, setAmount1] = useState('');\n  const [amount2, setAmount2] = useState('');\n  const [coins, setCoins] = useState(null);\n  const [error, setError] = useState(null);\n  const [transactionStatus, setTransactionStatus] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [web3, setWeb3] = useState(null);\n  const [account, setAccount] = useState('');\n\n  // Function to open MetaMask modal and connect\n  const openMetaMaskModal = async () => {\n    try {\n      if (window.ethereum) {\n        const ethereum = window.ethereum;\n        await ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new Web3(ethereum);\n        setWeb3(provider);\n        const accounts = await provider.eth.getAccounts();\n        setAccount(accounts[0]);\n        setModalOpen(true);\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      setError('Error connecting to MetaMask. Please try again later.');\n      console.error('Error connecting to MetaMask:', error);\n    }\n  };\n\n  // Function to close the MetaMask modal\n  const closeMetaMaskModal = () => {\n    setModalOpen(false);\n    setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        'http://localhost:5001/calculate-coins',\n        { amount: parseInt(amount1) + parseInt(amount2) }, // Sum of two amounts\n        {\n          headers: {\n            'Content-Type': 'application/json' // Explicitly set content type to JSON\n          }\n        }\n      );\n      setCoins(response.data.coins);\n      setError(null);\n\n      // Transfer the calculated coins\n      if (response.data.coins > 0) {\n        if (!web3) {\n          await openMetaMaskModal();\n          return;\n        }\n\n        const senderAddress = account;\n        const receiverAddress = '0xRecipientAddress'; // Replace with the recipient's address\n        const amountToSend = web3.utils.toWei(response.data.coins.toString(), 'ether');\n\n        const tx = await web3.eth.sendTransaction({\n          from: senderAddress,\n          to: receiverAddress,\n          value: amountToSend,\n        });\n\n        setTransactionStatus(`Transaction successful. Transaction hash: ${tx.transactionHash}`);\n      } else {\n        setTransactionStatus('No coins to transfer.');\n      }\n    } catch (error) {\n      console.error('Error:', error.message);\n      setError('Error calculating coins. Please try again later.');\n      setCoins(null); // Reset coins value in case of error\n    }\n  };\n\n  useEffect(() => {\n    // Fetch account information\n    const fetchAccountInfo = async () => {\n      try {\n        if (window.ethereum) {\n          const web3 = new Web3(window.ethereum);\n          const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const accountNumber = accounts[0];\n          const balance = await web3.eth.getBalance(accountNumber);\n          const balanceInEther = web3.utils.fromWei(balance, 'ether');\n          const blockNumber = await web3.eth.getBlockNumber();\n          const latestBlock = await web3.eth.getBlock(blockNumber);\n          const latestBlockStringified = {\n            number: latestBlock.number.toString(),\n            timestamp: latestBlock.timestamp.toString(),\n          };\n          const accountInfo = {\n            accountNumber,\n            balanceInEther: balanceInEther.toString(),\n            latestBlock: latestBlockStringified,\n          };\n          setAccountInfo(accountInfo);\n        } else {\n          console.error('MetaMask not found. Please install MetaMask to use this feature.');\n        }\n      } catch (error) {\n        console.error('Error fetching account information:', error);\n      }\n    };\n\n    fetchAccountInfo();\n  }, []);\n\n  const handleTransaction = async () => {\n    try {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const senderAddress = accounts[0];\n        const receiverAddress = '0x1234567890123456789012345678901234567890'; // Replace with the recipient's address\n        const amountToSend = web3.utils.toWei('1', 'ether'); // Amount to send in Wei\n\n        const tx = await web3.eth.sendTransaction({\n          from: senderAddress,\n          to: receiverAddress,\n          value: amountToSend,\n        });\n\n        setTransactionStatus(`Transaction successful. Transaction hash: ${tx.transactionHash}`);\n      } else {\n        console.error('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      console.error('Error sending transaction:', error);\n      setTransactionStatus(`Error sending transaction: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"calculator-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"amount1\">Amount 1:</label>\n          <input\n            type=\"number\"\n            id=\"amount1\"\n            value={amount1}\n            onChange={(e) => setAmount1(e.target.value)}\n            required\n          />\n          <label htmlFor=\"amount2\">Amount 2:</label>\n          <input\n            type=\"number\"\n            id=\"amount2\"\n            value={amount2}\n            onChange={(e) => setAmount2(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"calculate-button\">Calculate Coins</button>\n      </form>\n      {error && <div className=\"error-message\">Error: {error}</div>}\n      {!error && coins !== null &&\n        <div className=\"result\">\n          <span>Result:</span>\n          <span>{coins}</span>\n        </div>\n      }\n      {transactionStatus && <div className=\"transaction-status\">{transactionStatus}</div>}\n      <Modal isOpen={modalOpen} onRequestClose={closeMetaMaskModal} contentLabel=\"MetaMask Modal\">\n        {error && <p>{error}</p>}\n        {web3 && account && (\n          <div>\n            <h2>MetaMask Connected</h2>\n            <p>Account: {account}</p>\n            <button onClick={closeMetaMaskModal}>Close</button>\n          </div>\n        )}\n      </Modal>\n      <SignMessage />\n    </div>\n  );\n};\n\nexport default MyComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
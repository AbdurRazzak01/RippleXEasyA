{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateDepositPreauth = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nfunction validateDepositPreauth(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.Authorize !== undefined && tx.Unauthorize !== undefined) {\n    throw new errors_1.ValidationError(\"DepositPreauth: can't provide both Authorize and Unauthorize fields\");\n  }\n  if (tx.Authorize === undefined && tx.Unauthorize === undefined) {\n    throw new errors_1.ValidationError('DepositPreauth: must provide either Authorize or Unauthorize field');\n  }\n  if (tx.Authorize !== undefined) {\n    if (typeof tx.Authorize !== 'string') {\n      throw new errors_1.ValidationError('DepositPreauth: Authorize must be a string');\n    }\n    if (tx.Account === tx.Authorize) {\n      throw new errors_1.ValidationError(\"DepositPreauth: Account can't preauthorize its own address\");\n    }\n  }\n  if (tx.Unauthorize !== undefined) {\n    if (typeof tx.Unauthorize !== 'string') {\n      throw new errors_1.ValidationError('DepositPreauth: Unauthorize must be a string');\n    }\n    if (tx.Account === tx.Unauthorize) {\n      throw new errors_1.ValidationError(\"DepositPreauth: Account can't unauthorize its own address\");\n    }\n  }\n}\nexports.validateDepositPreauth = validateDepositPreauth;","map":{"version":3,"names":["errors_1","require","common_1","validateDepositPreauth","tx","validateBaseTransaction","Authorize","undefined","Unauthorize","ValidationError","Account","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/depositPreauth.ts"],"sourcesContent":["import { ValidationError } from '../../errors'\n\nimport { BaseTransaction, validateBaseTransaction } from './common'\n\n/**\n * A DepositPreauth transaction gives another account pre-approval to deliver\n * payments to the sender of this transaction. This is only useful if the sender\n * of this transaction is using (or plans to use) Deposit Authorization.\n *\n * @category Transaction Models\n */\nexport interface DepositPreauth extends BaseTransaction {\n  TransactionType: 'DepositPreauth'\n  /** The XRP Ledger address of the sender to preauthorize. */\n  Authorize?: string\n  /**\n   * The XRP Ledger address of a sender whose preauthorization should be.\n   * revoked.\n   */\n  Unauthorize?: string\n}\n\n/**\n * Verify the form and type of a DepositPreauth at runtime.\n *\n * @param tx - A DepositPreauth Transaction.\n * @throws When the DepositPreauth is malformed.\n */\nexport function validateDepositPreauth(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  if (tx.Authorize !== undefined && tx.Unauthorize !== undefined) {\n    throw new ValidationError(\n      \"DepositPreauth: can't provide both Authorize and Unauthorize fields\",\n    )\n  }\n\n  if (tx.Authorize === undefined && tx.Unauthorize === undefined) {\n    throw new ValidationError(\n      'DepositPreauth: must provide either Authorize or Unauthorize field',\n    )\n  }\n\n  if (tx.Authorize !== undefined) {\n    if (typeof tx.Authorize !== 'string') {\n      throw new ValidationError('DepositPreauth: Authorize must be a string')\n    }\n\n    if (tx.Account === tx.Authorize) {\n      throw new ValidationError(\n        \"DepositPreauth: Account can't preauthorize its own address\",\n      )\n    }\n  }\n\n  if (tx.Unauthorize !== undefined) {\n    if (typeof tx.Unauthorize !== 'string') {\n      throw new ValidationError('DepositPreauth: Unauthorize must be a string')\n    }\n\n    if (tx.Account === tx.Unauthorize) {\n      throw new ValidationError(\n        \"DepositPreauth: Account can't unauthorize its own address\",\n      )\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAAC,QAAA,GAAAD,OAAA;AA0BA,SAAgBE,sBAAsBA,CAACC,EAA2B;EAChE,IAAAF,QAAA,CAAAG,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAIA,EAAE,CAACE,SAAS,KAAKC,SAAS,IAAIH,EAAE,CAACI,WAAW,KAAKD,SAAS,EAAE;IAC9D,MAAM,IAAIP,QAAA,CAAAS,eAAe,CACvB,qEAAqE,CACtE;;EAGH,IAAIL,EAAE,CAACE,SAAS,KAAKC,SAAS,IAAIH,EAAE,CAACI,WAAW,KAAKD,SAAS,EAAE;IAC9D,MAAM,IAAIP,QAAA,CAAAS,eAAe,CACvB,oEAAoE,CACrE;;EAGH,IAAIL,EAAE,CAACE,SAAS,KAAKC,SAAS,EAAE;IAC9B,IAAI,OAAOH,EAAE,CAACE,SAAS,KAAK,QAAQ,EAAE;MACpC,MAAM,IAAIN,QAAA,CAAAS,eAAe,CAAC,4CAA4C,CAAC;;IAGzE,IAAIL,EAAE,CAACM,OAAO,KAAKN,EAAE,CAACE,SAAS,EAAE;MAC/B,MAAM,IAAIN,QAAA,CAAAS,eAAe,CACvB,4DAA4D,CAC7D;;;EAIL,IAAIL,EAAE,CAACI,WAAW,KAAKD,SAAS,EAAE;IAChC,IAAI,OAAOH,EAAE,CAACI,WAAW,KAAK,QAAQ,EAAE;MACtC,MAAM,IAAIR,QAAA,CAAAS,eAAe,CAAC,8CAA8C,CAAC;;IAG3E,IAAIL,EAAE,CAACM,OAAO,KAAKN,EAAE,CAACI,WAAW,EAAE;MACjC,MAAM,IAAIR,QAAA,CAAAS,eAAe,CACvB,2DAA2D,CAC5D;;;AAGP;AAtCAE,OAAA,CAAAR,sBAAA,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
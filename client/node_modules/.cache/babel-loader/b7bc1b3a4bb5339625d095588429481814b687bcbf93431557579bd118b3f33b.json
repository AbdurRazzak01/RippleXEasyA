{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateOfferCancel = void 0;\nconst errors_1 = require(\"../../errors\");\nconst common_1 = require(\"./common\");\nfunction validateOfferCancel(tx) {\n  (0, common_1.validateBaseTransaction)(tx);\n  if (tx.OfferSequence === undefined) {\n    throw new errors_1.ValidationError('OfferCancel: missing field OfferSequence');\n  }\n  if (typeof tx.OfferSequence !== 'number') {\n    throw new errors_1.ValidationError('OfferCancel: OfferSequence must be a number');\n  }\n}\nexports.validateOfferCancel = validateOfferCancel;","map":{"version":3,"names":["errors_1","require","common_1","validateOfferCancel","tx","validateBaseTransaction","OfferSequence","undefined","ValidationError","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/offerCancel.ts"],"sourcesContent":["import { ValidationError } from '../../errors'\n\nimport { BaseTransaction, validateBaseTransaction } from './common'\n\n/**\n * An OfferCancel transaction removes an Offer object from the XRP Ledger.\n *\n *  @category Transaction Models\n */\nexport interface OfferCancel extends BaseTransaction {\n  TransactionType: 'OfferCancel'\n  /**\n   * The sequence number (or Ticket number) of a previous OfferCreate\n   * transaction. If specified, cancel any offer object in the ledger that was\n   * created by that transaction. It is not considered an error if the offer.\n   * specified does not exist.\n   */\n  OfferSequence: number\n}\n\n/**\n * Verify the form and type of an OfferCancel at runtime.\n *\n * @param tx - An OfferCancel Transaction.\n * @throws When the OfferCancel is Malformed.\n */\nexport function validateOfferCancel(tx: Record<string, unknown>): void {\n  validateBaseTransaction(tx)\n\n  if (tx.OfferSequence === undefined) {\n    throw new ValidationError('OfferCancel: missing field OfferSequence')\n  }\n\n  if (typeof tx.OfferSequence !== 'number') {\n    throw new ValidationError('OfferCancel: OfferSequence must be a number')\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAEA,MAAAC,QAAA,GAAAD,OAAA;AAwBA,SAAgBE,mBAAmBA,CAACC,EAA2B;EAC7D,IAAAF,QAAA,CAAAG,uBAAuB,EAACD,EAAE,CAAC;EAE3B,IAAIA,EAAE,CAACE,aAAa,KAAKC,SAAS,EAAE;IAClC,MAAM,IAAIP,QAAA,CAAAQ,eAAe,CAAC,0CAA0C,CAAC;;EAGvE,IAAI,OAAOJ,EAAE,CAACE,aAAa,KAAK,QAAQ,EAAE;IACxC,MAAM,IAAIN,QAAA,CAAAQ,eAAe,CAAC,6CAA6C,CAAC;;AAE5E;AAVAC,OAAA,CAAAN,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
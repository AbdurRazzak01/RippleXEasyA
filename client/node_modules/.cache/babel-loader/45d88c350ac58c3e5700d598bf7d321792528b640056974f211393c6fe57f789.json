{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/XrpWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Client, dropsToXrp, rippleTimeToISOTime } from 'xrpl';\nimport './XrpWallet.css'; // Import the CSS file with your styles\nimport ripple from \"./img/ripple.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst XrpWallet = () => {\n  _s();\n  const [accountInfo, setAccountInfo] = useState(null);\n  const [ledgerDetails, setLedgerDetails] = useState(null);\n  const [sendXrpForm, setSendXrpForm] = useState({\n    destination: '',\n    amount: '',\n    destinationTag: ''\n  });\n  const [client, setClient] = useState(null);\n  useEffect(() => {\n    const initializeClient = async () => {\n      const newClient = new Client('wss://s.altnet.rippletest.net:51233');\n      await newClient.connect();\n      setClient(newClient);\n    };\n    initializeClient();\n    return () => {\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSendXrpForm({\n      ...sendXrpForm,\n      [name]: value\n    });\n  };\n  const handleSendXrp = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    try {\n      if (!client) return; // Check if client is initialized\n      const txJson = {\n        TransactionType: 'Payment',\n        Account: sendXrpForm.classicAddress,\n        Destination: sendXrpForm.destination,\n        DestinationTag: sendXrpForm.destinationTag,\n        Amount: sendXrpForm.amount\n      };\n      const {\n        result\n      } = await client.submit(txJson);\n      console.log(result);\n      // Optionally, update account info after sending XRP\n      // Fetch account info again and update state\n    } catch (error) {\n      console.error('Error sending XRP:', error);\n      // Display an error message to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet_details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account Information:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), accountInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Account Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this), \" \", accountInfo.Account]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 28\n          }, this), \" \", dropsToXrp(accountInfo.Balance), \" XRP\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ledger_details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Latest Ledger Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), ledgerDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ledger Index:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 28\n          }, this), \" \", ledgerDetails.ledger_index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ledger Hash:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 28\n          }, this), \" \", ledgerDetails.ledger_hash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Close Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this), \" \", rippleTimeToISOTime(ledgerDetails.ledger_time)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send_xrp_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Send XRP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendXrp,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Destination Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"destination\",\n            value: sendXrpForm.destination,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Amount (XRP):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"amount\",\n            value: sendXrpForm.amount,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Destination Tag:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"destinationTag\",\n            value: sendXrpForm.destinationTag,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send XRP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(XrpWallet, \"lVxFrNur89AXzEAfRv9ElXihrqs=\");\n_c = XrpWallet;\nexport default XrpWallet;\nvar _c;\n$RefreshReg$(_c, \"XrpWallet\");","map":{"version":3,"names":["React","useEffect","useState","Client","dropsToXrp","rippleTimeToISOTime","ripple","jsxDEV","_jsxDEV","XrpWallet","_s","accountInfo","setAccountInfo","ledgerDetails","setLedgerDetails","sendXrpForm","setSendXrpForm","destination","amount","destinationTag","client","setClient","initializeClient","newClient","connect","disconnect","handleInputChange","e","name","value","target","handleSendXrp","preventDefault","txJson","TransactionType","Account","classicAddress","Destination","DestinationTag","Amount","result","submit","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Balance","ledger_index","ledger_hash","ledger_time","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/XrpWallet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Client, dropsToXrp, rippleTimeToISOTime } from 'xrpl';\nimport './XrpWallet.css'; // Import the CSS file with your styles\nimport ripple from \"./img/ripple.png\";\n\nconst XrpWallet = () => {\n    const [accountInfo, setAccountInfo] = useState(null);\n    const [ledgerDetails, setLedgerDetails] = useState(null);\n    const [sendXrpForm, setSendXrpForm] = useState({ destination: '', amount: '', destinationTag: '' });\n    const [client, setClient] = useState(null);\n\n    useEffect(() => {\n        const initializeClient = async () => {\n            const newClient = new Client('wss://s.altnet.rippletest.net:51233');\n            await newClient.connect();\n            setClient(newClient);\n        };\n\n        initializeClient();\n\n        return () => {\n            if (client) {\n                client.disconnect();\n            }\n        };\n    }, []);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setSendXrpForm({ ...sendXrpForm, [name]: value });\n    };\n\n    const handleSendXrp = async (e) => {\n        e.preventDefault(); // Prevent default form submission behavior\n\n        try {\n            if (!client) return; // Check if client is initialized\n            const txJson = {\n                TransactionType: 'Payment',\n                Account: sendXrpForm.classicAddress,\n                Destination: sendXrpForm.destination,\n                DestinationTag: sendXrpForm.destinationTag,\n                Amount: sendXrpForm.amount,\n            };\n\n            const { result } = await client.submit(txJson);\n            console.log(result);\n            // Optionally, update account info after sending XRP\n            // Fetch account info again and update state\n        } catch (error) {\n            console.error('Error sending XRP:', error);\n            // Display an error message to the user\n        }\n    };\n\n    return (\n        <div className=\"wallet_container\">\n            <div className=\"wallet_details\">\n                <h2>Account Information:</h2>\n                {accountInfo ? (\n                    <div>\n                        <p><strong>Account Address:</strong> {accountInfo.Account}</p>\n                        <p><strong>Balance:</strong> {dropsToXrp(accountInfo.Balance)} XRP</p>\n                    </div>\n                ) : null}\n            </div>\n            <div className=\"ledger_details\">\n                <h2>Latest Ledger Details:</h2>\n                {ledgerDetails && (\n                    <div>\n                        <p><strong>Ledger Index:</strong> {ledgerDetails.ledger_index}</p>\n                        <p><strong>Ledger Hash:</strong> {ledgerDetails.ledger_hash}</p>\n                        <p><strong>Close Time:</strong> {rippleTimeToISOTime(ledgerDetails.ledger_time)}</p>\n                    </div>\n                )}\n            </div>\n            <div className=\"send_xrp_container\">\n                <h2>Send XRP:</h2>\n                <form onSubmit={handleSendXrp}>\n                    <label>\n                        Destination Address:\n                        <input type=\"text\" name=\"destination\" value={sendXrpForm.destination} onChange={handleInputChange} required />\n                    </label>\n                    <label>\n                        Amount (XRP):\n                        <input type=\"text\" name=\"amount\" value={sendXrpForm.amount} onChange={handleInputChange} required />\n                    </label>\n                    <label>\n                        Destination Tag:\n                        <input type=\"text\" name=\"destinationTag\" value={sendXrpForm.destinationTag} onChange={handleInputChange} />\n                    </label>\n                    <button type=\"submit\">Send XRP</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default XrpWallet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
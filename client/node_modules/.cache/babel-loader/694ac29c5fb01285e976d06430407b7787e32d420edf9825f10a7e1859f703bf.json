{"ast":null,"code":"var _jsxFileName = \"/Users/mdabdurrazzak/XRPL_React_App/client/src/SignMessage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignMessage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [signature, setSignature] = useState('');\n  const [error, setError] = useState('');\n  const handleSignMessage = async () => {\n    try {\n      if (!message) {\n        setError('Please enter a message to sign.');\n        return;\n      }\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const account = accounts[0];\n\n        // Sign the message with MetaMask\n        const signedMessage = await web3.eth.personal.sign(message, account, '');\n        setSignature(signedMessage);\n        setError('');\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      console.error('Error signing message:', error);\n      setError(`Error signing message: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Message Signing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignMessage,\n      children: \"Sign Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), signature && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Signature: \", signature]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SignMessage, \"2kStd1UC2Jt0upwDd8NmnnckrCg=\");\n_c = SignMessage;\nexport default SignMessage;\nvar _c;\n$RefreshReg$(_c, \"SignMessage\");","map":{"version":3,"names":["React","useState","Web3","jsxDEV","_jsxDEV","SignMessage","_s","message","setMessage","signature","setSignature","error","setError","handleSignMessage","window","ethereum","web3","accounts","request","method","account","signedMessage","eth","personal","sign","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/client/src/SignMessage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Web3 from 'web3';\n\nconst SignMessage = () => {\n  const [message, setMessage] = useState('');\n  const [signature, setSignature] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSignMessage = async () => {\n    try {\n      if (!message) {\n        setError('Please enter a message to sign.');\n        return;\n      }\n\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const account = accounts[0];\n\n        // Sign the message with MetaMask\n        const signedMessage = await web3.eth.personal.sign(message, account, '');\n\n        setSignature(signedMessage);\n        setError('');\n      } else {\n        setError('MetaMask not found. Please install MetaMask to use this feature.');\n      }\n    } catch (error) {\n      console.error('Error signing message:', error);\n      setError(`Error signing message: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Message Signing</h2>\n      <div>\n        <label>Message:</label>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n      </div>\n      <button onClick={handleSignMessage}>Sign Message</button>\n      {signature && (\n        <div>\n          <p>Signature: {signature}</p>\n        </div>\n      )}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default SignMessage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
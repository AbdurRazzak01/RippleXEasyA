{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Vector256 = exports.UInt64 = exports.UInt32 = exports.UInt16 = exports.UInt8 = exports.STObject = exports.STArray = exports.PathSet = exports.Hash256 = exports.Hash160 = exports.Hash128 = exports.Currency = exports.Blob = exports.Amount = exports.AccountID = exports.coreTypes = void 0;\nconst account_id_1 = require(\"./account-id\");\nObject.defineProperty(exports, \"AccountID\", {\n  enumerable: true,\n  get: function () {\n    return account_id_1.AccountID;\n  }\n});\nconst amount_1 = require(\"./amount\");\nObject.defineProperty(exports, \"Amount\", {\n  enumerable: true,\n  get: function () {\n    return amount_1.Amount;\n  }\n});\nconst blob_1 = require(\"./blob\");\nObject.defineProperty(exports, \"Blob\", {\n  enumerable: true,\n  get: function () {\n    return blob_1.Blob;\n  }\n});\nconst currency_1 = require(\"./currency\");\nObject.defineProperty(exports, \"Currency\", {\n  enumerable: true,\n  get: function () {\n    return currency_1.Currency;\n  }\n});\nconst hash_128_1 = require(\"./hash-128\");\nObject.defineProperty(exports, \"Hash128\", {\n  enumerable: true,\n  get: function () {\n    return hash_128_1.Hash128;\n  }\n});\nconst hash_160_1 = require(\"./hash-160\");\nObject.defineProperty(exports, \"Hash160\", {\n  enumerable: true,\n  get: function () {\n    return hash_160_1.Hash160;\n  }\n});\nconst hash_256_1 = require(\"./hash-256\");\nObject.defineProperty(exports, \"Hash256\", {\n  enumerable: true,\n  get: function () {\n    return hash_256_1.Hash256;\n  }\n});\nconst issue_1 = require(\"./issue\");\nconst path_set_1 = require(\"./path-set\");\nObject.defineProperty(exports, \"PathSet\", {\n  enumerable: true,\n  get: function () {\n    return path_set_1.PathSet;\n  }\n});\nconst st_array_1 = require(\"./st-array\");\nObject.defineProperty(exports, \"STArray\", {\n  enumerable: true,\n  get: function () {\n    return st_array_1.STArray;\n  }\n});\nconst st_object_1 = require(\"./st-object\");\nObject.defineProperty(exports, \"STObject\", {\n  enumerable: true,\n  get: function () {\n    return st_object_1.STObject;\n  }\n});\nconst uint_16_1 = require(\"./uint-16\");\nObject.defineProperty(exports, \"UInt16\", {\n  enumerable: true,\n  get: function () {\n    return uint_16_1.UInt16;\n  }\n});\nconst uint_32_1 = require(\"./uint-32\");\nObject.defineProperty(exports, \"UInt32\", {\n  enumerable: true,\n  get: function () {\n    return uint_32_1.UInt32;\n  }\n});\nconst uint_64_1 = require(\"./uint-64\");\nObject.defineProperty(exports, \"UInt64\", {\n  enumerable: true,\n  get: function () {\n    return uint_64_1.UInt64;\n  }\n});\nconst uint_8_1 = require(\"./uint-8\");\nObject.defineProperty(exports, \"UInt8\", {\n  enumerable: true,\n  get: function () {\n    return uint_8_1.UInt8;\n  }\n});\nconst vector_256_1 = require(\"./vector-256\");\nObject.defineProperty(exports, \"Vector256\", {\n  enumerable: true,\n  get: function () {\n    return vector_256_1.Vector256;\n  }\n});\nconst xchain_bridge_1 = require(\"./xchain-bridge\");\nconst enums_1 = require(\"../enums\");\nconst coreTypes = {\n  AccountID: account_id_1.AccountID,\n  Amount: amount_1.Amount,\n  Blob: blob_1.Blob,\n  Currency: currency_1.Currency,\n  Hash128: hash_128_1.Hash128,\n  Hash160: hash_160_1.Hash160,\n  Hash256: hash_256_1.Hash256,\n  Issue: issue_1.Issue,\n  PathSet: path_set_1.PathSet,\n  STArray: st_array_1.STArray,\n  STObject: st_object_1.STObject,\n  UInt8: uint_8_1.UInt8,\n  UInt16: uint_16_1.UInt16,\n  UInt32: uint_32_1.UInt32,\n  UInt64: uint_64_1.UInt64,\n  Vector256: vector_256_1.Vector256,\n  XChainBridge: xchain_bridge_1.XChainBridge\n};\nexports.coreTypes = coreTypes;\n// Ensures that the DEFAULT_DEFINITIONS object connects these types to fields for serializing/deserializing\n// This is done here instead of in enums/index.ts to avoid a circular dependency\n// because some of the above types depend on BinarySerializer which depends on enums/index.ts.\nenums_1.DEFAULT_DEFINITIONS.associateTypes(coreTypes);","map":{"version":3,"names":["account_id_1","require","Object","defineProperty","exports","enumerable","get","AccountID","amount_1","Amount","blob_1","Blob","currency_1","Currency","hash_128_1","Hash128","hash_160_1","Hash160","hash_256_1","Hash256","issue_1","path_set_1","PathSet","st_array_1","STArray","st_object_1","STObject","uint_16_1","UInt16","uint_32_1","UInt32","uint_64_1","UInt64","uint_8_1","UInt8","vector_256_1","Vector256","xchain_bridge_1","enums_1","coreTypes","Issue","XChainBridge","DEFAULT_DEFINITIONS","associateTypes"],"sources":["/Users/mdabdurrazzak/node_modules/ripple-binary-codec/src/types/index.ts"],"sourcesContent":["import { AccountID } from './account-id'\nimport { Amount } from './amount'\nimport { Blob } from './blob'\nimport { Currency } from './currency'\nimport { Hash128 } from './hash-128'\nimport { Hash160 } from './hash-160'\nimport { Hash256 } from './hash-256'\nimport { Issue } from './issue'\nimport { PathSet } from './path-set'\nimport { STArray } from './st-array'\nimport { STObject } from './st-object'\nimport { UInt16 } from './uint-16'\nimport { UInt32 } from './uint-32'\nimport { UInt64 } from './uint-64'\nimport { UInt8 } from './uint-8'\nimport { Vector256 } from './vector-256'\nimport { XChainBridge } from './xchain-bridge'\nimport { type SerializedType } from './serialized-type'\nimport { DEFAULT_DEFINITIONS } from '../enums'\n\nconst coreTypes: Record<string, typeof SerializedType> = {\n  AccountID,\n  Amount,\n  Blob,\n  Currency,\n  Hash128,\n  Hash160,\n  Hash256,\n  Issue,\n  PathSet,\n  STArray,\n  STObject,\n  UInt8,\n  UInt16,\n  UInt32,\n  UInt64,\n  Vector256,\n  XChainBridge,\n}\n\n// Ensures that the DEFAULT_DEFINITIONS object connects these types to fields for serializing/deserializing\n// This is done here instead of in enums/index.ts to avoid a circular dependency\n// because some of the above types depend on BinarySerializer which depends on enums/index.ts.\nDEFAULT_DEFINITIONS.associateTypes(coreTypes)\n\nexport {\n  coreTypes,\n  AccountID,\n  Amount,\n  Blob,\n  Currency,\n  Hash128,\n  Hash160,\n  Hash256,\n  PathSet,\n  STArray,\n  STObject,\n  UInt8,\n  UInt16,\n  UInt32,\n  UInt64,\n  Vector256,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
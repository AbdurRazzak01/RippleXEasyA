{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst sha512_1 = require(\"@xrplf/isomorphic/sha512\");\nconst utils_1 = require(\"@noble/curves/abstract/utils\");\nclass Sha512 {\n  constructor() {\n    // instantiate empty sha512 hash\n    this.hash = sha512_1.sha512.create();\n  }\n  static half(input) {\n    return new Sha512().add(input).first256();\n  }\n  add(bytes) {\n    this.hash.update(bytes);\n    return this;\n  }\n  addU32(i) {\n    const buffer = new Uint8Array(4);\n    new DataView(buffer.buffer).setUint32(0, i);\n    return this.add(buffer);\n  }\n  finish() {\n    return this.hash.digest();\n  }\n  first256() {\n    return this.finish().slice(0, 32);\n  }\n  first256BigInt() {\n    return (0, utils_1.bytesToNumberBE)(this.first256());\n  }\n}\nexports.default = Sha512;","map":{"version":3,"names":["sha512_1","require","utils_1","Sha512","constructor","hash","sha512","create","half","input","add","first256","bytes","update","addU32","i","buffer","Uint8Array","DataView","setUint32","finish","digest","slice","first256BigInt","bytesToNumberBE","exports","default"],"sources":["/Users/mdabdurrazzak/node_modules/ripple-keypairs/src/utils/Sha512.ts"],"sourcesContent":["import { sha512 } from '@xrplf/isomorphic/sha512'\nimport { bytesToNumberBE } from '@noble/curves/abstract/utils'\n\ntype Input = Uint8Array | number[] | string\n\nexport default class Sha512 {\n  // instantiate empty sha512 hash\n  hash = sha512.create()\n\n  static half(input: Input): Uint8Array {\n    return new Sha512().add(input).first256()\n  }\n\n  add(bytes: Input): this {\n    this.hash.update(bytes)\n    return this\n  }\n\n  addU32(i: number): this {\n    const buffer = new Uint8Array(4)\n    new DataView(buffer.buffer).setUint32(0, i)\n    return this.add(buffer)\n  }\n\n  finish(): Uint8Array {\n    return this.hash.digest()\n  }\n\n  first256(): Uint8Array {\n    return this.finish().slice(0, 32)\n  }\n\n  first256BigInt(): bigint {\n    return bytesToNumberBE(this.first256())\n  }\n}\n"],"mappings":";;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAIA,MAAqBE,MAAM;EAA3BC,YAAA;IACE;IACA,KAAAC,IAAI,GAAGL,QAAA,CAAAM,MAAM,CAACC,MAAM,EAAE;EA4BxB;EA1BE,OAAOC,IAAIA,CAACC,KAAY;IACtB,OAAO,IAAIN,MAAM,EAAE,CAACO,GAAG,CAACD,KAAK,CAAC,CAACE,QAAQ,EAAE;EAC3C;EAEAD,GAAGA,CAACE,KAAY;IACd,IAAI,CAACP,IAAI,CAACQ,MAAM,CAACD,KAAK,CAAC;IACvB,OAAO,IAAI;EACb;EAEAE,MAAMA,CAACC,CAAS;IACd,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;IAChC,IAAIC,QAAQ,CAACF,MAAM,CAACA,MAAM,CAAC,CAACG,SAAS,CAAC,CAAC,EAAEJ,CAAC,CAAC;IAC3C,OAAO,IAAI,CAACL,GAAG,CAACM,MAAM,CAAC;EACzB;EAEAI,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACf,IAAI,CAACgB,MAAM,EAAE;EAC3B;EAEAV,QAAQA,CAAA;IACN,OAAO,IAAI,CAACS,MAAM,EAAE,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACnC;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAArB,OAAA,CAAAsB,eAAe,EAAC,IAAI,CAACb,QAAQ,EAAE,CAAC;EACzC;;AA7BFc,OAAA,CAAAC,OAAA,GAAAvB,MAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
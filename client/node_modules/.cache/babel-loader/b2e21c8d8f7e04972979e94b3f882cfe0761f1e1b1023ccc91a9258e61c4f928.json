{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EnableAmendmentFlags = void 0;\nvar EnableAmendmentFlags;\n(function (EnableAmendmentFlags) {\n  EnableAmendmentFlags[EnableAmendmentFlags[\"tfGotMajority\"] = 65536] = \"tfGotMajority\";\n  EnableAmendmentFlags[EnableAmendmentFlags[\"tfLostMajority\"] = 131072] = \"tfLostMajority\";\n})(EnableAmendmentFlags || (exports.EnableAmendmentFlags = EnableAmendmentFlags = {}));","map":{"version":3,"names":["EnableAmendmentFlags","exports"],"sources":["/Users/mdabdurrazzak/XRPL_React_App/node_modules/xrpl/src/models/transactions/enableAmendment.ts"],"sourcesContent":["import { BaseTransaction } from './common'\n\n/**\n * Transaction Flags for an EnableAmendment Transaction.\n *\n * @category Transaction Flags\n */\nexport enum EnableAmendmentFlags {\n  /** Support for this amendment increased to at least 80% of trusted validators starting with this ledger version. */\n  tfGotMajority = 0x00010000,\n  /** Support for this amendment decreased to less than 80% of trusted validators starting with this ledger version. */\n  tfLostMajority = 0x00020000,\n}\n\n/**\n * Mark a change in the status of a proposed amendment when it gains majority, looses majority, or is enabled.\n *\n * @category Pseudo Transaction Models\n */\nexport interface EnableAmendment extends BaseTransaction {\n  TransactionType: 'EnableAmendment'\n  /** A unique identifier for the amendment. */\n  Amendment: string\n  /** The ledger index where this pseudo-transaction appears. */\n  LedgerSequence: number\n}\n"],"mappings":";;;;;;AAOA,IAAYA,oBAKX;AALD,WAAYA,oBAAoB;EAE9BA,oBAAA,CAAAA,oBAAA,4CAA0B;EAE1BA,oBAAA,CAAAA,oBAAA,+CAA2B;AAC7B,CAAC,EALWA,oBAAoB,KAAAC,OAAA,CAAAD,oBAAA,GAApBA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}